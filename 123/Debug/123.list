
123.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000b4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002ab0  080000b4  080000b4  000010b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000184  08002b64  08002b64  00003b64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002ce8  08002ce8  00004050  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08002ce8  08002ce8  00004050  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08002ce8  08002ce8  00004050  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002ce8  08002ce8  00003ce8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08002cec  08002cec  00003cec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000050  20000000  08002cf0  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000017c  20000050  08002d40  00004050  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001cc  08002d40  000041cc  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00004050  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001bbb  00000000  00000000  00004078  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000008a9  00000000  00000000  00005c33  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000001e0  00000000  00000000  000064e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000166  00000000  00000000  000066c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000021eb  00000000  00000000  00006826  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002c6e  00000000  00000000  00008a11  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00008488  00000000  00000000  0000b67f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00013b07  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000904  00000000  00000000  00013b4c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000052  00000000  00000000  00014450  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000b4 <__do_global_dtors_aux>:
 80000b4:	b510      	push	{r4, lr}
 80000b6:	4c06      	ldr	r4, [pc, #24]	@ (80000d0 <__do_global_dtors_aux+0x1c>)
 80000b8:	7823      	ldrb	r3, [r4, #0]
 80000ba:	2b00      	cmp	r3, #0
 80000bc:	d107      	bne.n	80000ce <__do_global_dtors_aux+0x1a>
 80000be:	4b05      	ldr	r3, [pc, #20]	@ (80000d4 <__do_global_dtors_aux+0x20>)
 80000c0:	2b00      	cmp	r3, #0
 80000c2:	d002      	beq.n	80000ca <__do_global_dtors_aux+0x16>
 80000c4:	4804      	ldr	r0, [pc, #16]	@ (80000d8 <__do_global_dtors_aux+0x24>)
 80000c6:	e000      	b.n	80000ca <__do_global_dtors_aux+0x16>
 80000c8:	bf00      	nop
 80000ca:	2301      	movs	r3, #1
 80000cc:	7023      	strb	r3, [r4, #0]
 80000ce:	bd10      	pop	{r4, pc}
 80000d0:	20000050 	.word	0x20000050
 80000d4:	00000000 	.word	0x00000000
 80000d8:	08002b4c 	.word	0x08002b4c

080000dc <frame_dummy>:
 80000dc:	4b04      	ldr	r3, [pc, #16]	@ (80000f0 <frame_dummy+0x14>)
 80000de:	b510      	push	{r4, lr}
 80000e0:	2b00      	cmp	r3, #0
 80000e2:	d003      	beq.n	80000ec <frame_dummy+0x10>
 80000e4:	4903      	ldr	r1, [pc, #12]	@ (80000f4 <frame_dummy+0x18>)
 80000e6:	4804      	ldr	r0, [pc, #16]	@ (80000f8 <frame_dummy+0x1c>)
 80000e8:	e000      	b.n	80000ec <frame_dummy+0x10>
 80000ea:	bf00      	nop
 80000ec:	bd10      	pop	{r4, pc}
 80000ee:	46c0      	nop			@ (mov r8, r8)
 80000f0:	00000000 	.word	0x00000000
 80000f4:	20000054 	.word	0x20000054
 80000f8:	08002b4c 	.word	0x08002b4c

080000fc <__udivsi3>:
 80000fc:	2200      	movs	r2, #0
 80000fe:	0843      	lsrs	r3, r0, #1
 8000100:	428b      	cmp	r3, r1
 8000102:	d374      	bcc.n	80001ee <__udivsi3+0xf2>
 8000104:	0903      	lsrs	r3, r0, #4
 8000106:	428b      	cmp	r3, r1
 8000108:	d35f      	bcc.n	80001ca <__udivsi3+0xce>
 800010a:	0a03      	lsrs	r3, r0, #8
 800010c:	428b      	cmp	r3, r1
 800010e:	d344      	bcc.n	800019a <__udivsi3+0x9e>
 8000110:	0b03      	lsrs	r3, r0, #12
 8000112:	428b      	cmp	r3, r1
 8000114:	d328      	bcc.n	8000168 <__udivsi3+0x6c>
 8000116:	0c03      	lsrs	r3, r0, #16
 8000118:	428b      	cmp	r3, r1
 800011a:	d30d      	bcc.n	8000138 <__udivsi3+0x3c>
 800011c:	22ff      	movs	r2, #255	@ 0xff
 800011e:	0209      	lsls	r1, r1, #8
 8000120:	ba12      	rev	r2, r2
 8000122:	0c03      	lsrs	r3, r0, #16
 8000124:	428b      	cmp	r3, r1
 8000126:	d302      	bcc.n	800012e <__udivsi3+0x32>
 8000128:	1212      	asrs	r2, r2, #8
 800012a:	0209      	lsls	r1, r1, #8
 800012c:	d065      	beq.n	80001fa <__udivsi3+0xfe>
 800012e:	0b03      	lsrs	r3, r0, #12
 8000130:	428b      	cmp	r3, r1
 8000132:	d319      	bcc.n	8000168 <__udivsi3+0x6c>
 8000134:	e000      	b.n	8000138 <__udivsi3+0x3c>
 8000136:	0a09      	lsrs	r1, r1, #8
 8000138:	0bc3      	lsrs	r3, r0, #15
 800013a:	428b      	cmp	r3, r1
 800013c:	d301      	bcc.n	8000142 <__udivsi3+0x46>
 800013e:	03cb      	lsls	r3, r1, #15
 8000140:	1ac0      	subs	r0, r0, r3
 8000142:	4152      	adcs	r2, r2
 8000144:	0b83      	lsrs	r3, r0, #14
 8000146:	428b      	cmp	r3, r1
 8000148:	d301      	bcc.n	800014e <__udivsi3+0x52>
 800014a:	038b      	lsls	r3, r1, #14
 800014c:	1ac0      	subs	r0, r0, r3
 800014e:	4152      	adcs	r2, r2
 8000150:	0b43      	lsrs	r3, r0, #13
 8000152:	428b      	cmp	r3, r1
 8000154:	d301      	bcc.n	800015a <__udivsi3+0x5e>
 8000156:	034b      	lsls	r3, r1, #13
 8000158:	1ac0      	subs	r0, r0, r3
 800015a:	4152      	adcs	r2, r2
 800015c:	0b03      	lsrs	r3, r0, #12
 800015e:	428b      	cmp	r3, r1
 8000160:	d301      	bcc.n	8000166 <__udivsi3+0x6a>
 8000162:	030b      	lsls	r3, r1, #12
 8000164:	1ac0      	subs	r0, r0, r3
 8000166:	4152      	adcs	r2, r2
 8000168:	0ac3      	lsrs	r3, r0, #11
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x76>
 800016e:	02cb      	lsls	r3, r1, #11
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0a83      	lsrs	r3, r0, #10
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x82>
 800017a:	028b      	lsls	r3, r1, #10
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0a43      	lsrs	r3, r0, #9
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x8e>
 8000186:	024b      	lsls	r3, r1, #9
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0a03      	lsrs	r3, r0, #8
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x9a>
 8000192:	020b      	lsls	r3, r1, #8
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	d2cd      	bcs.n	8000136 <__udivsi3+0x3a>
 800019a:	09c3      	lsrs	r3, r0, #7
 800019c:	428b      	cmp	r3, r1
 800019e:	d301      	bcc.n	80001a4 <__udivsi3+0xa8>
 80001a0:	01cb      	lsls	r3, r1, #7
 80001a2:	1ac0      	subs	r0, r0, r3
 80001a4:	4152      	adcs	r2, r2
 80001a6:	0983      	lsrs	r3, r0, #6
 80001a8:	428b      	cmp	r3, r1
 80001aa:	d301      	bcc.n	80001b0 <__udivsi3+0xb4>
 80001ac:	018b      	lsls	r3, r1, #6
 80001ae:	1ac0      	subs	r0, r0, r3
 80001b0:	4152      	adcs	r2, r2
 80001b2:	0943      	lsrs	r3, r0, #5
 80001b4:	428b      	cmp	r3, r1
 80001b6:	d301      	bcc.n	80001bc <__udivsi3+0xc0>
 80001b8:	014b      	lsls	r3, r1, #5
 80001ba:	1ac0      	subs	r0, r0, r3
 80001bc:	4152      	adcs	r2, r2
 80001be:	0903      	lsrs	r3, r0, #4
 80001c0:	428b      	cmp	r3, r1
 80001c2:	d301      	bcc.n	80001c8 <__udivsi3+0xcc>
 80001c4:	010b      	lsls	r3, r1, #4
 80001c6:	1ac0      	subs	r0, r0, r3
 80001c8:	4152      	adcs	r2, r2
 80001ca:	08c3      	lsrs	r3, r0, #3
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xd8>
 80001d0:	00cb      	lsls	r3, r1, #3
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	0883      	lsrs	r3, r0, #2
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xe4>
 80001dc:	008b      	lsls	r3, r1, #2
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0843      	lsrs	r3, r0, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xf0>
 80001e8:	004b      	lsls	r3, r1, #1
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	1a41      	subs	r1, r0, r1
 80001f0:	d200      	bcs.n	80001f4 <__udivsi3+0xf8>
 80001f2:	4601      	mov	r1, r0
 80001f4:	4152      	adcs	r2, r2
 80001f6:	4610      	mov	r0, r2
 80001f8:	4770      	bx	lr
 80001fa:	e7ff      	b.n	80001fc <__udivsi3+0x100>
 80001fc:	b501      	push	{r0, lr}
 80001fe:	2000      	movs	r0, #0
 8000200:	f000 f806 	bl	8000210 <__aeabi_idiv0>
 8000204:	bd02      	pop	{r1, pc}
 8000206:	46c0      	nop			@ (mov r8, r8)

08000208 <__aeabi_uidivmod>:
 8000208:	2900      	cmp	r1, #0
 800020a:	d0f7      	beq.n	80001fc <__udivsi3+0x100>
 800020c:	e776      	b.n	80000fc <__udivsi3>
 800020e:	4770      	bx	lr

08000210 <__aeabi_idiv0>:
 8000210:	4770      	bx	lr
 8000212:	46c0      	nop			@ (mov r8, r8)

08000214 <__aeabi_d2uiz>:
 8000214:	b570      	push	{r4, r5, r6, lr}
 8000216:	2200      	movs	r2, #0
 8000218:	4b0c      	ldr	r3, [pc, #48]	@ (800024c <__aeabi_d2uiz+0x38>)
 800021a:	0004      	movs	r4, r0
 800021c:	000d      	movs	r5, r1
 800021e:	f001 fae1 	bl	80017e4 <__aeabi_dcmpge>
 8000222:	2800      	cmp	r0, #0
 8000224:	d104      	bne.n	8000230 <__aeabi_d2uiz+0x1c>
 8000226:	0020      	movs	r0, r4
 8000228:	0029      	movs	r1, r5
 800022a:	f001 fa19 	bl	8001660 <__aeabi_d2iz>
 800022e:	bd70      	pop	{r4, r5, r6, pc}
 8000230:	4b06      	ldr	r3, [pc, #24]	@ (800024c <__aeabi_d2uiz+0x38>)
 8000232:	2200      	movs	r2, #0
 8000234:	0020      	movs	r0, r4
 8000236:	0029      	movs	r1, r5
 8000238:	f000 fe08 	bl	8000e4c <__aeabi_dsub>
 800023c:	f001 fa10 	bl	8001660 <__aeabi_d2iz>
 8000240:	2380      	movs	r3, #128	@ 0x80
 8000242:	061b      	lsls	r3, r3, #24
 8000244:	469c      	mov	ip, r3
 8000246:	4460      	add	r0, ip
 8000248:	e7f1      	b.n	800022e <__aeabi_d2uiz+0x1a>
 800024a:	46c0      	nop			@ (mov r8, r8)
 800024c:	41e00000 	.word	0x41e00000

08000250 <__aeabi_ddiv>:
 8000250:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000252:	46de      	mov	lr, fp
 8000254:	4645      	mov	r5, r8
 8000256:	4657      	mov	r7, sl
 8000258:	464e      	mov	r6, r9
 800025a:	b5e0      	push	{r5, r6, r7, lr}
 800025c:	b087      	sub	sp, #28
 800025e:	9200      	str	r2, [sp, #0]
 8000260:	9301      	str	r3, [sp, #4]
 8000262:	030b      	lsls	r3, r1, #12
 8000264:	0b1b      	lsrs	r3, r3, #12
 8000266:	469b      	mov	fp, r3
 8000268:	0fca      	lsrs	r2, r1, #31
 800026a:	004b      	lsls	r3, r1, #1
 800026c:	0004      	movs	r4, r0
 800026e:	4680      	mov	r8, r0
 8000270:	0d5b      	lsrs	r3, r3, #21
 8000272:	9202      	str	r2, [sp, #8]
 8000274:	d100      	bne.n	8000278 <__aeabi_ddiv+0x28>
 8000276:	e098      	b.n	80003aa <__aeabi_ddiv+0x15a>
 8000278:	4a7c      	ldr	r2, [pc, #496]	@ (800046c <__aeabi_ddiv+0x21c>)
 800027a:	4293      	cmp	r3, r2
 800027c:	d037      	beq.n	80002ee <__aeabi_ddiv+0x9e>
 800027e:	4659      	mov	r1, fp
 8000280:	0f42      	lsrs	r2, r0, #29
 8000282:	00c9      	lsls	r1, r1, #3
 8000284:	430a      	orrs	r2, r1
 8000286:	2180      	movs	r1, #128	@ 0x80
 8000288:	0409      	lsls	r1, r1, #16
 800028a:	4311      	orrs	r1, r2
 800028c:	00c2      	lsls	r2, r0, #3
 800028e:	4690      	mov	r8, r2
 8000290:	4a77      	ldr	r2, [pc, #476]	@ (8000470 <__aeabi_ddiv+0x220>)
 8000292:	4689      	mov	r9, r1
 8000294:	4692      	mov	sl, r2
 8000296:	449a      	add	sl, r3
 8000298:	2300      	movs	r3, #0
 800029a:	2400      	movs	r4, #0
 800029c:	9303      	str	r3, [sp, #12]
 800029e:	9e00      	ldr	r6, [sp, #0]
 80002a0:	9f01      	ldr	r7, [sp, #4]
 80002a2:	033b      	lsls	r3, r7, #12
 80002a4:	0b1b      	lsrs	r3, r3, #12
 80002a6:	469b      	mov	fp, r3
 80002a8:	007b      	lsls	r3, r7, #1
 80002aa:	0030      	movs	r0, r6
 80002ac:	0d5b      	lsrs	r3, r3, #21
 80002ae:	0ffd      	lsrs	r5, r7, #31
 80002b0:	2b00      	cmp	r3, #0
 80002b2:	d059      	beq.n	8000368 <__aeabi_ddiv+0x118>
 80002b4:	4a6d      	ldr	r2, [pc, #436]	@ (800046c <__aeabi_ddiv+0x21c>)
 80002b6:	4293      	cmp	r3, r2
 80002b8:	d048      	beq.n	800034c <__aeabi_ddiv+0xfc>
 80002ba:	4659      	mov	r1, fp
 80002bc:	0f72      	lsrs	r2, r6, #29
 80002be:	00c9      	lsls	r1, r1, #3
 80002c0:	430a      	orrs	r2, r1
 80002c2:	2180      	movs	r1, #128	@ 0x80
 80002c4:	0409      	lsls	r1, r1, #16
 80002c6:	4311      	orrs	r1, r2
 80002c8:	468b      	mov	fp, r1
 80002ca:	4969      	ldr	r1, [pc, #420]	@ (8000470 <__aeabi_ddiv+0x220>)
 80002cc:	00f2      	lsls	r2, r6, #3
 80002ce:	468c      	mov	ip, r1
 80002d0:	4651      	mov	r1, sl
 80002d2:	4463      	add	r3, ip
 80002d4:	1acb      	subs	r3, r1, r3
 80002d6:	469a      	mov	sl, r3
 80002d8:	2100      	movs	r1, #0
 80002da:	9e02      	ldr	r6, [sp, #8]
 80002dc:	406e      	eors	r6, r5
 80002de:	b2f6      	uxtb	r6, r6
 80002e0:	2c0f      	cmp	r4, #15
 80002e2:	d900      	bls.n	80002e6 <__aeabi_ddiv+0x96>
 80002e4:	e0ce      	b.n	8000484 <__aeabi_ddiv+0x234>
 80002e6:	4b63      	ldr	r3, [pc, #396]	@ (8000474 <__aeabi_ddiv+0x224>)
 80002e8:	00a4      	lsls	r4, r4, #2
 80002ea:	591b      	ldr	r3, [r3, r4]
 80002ec:	469f      	mov	pc, r3
 80002ee:	465a      	mov	r2, fp
 80002f0:	4302      	orrs	r2, r0
 80002f2:	4691      	mov	r9, r2
 80002f4:	d000      	beq.n	80002f8 <__aeabi_ddiv+0xa8>
 80002f6:	e090      	b.n	800041a <__aeabi_ddiv+0x1ca>
 80002f8:	469a      	mov	sl, r3
 80002fa:	2302      	movs	r3, #2
 80002fc:	4690      	mov	r8, r2
 80002fe:	2408      	movs	r4, #8
 8000300:	9303      	str	r3, [sp, #12]
 8000302:	e7cc      	b.n	800029e <__aeabi_ddiv+0x4e>
 8000304:	46cb      	mov	fp, r9
 8000306:	4642      	mov	r2, r8
 8000308:	9d02      	ldr	r5, [sp, #8]
 800030a:	9903      	ldr	r1, [sp, #12]
 800030c:	2902      	cmp	r1, #2
 800030e:	d100      	bne.n	8000312 <__aeabi_ddiv+0xc2>
 8000310:	e1de      	b.n	80006d0 <__aeabi_ddiv+0x480>
 8000312:	2903      	cmp	r1, #3
 8000314:	d100      	bne.n	8000318 <__aeabi_ddiv+0xc8>
 8000316:	e08d      	b.n	8000434 <__aeabi_ddiv+0x1e4>
 8000318:	2901      	cmp	r1, #1
 800031a:	d000      	beq.n	800031e <__aeabi_ddiv+0xce>
 800031c:	e179      	b.n	8000612 <__aeabi_ddiv+0x3c2>
 800031e:	002e      	movs	r6, r5
 8000320:	2200      	movs	r2, #0
 8000322:	2300      	movs	r3, #0
 8000324:	2400      	movs	r4, #0
 8000326:	4690      	mov	r8, r2
 8000328:	051b      	lsls	r3, r3, #20
 800032a:	4323      	orrs	r3, r4
 800032c:	07f6      	lsls	r6, r6, #31
 800032e:	4333      	orrs	r3, r6
 8000330:	4640      	mov	r0, r8
 8000332:	0019      	movs	r1, r3
 8000334:	b007      	add	sp, #28
 8000336:	bcf0      	pop	{r4, r5, r6, r7}
 8000338:	46bb      	mov	fp, r7
 800033a:	46b2      	mov	sl, r6
 800033c:	46a9      	mov	r9, r5
 800033e:	46a0      	mov	r8, r4
 8000340:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000342:	2200      	movs	r2, #0
 8000344:	2400      	movs	r4, #0
 8000346:	4690      	mov	r8, r2
 8000348:	4b48      	ldr	r3, [pc, #288]	@ (800046c <__aeabi_ddiv+0x21c>)
 800034a:	e7ed      	b.n	8000328 <__aeabi_ddiv+0xd8>
 800034c:	465a      	mov	r2, fp
 800034e:	9b00      	ldr	r3, [sp, #0]
 8000350:	431a      	orrs	r2, r3
 8000352:	4b49      	ldr	r3, [pc, #292]	@ (8000478 <__aeabi_ddiv+0x228>)
 8000354:	469c      	mov	ip, r3
 8000356:	44e2      	add	sl, ip
 8000358:	2a00      	cmp	r2, #0
 800035a:	d159      	bne.n	8000410 <__aeabi_ddiv+0x1c0>
 800035c:	2302      	movs	r3, #2
 800035e:	431c      	orrs	r4, r3
 8000360:	2300      	movs	r3, #0
 8000362:	2102      	movs	r1, #2
 8000364:	469b      	mov	fp, r3
 8000366:	e7b8      	b.n	80002da <__aeabi_ddiv+0x8a>
 8000368:	465a      	mov	r2, fp
 800036a:	9b00      	ldr	r3, [sp, #0]
 800036c:	431a      	orrs	r2, r3
 800036e:	d049      	beq.n	8000404 <__aeabi_ddiv+0x1b4>
 8000370:	465b      	mov	r3, fp
 8000372:	2b00      	cmp	r3, #0
 8000374:	d100      	bne.n	8000378 <__aeabi_ddiv+0x128>
 8000376:	e19c      	b.n	80006b2 <__aeabi_ddiv+0x462>
 8000378:	4658      	mov	r0, fp
 800037a:	f001 fa3d 	bl	80017f8 <__clzsi2>
 800037e:	0002      	movs	r2, r0
 8000380:	0003      	movs	r3, r0
 8000382:	3a0b      	subs	r2, #11
 8000384:	271d      	movs	r7, #29
 8000386:	9e00      	ldr	r6, [sp, #0]
 8000388:	1aba      	subs	r2, r7, r2
 800038a:	0019      	movs	r1, r3
 800038c:	4658      	mov	r0, fp
 800038e:	40d6      	lsrs	r6, r2
 8000390:	3908      	subs	r1, #8
 8000392:	4088      	lsls	r0, r1
 8000394:	0032      	movs	r2, r6
 8000396:	4302      	orrs	r2, r0
 8000398:	4693      	mov	fp, r2
 800039a:	9a00      	ldr	r2, [sp, #0]
 800039c:	408a      	lsls	r2, r1
 800039e:	4937      	ldr	r1, [pc, #220]	@ (800047c <__aeabi_ddiv+0x22c>)
 80003a0:	4453      	add	r3, sl
 80003a2:	468a      	mov	sl, r1
 80003a4:	2100      	movs	r1, #0
 80003a6:	449a      	add	sl, r3
 80003a8:	e797      	b.n	80002da <__aeabi_ddiv+0x8a>
 80003aa:	465b      	mov	r3, fp
 80003ac:	4303      	orrs	r3, r0
 80003ae:	4699      	mov	r9, r3
 80003b0:	d021      	beq.n	80003f6 <__aeabi_ddiv+0x1a6>
 80003b2:	465b      	mov	r3, fp
 80003b4:	2b00      	cmp	r3, #0
 80003b6:	d100      	bne.n	80003ba <__aeabi_ddiv+0x16a>
 80003b8:	e169      	b.n	800068e <__aeabi_ddiv+0x43e>
 80003ba:	4658      	mov	r0, fp
 80003bc:	f001 fa1c 	bl	80017f8 <__clzsi2>
 80003c0:	230b      	movs	r3, #11
 80003c2:	425b      	negs	r3, r3
 80003c4:	469c      	mov	ip, r3
 80003c6:	0002      	movs	r2, r0
 80003c8:	4484      	add	ip, r0
 80003ca:	4666      	mov	r6, ip
 80003cc:	231d      	movs	r3, #29
 80003ce:	1b9b      	subs	r3, r3, r6
 80003d0:	0026      	movs	r6, r4
 80003d2:	0011      	movs	r1, r2
 80003d4:	4658      	mov	r0, fp
 80003d6:	40de      	lsrs	r6, r3
 80003d8:	3908      	subs	r1, #8
 80003da:	4088      	lsls	r0, r1
 80003dc:	0033      	movs	r3, r6
 80003de:	4303      	orrs	r3, r0
 80003e0:	4699      	mov	r9, r3
 80003e2:	0023      	movs	r3, r4
 80003e4:	408b      	lsls	r3, r1
 80003e6:	4698      	mov	r8, r3
 80003e8:	4b25      	ldr	r3, [pc, #148]	@ (8000480 <__aeabi_ddiv+0x230>)
 80003ea:	2400      	movs	r4, #0
 80003ec:	1a9b      	subs	r3, r3, r2
 80003ee:	469a      	mov	sl, r3
 80003f0:	2300      	movs	r3, #0
 80003f2:	9303      	str	r3, [sp, #12]
 80003f4:	e753      	b.n	800029e <__aeabi_ddiv+0x4e>
 80003f6:	2300      	movs	r3, #0
 80003f8:	4698      	mov	r8, r3
 80003fa:	469a      	mov	sl, r3
 80003fc:	3301      	adds	r3, #1
 80003fe:	2404      	movs	r4, #4
 8000400:	9303      	str	r3, [sp, #12]
 8000402:	e74c      	b.n	800029e <__aeabi_ddiv+0x4e>
 8000404:	2301      	movs	r3, #1
 8000406:	431c      	orrs	r4, r3
 8000408:	2300      	movs	r3, #0
 800040a:	2101      	movs	r1, #1
 800040c:	469b      	mov	fp, r3
 800040e:	e764      	b.n	80002da <__aeabi_ddiv+0x8a>
 8000410:	2303      	movs	r3, #3
 8000412:	0032      	movs	r2, r6
 8000414:	2103      	movs	r1, #3
 8000416:	431c      	orrs	r4, r3
 8000418:	e75f      	b.n	80002da <__aeabi_ddiv+0x8a>
 800041a:	469a      	mov	sl, r3
 800041c:	2303      	movs	r3, #3
 800041e:	46d9      	mov	r9, fp
 8000420:	240c      	movs	r4, #12
 8000422:	9303      	str	r3, [sp, #12]
 8000424:	e73b      	b.n	800029e <__aeabi_ddiv+0x4e>
 8000426:	2300      	movs	r3, #0
 8000428:	2480      	movs	r4, #128	@ 0x80
 800042a:	4698      	mov	r8, r3
 800042c:	2600      	movs	r6, #0
 800042e:	4b0f      	ldr	r3, [pc, #60]	@ (800046c <__aeabi_ddiv+0x21c>)
 8000430:	0324      	lsls	r4, r4, #12
 8000432:	e779      	b.n	8000328 <__aeabi_ddiv+0xd8>
 8000434:	2480      	movs	r4, #128	@ 0x80
 8000436:	465b      	mov	r3, fp
 8000438:	0324      	lsls	r4, r4, #12
 800043a:	431c      	orrs	r4, r3
 800043c:	0324      	lsls	r4, r4, #12
 800043e:	002e      	movs	r6, r5
 8000440:	4690      	mov	r8, r2
 8000442:	4b0a      	ldr	r3, [pc, #40]	@ (800046c <__aeabi_ddiv+0x21c>)
 8000444:	0b24      	lsrs	r4, r4, #12
 8000446:	e76f      	b.n	8000328 <__aeabi_ddiv+0xd8>
 8000448:	2480      	movs	r4, #128	@ 0x80
 800044a:	464b      	mov	r3, r9
 800044c:	0324      	lsls	r4, r4, #12
 800044e:	4223      	tst	r3, r4
 8000450:	d002      	beq.n	8000458 <__aeabi_ddiv+0x208>
 8000452:	465b      	mov	r3, fp
 8000454:	4223      	tst	r3, r4
 8000456:	d0f0      	beq.n	800043a <__aeabi_ddiv+0x1ea>
 8000458:	2480      	movs	r4, #128	@ 0x80
 800045a:	464b      	mov	r3, r9
 800045c:	0324      	lsls	r4, r4, #12
 800045e:	431c      	orrs	r4, r3
 8000460:	0324      	lsls	r4, r4, #12
 8000462:	9e02      	ldr	r6, [sp, #8]
 8000464:	4b01      	ldr	r3, [pc, #4]	@ (800046c <__aeabi_ddiv+0x21c>)
 8000466:	0b24      	lsrs	r4, r4, #12
 8000468:	e75e      	b.n	8000328 <__aeabi_ddiv+0xd8>
 800046a:	46c0      	nop			@ (mov r8, r8)
 800046c:	000007ff 	.word	0x000007ff
 8000470:	fffffc01 	.word	0xfffffc01
 8000474:	08002b64 	.word	0x08002b64
 8000478:	fffff801 	.word	0xfffff801
 800047c:	000003f3 	.word	0x000003f3
 8000480:	fffffc0d 	.word	0xfffffc0d
 8000484:	45cb      	cmp	fp, r9
 8000486:	d200      	bcs.n	800048a <__aeabi_ddiv+0x23a>
 8000488:	e0f8      	b.n	800067c <__aeabi_ddiv+0x42c>
 800048a:	d100      	bne.n	800048e <__aeabi_ddiv+0x23e>
 800048c:	e0f3      	b.n	8000676 <__aeabi_ddiv+0x426>
 800048e:	2301      	movs	r3, #1
 8000490:	425b      	negs	r3, r3
 8000492:	469c      	mov	ip, r3
 8000494:	4644      	mov	r4, r8
 8000496:	4648      	mov	r0, r9
 8000498:	2500      	movs	r5, #0
 800049a:	44e2      	add	sl, ip
 800049c:	465b      	mov	r3, fp
 800049e:	0e17      	lsrs	r7, r2, #24
 80004a0:	021b      	lsls	r3, r3, #8
 80004a2:	431f      	orrs	r7, r3
 80004a4:	0c19      	lsrs	r1, r3, #16
 80004a6:	043b      	lsls	r3, r7, #16
 80004a8:	0212      	lsls	r2, r2, #8
 80004aa:	9700      	str	r7, [sp, #0]
 80004ac:	0c1f      	lsrs	r7, r3, #16
 80004ae:	4691      	mov	r9, r2
 80004b0:	9102      	str	r1, [sp, #8]
 80004b2:	9703      	str	r7, [sp, #12]
 80004b4:	f7ff fea8 	bl	8000208 <__aeabi_uidivmod>
 80004b8:	0002      	movs	r2, r0
 80004ba:	437a      	muls	r2, r7
 80004bc:	040b      	lsls	r3, r1, #16
 80004be:	0c21      	lsrs	r1, r4, #16
 80004c0:	4680      	mov	r8, r0
 80004c2:	4319      	orrs	r1, r3
 80004c4:	428a      	cmp	r2, r1
 80004c6:	d909      	bls.n	80004dc <__aeabi_ddiv+0x28c>
 80004c8:	9f00      	ldr	r7, [sp, #0]
 80004ca:	2301      	movs	r3, #1
 80004cc:	46bc      	mov	ip, r7
 80004ce:	425b      	negs	r3, r3
 80004d0:	4461      	add	r1, ip
 80004d2:	469c      	mov	ip, r3
 80004d4:	44e0      	add	r8, ip
 80004d6:	428f      	cmp	r7, r1
 80004d8:	d800      	bhi.n	80004dc <__aeabi_ddiv+0x28c>
 80004da:	e15c      	b.n	8000796 <__aeabi_ddiv+0x546>
 80004dc:	1a88      	subs	r0, r1, r2
 80004de:	9902      	ldr	r1, [sp, #8]
 80004e0:	f7ff fe92 	bl	8000208 <__aeabi_uidivmod>
 80004e4:	9a03      	ldr	r2, [sp, #12]
 80004e6:	0424      	lsls	r4, r4, #16
 80004e8:	4342      	muls	r2, r0
 80004ea:	0409      	lsls	r1, r1, #16
 80004ec:	0c24      	lsrs	r4, r4, #16
 80004ee:	0003      	movs	r3, r0
 80004f0:	430c      	orrs	r4, r1
 80004f2:	42a2      	cmp	r2, r4
 80004f4:	d906      	bls.n	8000504 <__aeabi_ddiv+0x2b4>
 80004f6:	9900      	ldr	r1, [sp, #0]
 80004f8:	3b01      	subs	r3, #1
 80004fa:	468c      	mov	ip, r1
 80004fc:	4464      	add	r4, ip
 80004fe:	42a1      	cmp	r1, r4
 8000500:	d800      	bhi.n	8000504 <__aeabi_ddiv+0x2b4>
 8000502:	e142      	b.n	800078a <__aeabi_ddiv+0x53a>
 8000504:	1aa0      	subs	r0, r4, r2
 8000506:	4642      	mov	r2, r8
 8000508:	0412      	lsls	r2, r2, #16
 800050a:	431a      	orrs	r2, r3
 800050c:	4693      	mov	fp, r2
 800050e:	464b      	mov	r3, r9
 8000510:	4659      	mov	r1, fp
 8000512:	0c1b      	lsrs	r3, r3, #16
 8000514:	001f      	movs	r7, r3
 8000516:	9304      	str	r3, [sp, #16]
 8000518:	040b      	lsls	r3, r1, #16
 800051a:	4649      	mov	r1, r9
 800051c:	0409      	lsls	r1, r1, #16
 800051e:	0c09      	lsrs	r1, r1, #16
 8000520:	000c      	movs	r4, r1
 8000522:	0c1b      	lsrs	r3, r3, #16
 8000524:	435c      	muls	r4, r3
 8000526:	0c12      	lsrs	r2, r2, #16
 8000528:	437b      	muls	r3, r7
 800052a:	4688      	mov	r8, r1
 800052c:	4351      	muls	r1, r2
 800052e:	437a      	muls	r2, r7
 8000530:	0c27      	lsrs	r7, r4, #16
 8000532:	46bc      	mov	ip, r7
 8000534:	185b      	adds	r3, r3, r1
 8000536:	4463      	add	r3, ip
 8000538:	4299      	cmp	r1, r3
 800053a:	d903      	bls.n	8000544 <__aeabi_ddiv+0x2f4>
 800053c:	2180      	movs	r1, #128	@ 0x80
 800053e:	0249      	lsls	r1, r1, #9
 8000540:	468c      	mov	ip, r1
 8000542:	4462      	add	r2, ip
 8000544:	0c19      	lsrs	r1, r3, #16
 8000546:	0424      	lsls	r4, r4, #16
 8000548:	041b      	lsls	r3, r3, #16
 800054a:	0c24      	lsrs	r4, r4, #16
 800054c:	188a      	adds	r2, r1, r2
 800054e:	191c      	adds	r4, r3, r4
 8000550:	4290      	cmp	r0, r2
 8000552:	d302      	bcc.n	800055a <__aeabi_ddiv+0x30a>
 8000554:	d116      	bne.n	8000584 <__aeabi_ddiv+0x334>
 8000556:	42a5      	cmp	r5, r4
 8000558:	d214      	bcs.n	8000584 <__aeabi_ddiv+0x334>
 800055a:	465b      	mov	r3, fp
 800055c:	9f00      	ldr	r7, [sp, #0]
 800055e:	3b01      	subs	r3, #1
 8000560:	444d      	add	r5, r9
 8000562:	9305      	str	r3, [sp, #20]
 8000564:	454d      	cmp	r5, r9
 8000566:	419b      	sbcs	r3, r3
 8000568:	46bc      	mov	ip, r7
 800056a:	425b      	negs	r3, r3
 800056c:	4463      	add	r3, ip
 800056e:	18c0      	adds	r0, r0, r3
 8000570:	4287      	cmp	r7, r0
 8000572:	d300      	bcc.n	8000576 <__aeabi_ddiv+0x326>
 8000574:	e102      	b.n	800077c <__aeabi_ddiv+0x52c>
 8000576:	4282      	cmp	r2, r0
 8000578:	d900      	bls.n	800057c <__aeabi_ddiv+0x32c>
 800057a:	e129      	b.n	80007d0 <__aeabi_ddiv+0x580>
 800057c:	d100      	bne.n	8000580 <__aeabi_ddiv+0x330>
 800057e:	e124      	b.n	80007ca <__aeabi_ddiv+0x57a>
 8000580:	9b05      	ldr	r3, [sp, #20]
 8000582:	469b      	mov	fp, r3
 8000584:	1b2c      	subs	r4, r5, r4
 8000586:	42a5      	cmp	r5, r4
 8000588:	41ad      	sbcs	r5, r5
 800058a:	9b00      	ldr	r3, [sp, #0]
 800058c:	1a80      	subs	r0, r0, r2
 800058e:	426d      	negs	r5, r5
 8000590:	1b40      	subs	r0, r0, r5
 8000592:	4283      	cmp	r3, r0
 8000594:	d100      	bne.n	8000598 <__aeabi_ddiv+0x348>
 8000596:	e10f      	b.n	80007b8 <__aeabi_ddiv+0x568>
 8000598:	9902      	ldr	r1, [sp, #8]
 800059a:	f7ff fe35 	bl	8000208 <__aeabi_uidivmod>
 800059e:	9a03      	ldr	r2, [sp, #12]
 80005a0:	040b      	lsls	r3, r1, #16
 80005a2:	4342      	muls	r2, r0
 80005a4:	0c21      	lsrs	r1, r4, #16
 80005a6:	0005      	movs	r5, r0
 80005a8:	4319      	orrs	r1, r3
 80005aa:	428a      	cmp	r2, r1
 80005ac:	d900      	bls.n	80005b0 <__aeabi_ddiv+0x360>
 80005ae:	e0cb      	b.n	8000748 <__aeabi_ddiv+0x4f8>
 80005b0:	1a88      	subs	r0, r1, r2
 80005b2:	9902      	ldr	r1, [sp, #8]
 80005b4:	f7ff fe28 	bl	8000208 <__aeabi_uidivmod>
 80005b8:	9a03      	ldr	r2, [sp, #12]
 80005ba:	0424      	lsls	r4, r4, #16
 80005bc:	4342      	muls	r2, r0
 80005be:	0409      	lsls	r1, r1, #16
 80005c0:	0c24      	lsrs	r4, r4, #16
 80005c2:	0003      	movs	r3, r0
 80005c4:	430c      	orrs	r4, r1
 80005c6:	42a2      	cmp	r2, r4
 80005c8:	d900      	bls.n	80005cc <__aeabi_ddiv+0x37c>
 80005ca:	e0ca      	b.n	8000762 <__aeabi_ddiv+0x512>
 80005cc:	4641      	mov	r1, r8
 80005ce:	1aa4      	subs	r4, r4, r2
 80005d0:	042a      	lsls	r2, r5, #16
 80005d2:	431a      	orrs	r2, r3
 80005d4:	9f04      	ldr	r7, [sp, #16]
 80005d6:	0413      	lsls	r3, r2, #16
 80005d8:	0c1b      	lsrs	r3, r3, #16
 80005da:	4359      	muls	r1, r3
 80005dc:	4640      	mov	r0, r8
 80005de:	437b      	muls	r3, r7
 80005e0:	469c      	mov	ip, r3
 80005e2:	0c15      	lsrs	r5, r2, #16
 80005e4:	4368      	muls	r0, r5
 80005e6:	0c0b      	lsrs	r3, r1, #16
 80005e8:	4484      	add	ip, r0
 80005ea:	4463      	add	r3, ip
 80005ec:	437d      	muls	r5, r7
 80005ee:	4298      	cmp	r0, r3
 80005f0:	d903      	bls.n	80005fa <__aeabi_ddiv+0x3aa>
 80005f2:	2080      	movs	r0, #128	@ 0x80
 80005f4:	0240      	lsls	r0, r0, #9
 80005f6:	4684      	mov	ip, r0
 80005f8:	4465      	add	r5, ip
 80005fa:	0c18      	lsrs	r0, r3, #16
 80005fc:	0409      	lsls	r1, r1, #16
 80005fe:	041b      	lsls	r3, r3, #16
 8000600:	0c09      	lsrs	r1, r1, #16
 8000602:	1940      	adds	r0, r0, r5
 8000604:	185b      	adds	r3, r3, r1
 8000606:	4284      	cmp	r4, r0
 8000608:	d327      	bcc.n	800065a <__aeabi_ddiv+0x40a>
 800060a:	d023      	beq.n	8000654 <__aeabi_ddiv+0x404>
 800060c:	2301      	movs	r3, #1
 800060e:	0035      	movs	r5, r6
 8000610:	431a      	orrs	r2, r3
 8000612:	4b94      	ldr	r3, [pc, #592]	@ (8000864 <__aeabi_ddiv+0x614>)
 8000614:	4453      	add	r3, sl
 8000616:	2b00      	cmp	r3, #0
 8000618:	dd60      	ble.n	80006dc <__aeabi_ddiv+0x48c>
 800061a:	0751      	lsls	r1, r2, #29
 800061c:	d000      	beq.n	8000620 <__aeabi_ddiv+0x3d0>
 800061e:	e086      	b.n	800072e <__aeabi_ddiv+0x4de>
 8000620:	002e      	movs	r6, r5
 8000622:	08d1      	lsrs	r1, r2, #3
 8000624:	465a      	mov	r2, fp
 8000626:	01d2      	lsls	r2, r2, #7
 8000628:	d506      	bpl.n	8000638 <__aeabi_ddiv+0x3e8>
 800062a:	465a      	mov	r2, fp
 800062c:	4b8e      	ldr	r3, [pc, #568]	@ (8000868 <__aeabi_ddiv+0x618>)
 800062e:	401a      	ands	r2, r3
 8000630:	2380      	movs	r3, #128	@ 0x80
 8000632:	4693      	mov	fp, r2
 8000634:	00db      	lsls	r3, r3, #3
 8000636:	4453      	add	r3, sl
 8000638:	4a8c      	ldr	r2, [pc, #560]	@ (800086c <__aeabi_ddiv+0x61c>)
 800063a:	4293      	cmp	r3, r2
 800063c:	dd00      	ble.n	8000640 <__aeabi_ddiv+0x3f0>
 800063e:	e680      	b.n	8000342 <__aeabi_ddiv+0xf2>
 8000640:	465a      	mov	r2, fp
 8000642:	0752      	lsls	r2, r2, #29
 8000644:	430a      	orrs	r2, r1
 8000646:	4690      	mov	r8, r2
 8000648:	465a      	mov	r2, fp
 800064a:	055b      	lsls	r3, r3, #21
 800064c:	0254      	lsls	r4, r2, #9
 800064e:	0b24      	lsrs	r4, r4, #12
 8000650:	0d5b      	lsrs	r3, r3, #21
 8000652:	e669      	b.n	8000328 <__aeabi_ddiv+0xd8>
 8000654:	0035      	movs	r5, r6
 8000656:	2b00      	cmp	r3, #0
 8000658:	d0db      	beq.n	8000612 <__aeabi_ddiv+0x3c2>
 800065a:	9d00      	ldr	r5, [sp, #0]
 800065c:	1e51      	subs	r1, r2, #1
 800065e:	46ac      	mov	ip, r5
 8000660:	4464      	add	r4, ip
 8000662:	42ac      	cmp	r4, r5
 8000664:	d200      	bcs.n	8000668 <__aeabi_ddiv+0x418>
 8000666:	e09e      	b.n	80007a6 <__aeabi_ddiv+0x556>
 8000668:	4284      	cmp	r4, r0
 800066a:	d200      	bcs.n	800066e <__aeabi_ddiv+0x41e>
 800066c:	e0e1      	b.n	8000832 <__aeabi_ddiv+0x5e2>
 800066e:	d100      	bne.n	8000672 <__aeabi_ddiv+0x422>
 8000670:	e0ee      	b.n	8000850 <__aeabi_ddiv+0x600>
 8000672:	000a      	movs	r2, r1
 8000674:	e7ca      	b.n	800060c <__aeabi_ddiv+0x3bc>
 8000676:	4542      	cmp	r2, r8
 8000678:	d900      	bls.n	800067c <__aeabi_ddiv+0x42c>
 800067a:	e708      	b.n	800048e <__aeabi_ddiv+0x23e>
 800067c:	464b      	mov	r3, r9
 800067e:	07dc      	lsls	r4, r3, #31
 8000680:	0858      	lsrs	r0, r3, #1
 8000682:	4643      	mov	r3, r8
 8000684:	085b      	lsrs	r3, r3, #1
 8000686:	431c      	orrs	r4, r3
 8000688:	4643      	mov	r3, r8
 800068a:	07dd      	lsls	r5, r3, #31
 800068c:	e706      	b.n	800049c <__aeabi_ddiv+0x24c>
 800068e:	f001 f8b3 	bl	80017f8 <__clzsi2>
 8000692:	2315      	movs	r3, #21
 8000694:	469c      	mov	ip, r3
 8000696:	4484      	add	ip, r0
 8000698:	0002      	movs	r2, r0
 800069a:	4663      	mov	r3, ip
 800069c:	3220      	adds	r2, #32
 800069e:	2b1c      	cmp	r3, #28
 80006a0:	dc00      	bgt.n	80006a4 <__aeabi_ddiv+0x454>
 80006a2:	e692      	b.n	80003ca <__aeabi_ddiv+0x17a>
 80006a4:	0023      	movs	r3, r4
 80006a6:	3808      	subs	r0, #8
 80006a8:	4083      	lsls	r3, r0
 80006aa:	4699      	mov	r9, r3
 80006ac:	2300      	movs	r3, #0
 80006ae:	4698      	mov	r8, r3
 80006b0:	e69a      	b.n	80003e8 <__aeabi_ddiv+0x198>
 80006b2:	f001 f8a1 	bl	80017f8 <__clzsi2>
 80006b6:	0002      	movs	r2, r0
 80006b8:	0003      	movs	r3, r0
 80006ba:	3215      	adds	r2, #21
 80006bc:	3320      	adds	r3, #32
 80006be:	2a1c      	cmp	r2, #28
 80006c0:	dc00      	bgt.n	80006c4 <__aeabi_ddiv+0x474>
 80006c2:	e65f      	b.n	8000384 <__aeabi_ddiv+0x134>
 80006c4:	9900      	ldr	r1, [sp, #0]
 80006c6:	3808      	subs	r0, #8
 80006c8:	4081      	lsls	r1, r0
 80006ca:	2200      	movs	r2, #0
 80006cc:	468b      	mov	fp, r1
 80006ce:	e666      	b.n	800039e <__aeabi_ddiv+0x14e>
 80006d0:	2200      	movs	r2, #0
 80006d2:	002e      	movs	r6, r5
 80006d4:	2400      	movs	r4, #0
 80006d6:	4690      	mov	r8, r2
 80006d8:	4b65      	ldr	r3, [pc, #404]	@ (8000870 <__aeabi_ddiv+0x620>)
 80006da:	e625      	b.n	8000328 <__aeabi_ddiv+0xd8>
 80006dc:	002e      	movs	r6, r5
 80006de:	2101      	movs	r1, #1
 80006e0:	1ac9      	subs	r1, r1, r3
 80006e2:	2938      	cmp	r1, #56	@ 0x38
 80006e4:	dd00      	ble.n	80006e8 <__aeabi_ddiv+0x498>
 80006e6:	e61b      	b.n	8000320 <__aeabi_ddiv+0xd0>
 80006e8:	291f      	cmp	r1, #31
 80006ea:	dc7e      	bgt.n	80007ea <__aeabi_ddiv+0x59a>
 80006ec:	4861      	ldr	r0, [pc, #388]	@ (8000874 <__aeabi_ddiv+0x624>)
 80006ee:	0014      	movs	r4, r2
 80006f0:	4450      	add	r0, sl
 80006f2:	465b      	mov	r3, fp
 80006f4:	4082      	lsls	r2, r0
 80006f6:	4083      	lsls	r3, r0
 80006f8:	40cc      	lsrs	r4, r1
 80006fa:	1e50      	subs	r0, r2, #1
 80006fc:	4182      	sbcs	r2, r0
 80006fe:	4323      	orrs	r3, r4
 8000700:	431a      	orrs	r2, r3
 8000702:	465b      	mov	r3, fp
 8000704:	40cb      	lsrs	r3, r1
 8000706:	0751      	lsls	r1, r2, #29
 8000708:	d009      	beq.n	800071e <__aeabi_ddiv+0x4ce>
 800070a:	210f      	movs	r1, #15
 800070c:	4011      	ands	r1, r2
 800070e:	2904      	cmp	r1, #4
 8000710:	d005      	beq.n	800071e <__aeabi_ddiv+0x4ce>
 8000712:	1d11      	adds	r1, r2, #4
 8000714:	4291      	cmp	r1, r2
 8000716:	4192      	sbcs	r2, r2
 8000718:	4252      	negs	r2, r2
 800071a:	189b      	adds	r3, r3, r2
 800071c:	000a      	movs	r2, r1
 800071e:	0219      	lsls	r1, r3, #8
 8000720:	d400      	bmi.n	8000724 <__aeabi_ddiv+0x4d4>
 8000722:	e09b      	b.n	800085c <__aeabi_ddiv+0x60c>
 8000724:	2200      	movs	r2, #0
 8000726:	2301      	movs	r3, #1
 8000728:	2400      	movs	r4, #0
 800072a:	4690      	mov	r8, r2
 800072c:	e5fc      	b.n	8000328 <__aeabi_ddiv+0xd8>
 800072e:	210f      	movs	r1, #15
 8000730:	4011      	ands	r1, r2
 8000732:	2904      	cmp	r1, #4
 8000734:	d100      	bne.n	8000738 <__aeabi_ddiv+0x4e8>
 8000736:	e773      	b.n	8000620 <__aeabi_ddiv+0x3d0>
 8000738:	1d11      	adds	r1, r2, #4
 800073a:	4291      	cmp	r1, r2
 800073c:	4192      	sbcs	r2, r2
 800073e:	4252      	negs	r2, r2
 8000740:	002e      	movs	r6, r5
 8000742:	08c9      	lsrs	r1, r1, #3
 8000744:	4493      	add	fp, r2
 8000746:	e76d      	b.n	8000624 <__aeabi_ddiv+0x3d4>
 8000748:	9b00      	ldr	r3, [sp, #0]
 800074a:	3d01      	subs	r5, #1
 800074c:	469c      	mov	ip, r3
 800074e:	4461      	add	r1, ip
 8000750:	428b      	cmp	r3, r1
 8000752:	d900      	bls.n	8000756 <__aeabi_ddiv+0x506>
 8000754:	e72c      	b.n	80005b0 <__aeabi_ddiv+0x360>
 8000756:	428a      	cmp	r2, r1
 8000758:	d800      	bhi.n	800075c <__aeabi_ddiv+0x50c>
 800075a:	e729      	b.n	80005b0 <__aeabi_ddiv+0x360>
 800075c:	1e85      	subs	r5, r0, #2
 800075e:	4461      	add	r1, ip
 8000760:	e726      	b.n	80005b0 <__aeabi_ddiv+0x360>
 8000762:	9900      	ldr	r1, [sp, #0]
 8000764:	3b01      	subs	r3, #1
 8000766:	468c      	mov	ip, r1
 8000768:	4464      	add	r4, ip
 800076a:	42a1      	cmp	r1, r4
 800076c:	d900      	bls.n	8000770 <__aeabi_ddiv+0x520>
 800076e:	e72d      	b.n	80005cc <__aeabi_ddiv+0x37c>
 8000770:	42a2      	cmp	r2, r4
 8000772:	d800      	bhi.n	8000776 <__aeabi_ddiv+0x526>
 8000774:	e72a      	b.n	80005cc <__aeabi_ddiv+0x37c>
 8000776:	1e83      	subs	r3, r0, #2
 8000778:	4464      	add	r4, ip
 800077a:	e727      	b.n	80005cc <__aeabi_ddiv+0x37c>
 800077c:	4287      	cmp	r7, r0
 800077e:	d000      	beq.n	8000782 <__aeabi_ddiv+0x532>
 8000780:	e6fe      	b.n	8000580 <__aeabi_ddiv+0x330>
 8000782:	45a9      	cmp	r9, r5
 8000784:	d900      	bls.n	8000788 <__aeabi_ddiv+0x538>
 8000786:	e6fb      	b.n	8000580 <__aeabi_ddiv+0x330>
 8000788:	e6f5      	b.n	8000576 <__aeabi_ddiv+0x326>
 800078a:	42a2      	cmp	r2, r4
 800078c:	d800      	bhi.n	8000790 <__aeabi_ddiv+0x540>
 800078e:	e6b9      	b.n	8000504 <__aeabi_ddiv+0x2b4>
 8000790:	1e83      	subs	r3, r0, #2
 8000792:	4464      	add	r4, ip
 8000794:	e6b6      	b.n	8000504 <__aeabi_ddiv+0x2b4>
 8000796:	428a      	cmp	r2, r1
 8000798:	d800      	bhi.n	800079c <__aeabi_ddiv+0x54c>
 800079a:	e69f      	b.n	80004dc <__aeabi_ddiv+0x28c>
 800079c:	46bc      	mov	ip, r7
 800079e:	1e83      	subs	r3, r0, #2
 80007a0:	4698      	mov	r8, r3
 80007a2:	4461      	add	r1, ip
 80007a4:	e69a      	b.n	80004dc <__aeabi_ddiv+0x28c>
 80007a6:	000a      	movs	r2, r1
 80007a8:	4284      	cmp	r4, r0
 80007aa:	d000      	beq.n	80007ae <__aeabi_ddiv+0x55e>
 80007ac:	e72e      	b.n	800060c <__aeabi_ddiv+0x3bc>
 80007ae:	454b      	cmp	r3, r9
 80007b0:	d000      	beq.n	80007b4 <__aeabi_ddiv+0x564>
 80007b2:	e72b      	b.n	800060c <__aeabi_ddiv+0x3bc>
 80007b4:	0035      	movs	r5, r6
 80007b6:	e72c      	b.n	8000612 <__aeabi_ddiv+0x3c2>
 80007b8:	4b2a      	ldr	r3, [pc, #168]	@ (8000864 <__aeabi_ddiv+0x614>)
 80007ba:	4a2f      	ldr	r2, [pc, #188]	@ (8000878 <__aeabi_ddiv+0x628>)
 80007bc:	4453      	add	r3, sl
 80007be:	4592      	cmp	sl, r2
 80007c0:	db43      	blt.n	800084a <__aeabi_ddiv+0x5fa>
 80007c2:	2201      	movs	r2, #1
 80007c4:	2100      	movs	r1, #0
 80007c6:	4493      	add	fp, r2
 80007c8:	e72c      	b.n	8000624 <__aeabi_ddiv+0x3d4>
 80007ca:	42ac      	cmp	r4, r5
 80007cc:	d800      	bhi.n	80007d0 <__aeabi_ddiv+0x580>
 80007ce:	e6d7      	b.n	8000580 <__aeabi_ddiv+0x330>
 80007d0:	2302      	movs	r3, #2
 80007d2:	425b      	negs	r3, r3
 80007d4:	469c      	mov	ip, r3
 80007d6:	9900      	ldr	r1, [sp, #0]
 80007d8:	444d      	add	r5, r9
 80007da:	454d      	cmp	r5, r9
 80007dc:	419b      	sbcs	r3, r3
 80007de:	44e3      	add	fp, ip
 80007e0:	468c      	mov	ip, r1
 80007e2:	425b      	negs	r3, r3
 80007e4:	4463      	add	r3, ip
 80007e6:	18c0      	adds	r0, r0, r3
 80007e8:	e6cc      	b.n	8000584 <__aeabi_ddiv+0x334>
 80007ea:	201f      	movs	r0, #31
 80007ec:	4240      	negs	r0, r0
 80007ee:	1ac3      	subs	r3, r0, r3
 80007f0:	4658      	mov	r0, fp
 80007f2:	40d8      	lsrs	r0, r3
 80007f4:	2920      	cmp	r1, #32
 80007f6:	d004      	beq.n	8000802 <__aeabi_ddiv+0x5b2>
 80007f8:	4659      	mov	r1, fp
 80007fa:	4b20      	ldr	r3, [pc, #128]	@ (800087c <__aeabi_ddiv+0x62c>)
 80007fc:	4453      	add	r3, sl
 80007fe:	4099      	lsls	r1, r3
 8000800:	430a      	orrs	r2, r1
 8000802:	1e53      	subs	r3, r2, #1
 8000804:	419a      	sbcs	r2, r3
 8000806:	2307      	movs	r3, #7
 8000808:	0019      	movs	r1, r3
 800080a:	4302      	orrs	r2, r0
 800080c:	2400      	movs	r4, #0
 800080e:	4011      	ands	r1, r2
 8000810:	4213      	tst	r3, r2
 8000812:	d009      	beq.n	8000828 <__aeabi_ddiv+0x5d8>
 8000814:	3308      	adds	r3, #8
 8000816:	4013      	ands	r3, r2
 8000818:	2b04      	cmp	r3, #4
 800081a:	d01d      	beq.n	8000858 <__aeabi_ddiv+0x608>
 800081c:	1d13      	adds	r3, r2, #4
 800081e:	4293      	cmp	r3, r2
 8000820:	4189      	sbcs	r1, r1
 8000822:	001a      	movs	r2, r3
 8000824:	4249      	negs	r1, r1
 8000826:	0749      	lsls	r1, r1, #29
 8000828:	08d2      	lsrs	r2, r2, #3
 800082a:	430a      	orrs	r2, r1
 800082c:	4690      	mov	r8, r2
 800082e:	2300      	movs	r3, #0
 8000830:	e57a      	b.n	8000328 <__aeabi_ddiv+0xd8>
 8000832:	4649      	mov	r1, r9
 8000834:	9f00      	ldr	r7, [sp, #0]
 8000836:	004d      	lsls	r5, r1, #1
 8000838:	454d      	cmp	r5, r9
 800083a:	4189      	sbcs	r1, r1
 800083c:	46bc      	mov	ip, r7
 800083e:	4249      	negs	r1, r1
 8000840:	4461      	add	r1, ip
 8000842:	46a9      	mov	r9, r5
 8000844:	3a02      	subs	r2, #2
 8000846:	1864      	adds	r4, r4, r1
 8000848:	e7ae      	b.n	80007a8 <__aeabi_ddiv+0x558>
 800084a:	2201      	movs	r2, #1
 800084c:	4252      	negs	r2, r2
 800084e:	e746      	b.n	80006de <__aeabi_ddiv+0x48e>
 8000850:	4599      	cmp	r9, r3
 8000852:	d3ee      	bcc.n	8000832 <__aeabi_ddiv+0x5e2>
 8000854:	000a      	movs	r2, r1
 8000856:	e7aa      	b.n	80007ae <__aeabi_ddiv+0x55e>
 8000858:	2100      	movs	r1, #0
 800085a:	e7e5      	b.n	8000828 <__aeabi_ddiv+0x5d8>
 800085c:	0759      	lsls	r1, r3, #29
 800085e:	025b      	lsls	r3, r3, #9
 8000860:	0b1c      	lsrs	r4, r3, #12
 8000862:	e7e1      	b.n	8000828 <__aeabi_ddiv+0x5d8>
 8000864:	000003ff 	.word	0x000003ff
 8000868:	feffffff 	.word	0xfeffffff
 800086c:	000007fe 	.word	0x000007fe
 8000870:	000007ff 	.word	0x000007ff
 8000874:	0000041e 	.word	0x0000041e
 8000878:	fffffc02 	.word	0xfffffc02
 800087c:	0000043e 	.word	0x0000043e

08000880 <__aeabi_dmul>:
 8000880:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000882:	4657      	mov	r7, sl
 8000884:	464e      	mov	r6, r9
 8000886:	46de      	mov	lr, fp
 8000888:	4645      	mov	r5, r8
 800088a:	b5e0      	push	{r5, r6, r7, lr}
 800088c:	001f      	movs	r7, r3
 800088e:	030b      	lsls	r3, r1, #12
 8000890:	0b1b      	lsrs	r3, r3, #12
 8000892:	0016      	movs	r6, r2
 8000894:	469a      	mov	sl, r3
 8000896:	0fca      	lsrs	r2, r1, #31
 8000898:	004b      	lsls	r3, r1, #1
 800089a:	0004      	movs	r4, r0
 800089c:	4691      	mov	r9, r2
 800089e:	b085      	sub	sp, #20
 80008a0:	0d5b      	lsrs	r3, r3, #21
 80008a2:	d100      	bne.n	80008a6 <__aeabi_dmul+0x26>
 80008a4:	e1cf      	b.n	8000c46 <__aeabi_dmul+0x3c6>
 80008a6:	4acd      	ldr	r2, [pc, #820]	@ (8000bdc <__aeabi_dmul+0x35c>)
 80008a8:	4293      	cmp	r3, r2
 80008aa:	d055      	beq.n	8000958 <__aeabi_dmul+0xd8>
 80008ac:	4651      	mov	r1, sl
 80008ae:	0f42      	lsrs	r2, r0, #29
 80008b0:	00c9      	lsls	r1, r1, #3
 80008b2:	430a      	orrs	r2, r1
 80008b4:	2180      	movs	r1, #128	@ 0x80
 80008b6:	0409      	lsls	r1, r1, #16
 80008b8:	4311      	orrs	r1, r2
 80008ba:	00c2      	lsls	r2, r0, #3
 80008bc:	4690      	mov	r8, r2
 80008be:	4ac8      	ldr	r2, [pc, #800]	@ (8000be0 <__aeabi_dmul+0x360>)
 80008c0:	468a      	mov	sl, r1
 80008c2:	4693      	mov	fp, r2
 80008c4:	449b      	add	fp, r3
 80008c6:	2300      	movs	r3, #0
 80008c8:	2500      	movs	r5, #0
 80008ca:	9302      	str	r3, [sp, #8]
 80008cc:	033c      	lsls	r4, r7, #12
 80008ce:	007b      	lsls	r3, r7, #1
 80008d0:	0ffa      	lsrs	r2, r7, #31
 80008d2:	9601      	str	r6, [sp, #4]
 80008d4:	0b24      	lsrs	r4, r4, #12
 80008d6:	0d5b      	lsrs	r3, r3, #21
 80008d8:	9200      	str	r2, [sp, #0]
 80008da:	d100      	bne.n	80008de <__aeabi_dmul+0x5e>
 80008dc:	e188      	b.n	8000bf0 <__aeabi_dmul+0x370>
 80008de:	4abf      	ldr	r2, [pc, #764]	@ (8000bdc <__aeabi_dmul+0x35c>)
 80008e0:	4293      	cmp	r3, r2
 80008e2:	d100      	bne.n	80008e6 <__aeabi_dmul+0x66>
 80008e4:	e092      	b.n	8000a0c <__aeabi_dmul+0x18c>
 80008e6:	4abe      	ldr	r2, [pc, #760]	@ (8000be0 <__aeabi_dmul+0x360>)
 80008e8:	4694      	mov	ip, r2
 80008ea:	4463      	add	r3, ip
 80008ec:	449b      	add	fp, r3
 80008ee:	2d0a      	cmp	r5, #10
 80008f0:	dc42      	bgt.n	8000978 <__aeabi_dmul+0xf8>
 80008f2:	00e4      	lsls	r4, r4, #3
 80008f4:	0f73      	lsrs	r3, r6, #29
 80008f6:	4323      	orrs	r3, r4
 80008f8:	2480      	movs	r4, #128	@ 0x80
 80008fa:	4649      	mov	r1, r9
 80008fc:	0424      	lsls	r4, r4, #16
 80008fe:	431c      	orrs	r4, r3
 8000900:	00f3      	lsls	r3, r6, #3
 8000902:	9301      	str	r3, [sp, #4]
 8000904:	9b00      	ldr	r3, [sp, #0]
 8000906:	2000      	movs	r0, #0
 8000908:	4059      	eors	r1, r3
 800090a:	b2cb      	uxtb	r3, r1
 800090c:	9303      	str	r3, [sp, #12]
 800090e:	2d02      	cmp	r5, #2
 8000910:	dc00      	bgt.n	8000914 <__aeabi_dmul+0x94>
 8000912:	e094      	b.n	8000a3e <__aeabi_dmul+0x1be>
 8000914:	2301      	movs	r3, #1
 8000916:	40ab      	lsls	r3, r5
 8000918:	001d      	movs	r5, r3
 800091a:	23a6      	movs	r3, #166	@ 0xa6
 800091c:	002a      	movs	r2, r5
 800091e:	00db      	lsls	r3, r3, #3
 8000920:	401a      	ands	r2, r3
 8000922:	421d      	tst	r5, r3
 8000924:	d000      	beq.n	8000928 <__aeabi_dmul+0xa8>
 8000926:	e229      	b.n	8000d7c <__aeabi_dmul+0x4fc>
 8000928:	2390      	movs	r3, #144	@ 0x90
 800092a:	009b      	lsls	r3, r3, #2
 800092c:	421d      	tst	r5, r3
 800092e:	d100      	bne.n	8000932 <__aeabi_dmul+0xb2>
 8000930:	e24d      	b.n	8000dce <__aeabi_dmul+0x54e>
 8000932:	2300      	movs	r3, #0
 8000934:	2480      	movs	r4, #128	@ 0x80
 8000936:	4699      	mov	r9, r3
 8000938:	0324      	lsls	r4, r4, #12
 800093a:	4ba8      	ldr	r3, [pc, #672]	@ (8000bdc <__aeabi_dmul+0x35c>)
 800093c:	0010      	movs	r0, r2
 800093e:	464a      	mov	r2, r9
 8000940:	051b      	lsls	r3, r3, #20
 8000942:	4323      	orrs	r3, r4
 8000944:	07d2      	lsls	r2, r2, #31
 8000946:	4313      	orrs	r3, r2
 8000948:	0019      	movs	r1, r3
 800094a:	b005      	add	sp, #20
 800094c:	bcf0      	pop	{r4, r5, r6, r7}
 800094e:	46bb      	mov	fp, r7
 8000950:	46b2      	mov	sl, r6
 8000952:	46a9      	mov	r9, r5
 8000954:	46a0      	mov	r8, r4
 8000956:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000958:	4652      	mov	r2, sl
 800095a:	4302      	orrs	r2, r0
 800095c:	4690      	mov	r8, r2
 800095e:	d000      	beq.n	8000962 <__aeabi_dmul+0xe2>
 8000960:	e1ac      	b.n	8000cbc <__aeabi_dmul+0x43c>
 8000962:	469b      	mov	fp, r3
 8000964:	2302      	movs	r3, #2
 8000966:	4692      	mov	sl, r2
 8000968:	2508      	movs	r5, #8
 800096a:	9302      	str	r3, [sp, #8]
 800096c:	e7ae      	b.n	80008cc <__aeabi_dmul+0x4c>
 800096e:	9b00      	ldr	r3, [sp, #0]
 8000970:	46a2      	mov	sl, r4
 8000972:	4699      	mov	r9, r3
 8000974:	9b01      	ldr	r3, [sp, #4]
 8000976:	4698      	mov	r8, r3
 8000978:	9b02      	ldr	r3, [sp, #8]
 800097a:	2b02      	cmp	r3, #2
 800097c:	d100      	bne.n	8000980 <__aeabi_dmul+0x100>
 800097e:	e1ca      	b.n	8000d16 <__aeabi_dmul+0x496>
 8000980:	2b03      	cmp	r3, #3
 8000982:	d100      	bne.n	8000986 <__aeabi_dmul+0x106>
 8000984:	e192      	b.n	8000cac <__aeabi_dmul+0x42c>
 8000986:	2b01      	cmp	r3, #1
 8000988:	d110      	bne.n	80009ac <__aeabi_dmul+0x12c>
 800098a:	2300      	movs	r3, #0
 800098c:	2400      	movs	r4, #0
 800098e:	2200      	movs	r2, #0
 8000990:	e7d4      	b.n	800093c <__aeabi_dmul+0xbc>
 8000992:	2201      	movs	r2, #1
 8000994:	087b      	lsrs	r3, r7, #1
 8000996:	403a      	ands	r2, r7
 8000998:	4313      	orrs	r3, r2
 800099a:	4652      	mov	r2, sl
 800099c:	07d2      	lsls	r2, r2, #31
 800099e:	4313      	orrs	r3, r2
 80009a0:	4698      	mov	r8, r3
 80009a2:	4653      	mov	r3, sl
 80009a4:	085b      	lsrs	r3, r3, #1
 80009a6:	469a      	mov	sl, r3
 80009a8:	9b03      	ldr	r3, [sp, #12]
 80009aa:	4699      	mov	r9, r3
 80009ac:	465b      	mov	r3, fp
 80009ae:	1c58      	adds	r0, r3, #1
 80009b0:	2380      	movs	r3, #128	@ 0x80
 80009b2:	00db      	lsls	r3, r3, #3
 80009b4:	445b      	add	r3, fp
 80009b6:	2b00      	cmp	r3, #0
 80009b8:	dc00      	bgt.n	80009bc <__aeabi_dmul+0x13c>
 80009ba:	e1b1      	b.n	8000d20 <__aeabi_dmul+0x4a0>
 80009bc:	4642      	mov	r2, r8
 80009be:	0752      	lsls	r2, r2, #29
 80009c0:	d00b      	beq.n	80009da <__aeabi_dmul+0x15a>
 80009c2:	220f      	movs	r2, #15
 80009c4:	4641      	mov	r1, r8
 80009c6:	400a      	ands	r2, r1
 80009c8:	2a04      	cmp	r2, #4
 80009ca:	d006      	beq.n	80009da <__aeabi_dmul+0x15a>
 80009cc:	4642      	mov	r2, r8
 80009ce:	1d11      	adds	r1, r2, #4
 80009d0:	4541      	cmp	r1, r8
 80009d2:	4192      	sbcs	r2, r2
 80009d4:	4688      	mov	r8, r1
 80009d6:	4252      	negs	r2, r2
 80009d8:	4492      	add	sl, r2
 80009da:	4652      	mov	r2, sl
 80009dc:	01d2      	lsls	r2, r2, #7
 80009de:	d506      	bpl.n	80009ee <__aeabi_dmul+0x16e>
 80009e0:	4652      	mov	r2, sl
 80009e2:	4b80      	ldr	r3, [pc, #512]	@ (8000be4 <__aeabi_dmul+0x364>)
 80009e4:	401a      	ands	r2, r3
 80009e6:	2380      	movs	r3, #128	@ 0x80
 80009e8:	4692      	mov	sl, r2
 80009ea:	00db      	lsls	r3, r3, #3
 80009ec:	18c3      	adds	r3, r0, r3
 80009ee:	4a7e      	ldr	r2, [pc, #504]	@ (8000be8 <__aeabi_dmul+0x368>)
 80009f0:	4293      	cmp	r3, r2
 80009f2:	dd00      	ble.n	80009f6 <__aeabi_dmul+0x176>
 80009f4:	e18f      	b.n	8000d16 <__aeabi_dmul+0x496>
 80009f6:	4642      	mov	r2, r8
 80009f8:	08d1      	lsrs	r1, r2, #3
 80009fa:	4652      	mov	r2, sl
 80009fc:	0752      	lsls	r2, r2, #29
 80009fe:	430a      	orrs	r2, r1
 8000a00:	4651      	mov	r1, sl
 8000a02:	055b      	lsls	r3, r3, #21
 8000a04:	024c      	lsls	r4, r1, #9
 8000a06:	0b24      	lsrs	r4, r4, #12
 8000a08:	0d5b      	lsrs	r3, r3, #21
 8000a0a:	e797      	b.n	800093c <__aeabi_dmul+0xbc>
 8000a0c:	4b73      	ldr	r3, [pc, #460]	@ (8000bdc <__aeabi_dmul+0x35c>)
 8000a0e:	4326      	orrs	r6, r4
 8000a10:	469c      	mov	ip, r3
 8000a12:	44e3      	add	fp, ip
 8000a14:	2e00      	cmp	r6, #0
 8000a16:	d100      	bne.n	8000a1a <__aeabi_dmul+0x19a>
 8000a18:	e16f      	b.n	8000cfa <__aeabi_dmul+0x47a>
 8000a1a:	2303      	movs	r3, #3
 8000a1c:	4649      	mov	r1, r9
 8000a1e:	431d      	orrs	r5, r3
 8000a20:	9b00      	ldr	r3, [sp, #0]
 8000a22:	4059      	eors	r1, r3
 8000a24:	b2cb      	uxtb	r3, r1
 8000a26:	9303      	str	r3, [sp, #12]
 8000a28:	2d0a      	cmp	r5, #10
 8000a2a:	dd00      	ble.n	8000a2e <__aeabi_dmul+0x1ae>
 8000a2c:	e133      	b.n	8000c96 <__aeabi_dmul+0x416>
 8000a2e:	2301      	movs	r3, #1
 8000a30:	40ab      	lsls	r3, r5
 8000a32:	001d      	movs	r5, r3
 8000a34:	2303      	movs	r3, #3
 8000a36:	9302      	str	r3, [sp, #8]
 8000a38:	2288      	movs	r2, #136	@ 0x88
 8000a3a:	422a      	tst	r2, r5
 8000a3c:	d197      	bne.n	800096e <__aeabi_dmul+0xee>
 8000a3e:	4642      	mov	r2, r8
 8000a40:	4643      	mov	r3, r8
 8000a42:	0412      	lsls	r2, r2, #16
 8000a44:	0c12      	lsrs	r2, r2, #16
 8000a46:	0016      	movs	r6, r2
 8000a48:	9801      	ldr	r0, [sp, #4]
 8000a4a:	0c1d      	lsrs	r5, r3, #16
 8000a4c:	0c03      	lsrs	r3, r0, #16
 8000a4e:	0400      	lsls	r0, r0, #16
 8000a50:	0c00      	lsrs	r0, r0, #16
 8000a52:	4346      	muls	r6, r0
 8000a54:	46b4      	mov	ip, r6
 8000a56:	001e      	movs	r6, r3
 8000a58:	436e      	muls	r6, r5
 8000a5a:	9600      	str	r6, [sp, #0]
 8000a5c:	0016      	movs	r6, r2
 8000a5e:	0007      	movs	r7, r0
 8000a60:	435e      	muls	r6, r3
 8000a62:	4661      	mov	r1, ip
 8000a64:	46b0      	mov	r8, r6
 8000a66:	436f      	muls	r7, r5
 8000a68:	0c0e      	lsrs	r6, r1, #16
 8000a6a:	44b8      	add	r8, r7
 8000a6c:	4446      	add	r6, r8
 8000a6e:	42b7      	cmp	r7, r6
 8000a70:	d905      	bls.n	8000a7e <__aeabi_dmul+0x1fe>
 8000a72:	2180      	movs	r1, #128	@ 0x80
 8000a74:	0249      	lsls	r1, r1, #9
 8000a76:	4688      	mov	r8, r1
 8000a78:	9f00      	ldr	r7, [sp, #0]
 8000a7a:	4447      	add	r7, r8
 8000a7c:	9700      	str	r7, [sp, #0]
 8000a7e:	4661      	mov	r1, ip
 8000a80:	0409      	lsls	r1, r1, #16
 8000a82:	0c09      	lsrs	r1, r1, #16
 8000a84:	0c37      	lsrs	r7, r6, #16
 8000a86:	0436      	lsls	r6, r6, #16
 8000a88:	468c      	mov	ip, r1
 8000a8a:	0031      	movs	r1, r6
 8000a8c:	4461      	add	r1, ip
 8000a8e:	9101      	str	r1, [sp, #4]
 8000a90:	0011      	movs	r1, r2
 8000a92:	0c26      	lsrs	r6, r4, #16
 8000a94:	0424      	lsls	r4, r4, #16
 8000a96:	0c24      	lsrs	r4, r4, #16
 8000a98:	4361      	muls	r1, r4
 8000a9a:	468c      	mov	ip, r1
 8000a9c:	0021      	movs	r1, r4
 8000a9e:	4369      	muls	r1, r5
 8000aa0:	4689      	mov	r9, r1
 8000aa2:	4661      	mov	r1, ip
 8000aa4:	0c09      	lsrs	r1, r1, #16
 8000aa6:	4688      	mov	r8, r1
 8000aa8:	4372      	muls	r2, r6
 8000aaa:	444a      	add	r2, r9
 8000aac:	4442      	add	r2, r8
 8000aae:	4375      	muls	r5, r6
 8000ab0:	4591      	cmp	r9, r2
 8000ab2:	d903      	bls.n	8000abc <__aeabi_dmul+0x23c>
 8000ab4:	2180      	movs	r1, #128	@ 0x80
 8000ab6:	0249      	lsls	r1, r1, #9
 8000ab8:	4688      	mov	r8, r1
 8000aba:	4445      	add	r5, r8
 8000abc:	0c11      	lsrs	r1, r2, #16
 8000abe:	4688      	mov	r8, r1
 8000ac0:	4661      	mov	r1, ip
 8000ac2:	0409      	lsls	r1, r1, #16
 8000ac4:	0c09      	lsrs	r1, r1, #16
 8000ac6:	468c      	mov	ip, r1
 8000ac8:	0412      	lsls	r2, r2, #16
 8000aca:	4462      	add	r2, ip
 8000acc:	18b9      	adds	r1, r7, r2
 8000ace:	9102      	str	r1, [sp, #8]
 8000ad0:	4651      	mov	r1, sl
 8000ad2:	0c09      	lsrs	r1, r1, #16
 8000ad4:	468c      	mov	ip, r1
 8000ad6:	4651      	mov	r1, sl
 8000ad8:	040f      	lsls	r7, r1, #16
 8000ada:	0c3f      	lsrs	r7, r7, #16
 8000adc:	0039      	movs	r1, r7
 8000ade:	4341      	muls	r1, r0
 8000ae0:	4445      	add	r5, r8
 8000ae2:	4688      	mov	r8, r1
 8000ae4:	4661      	mov	r1, ip
 8000ae6:	4341      	muls	r1, r0
 8000ae8:	468a      	mov	sl, r1
 8000aea:	4641      	mov	r1, r8
 8000aec:	4660      	mov	r0, ip
 8000aee:	0c09      	lsrs	r1, r1, #16
 8000af0:	4689      	mov	r9, r1
 8000af2:	4358      	muls	r0, r3
 8000af4:	437b      	muls	r3, r7
 8000af6:	4453      	add	r3, sl
 8000af8:	444b      	add	r3, r9
 8000afa:	459a      	cmp	sl, r3
 8000afc:	d903      	bls.n	8000b06 <__aeabi_dmul+0x286>
 8000afe:	2180      	movs	r1, #128	@ 0x80
 8000b00:	0249      	lsls	r1, r1, #9
 8000b02:	4689      	mov	r9, r1
 8000b04:	4448      	add	r0, r9
 8000b06:	0c19      	lsrs	r1, r3, #16
 8000b08:	4689      	mov	r9, r1
 8000b0a:	4641      	mov	r1, r8
 8000b0c:	0409      	lsls	r1, r1, #16
 8000b0e:	0c09      	lsrs	r1, r1, #16
 8000b10:	4688      	mov	r8, r1
 8000b12:	0039      	movs	r1, r7
 8000b14:	4361      	muls	r1, r4
 8000b16:	041b      	lsls	r3, r3, #16
 8000b18:	4443      	add	r3, r8
 8000b1a:	4688      	mov	r8, r1
 8000b1c:	4661      	mov	r1, ip
 8000b1e:	434c      	muls	r4, r1
 8000b20:	4371      	muls	r1, r6
 8000b22:	468c      	mov	ip, r1
 8000b24:	4641      	mov	r1, r8
 8000b26:	4377      	muls	r7, r6
 8000b28:	0c0e      	lsrs	r6, r1, #16
 8000b2a:	193f      	adds	r7, r7, r4
 8000b2c:	19f6      	adds	r6, r6, r7
 8000b2e:	4448      	add	r0, r9
 8000b30:	42b4      	cmp	r4, r6
 8000b32:	d903      	bls.n	8000b3c <__aeabi_dmul+0x2bc>
 8000b34:	2180      	movs	r1, #128	@ 0x80
 8000b36:	0249      	lsls	r1, r1, #9
 8000b38:	4689      	mov	r9, r1
 8000b3a:	44cc      	add	ip, r9
 8000b3c:	9902      	ldr	r1, [sp, #8]
 8000b3e:	9f00      	ldr	r7, [sp, #0]
 8000b40:	4689      	mov	r9, r1
 8000b42:	0431      	lsls	r1, r6, #16
 8000b44:	444f      	add	r7, r9
 8000b46:	4689      	mov	r9, r1
 8000b48:	4641      	mov	r1, r8
 8000b4a:	4297      	cmp	r7, r2
 8000b4c:	4192      	sbcs	r2, r2
 8000b4e:	040c      	lsls	r4, r1, #16
 8000b50:	0c24      	lsrs	r4, r4, #16
 8000b52:	444c      	add	r4, r9
 8000b54:	18ff      	adds	r7, r7, r3
 8000b56:	4252      	negs	r2, r2
 8000b58:	1964      	adds	r4, r4, r5
 8000b5a:	18a1      	adds	r1, r4, r2
 8000b5c:	429f      	cmp	r7, r3
 8000b5e:	419b      	sbcs	r3, r3
 8000b60:	4688      	mov	r8, r1
 8000b62:	4682      	mov	sl, r0
 8000b64:	425b      	negs	r3, r3
 8000b66:	4699      	mov	r9, r3
 8000b68:	4590      	cmp	r8, r2
 8000b6a:	4192      	sbcs	r2, r2
 8000b6c:	42ac      	cmp	r4, r5
 8000b6e:	41a4      	sbcs	r4, r4
 8000b70:	44c2      	add	sl, r8
 8000b72:	44d1      	add	r9, sl
 8000b74:	4252      	negs	r2, r2
 8000b76:	4264      	negs	r4, r4
 8000b78:	4314      	orrs	r4, r2
 8000b7a:	4599      	cmp	r9, r3
 8000b7c:	419b      	sbcs	r3, r3
 8000b7e:	4582      	cmp	sl, r0
 8000b80:	4192      	sbcs	r2, r2
 8000b82:	425b      	negs	r3, r3
 8000b84:	4252      	negs	r2, r2
 8000b86:	4313      	orrs	r3, r2
 8000b88:	464a      	mov	r2, r9
 8000b8a:	0c36      	lsrs	r6, r6, #16
 8000b8c:	19a4      	adds	r4, r4, r6
 8000b8e:	18e3      	adds	r3, r4, r3
 8000b90:	4463      	add	r3, ip
 8000b92:	025b      	lsls	r3, r3, #9
 8000b94:	0dd2      	lsrs	r2, r2, #23
 8000b96:	431a      	orrs	r2, r3
 8000b98:	9901      	ldr	r1, [sp, #4]
 8000b9a:	4692      	mov	sl, r2
 8000b9c:	027a      	lsls	r2, r7, #9
 8000b9e:	430a      	orrs	r2, r1
 8000ba0:	1e50      	subs	r0, r2, #1
 8000ba2:	4182      	sbcs	r2, r0
 8000ba4:	0dff      	lsrs	r7, r7, #23
 8000ba6:	4317      	orrs	r7, r2
 8000ba8:	464a      	mov	r2, r9
 8000baa:	0252      	lsls	r2, r2, #9
 8000bac:	4317      	orrs	r7, r2
 8000bae:	46b8      	mov	r8, r7
 8000bb0:	01db      	lsls	r3, r3, #7
 8000bb2:	d500      	bpl.n	8000bb6 <__aeabi_dmul+0x336>
 8000bb4:	e6ed      	b.n	8000992 <__aeabi_dmul+0x112>
 8000bb6:	4b0d      	ldr	r3, [pc, #52]	@ (8000bec <__aeabi_dmul+0x36c>)
 8000bb8:	9a03      	ldr	r2, [sp, #12]
 8000bba:	445b      	add	r3, fp
 8000bbc:	4691      	mov	r9, r2
 8000bbe:	2b00      	cmp	r3, #0
 8000bc0:	dc00      	bgt.n	8000bc4 <__aeabi_dmul+0x344>
 8000bc2:	e0ac      	b.n	8000d1e <__aeabi_dmul+0x49e>
 8000bc4:	003a      	movs	r2, r7
 8000bc6:	0752      	lsls	r2, r2, #29
 8000bc8:	d100      	bne.n	8000bcc <__aeabi_dmul+0x34c>
 8000bca:	e710      	b.n	80009ee <__aeabi_dmul+0x16e>
 8000bcc:	220f      	movs	r2, #15
 8000bce:	4658      	mov	r0, fp
 8000bd0:	403a      	ands	r2, r7
 8000bd2:	2a04      	cmp	r2, #4
 8000bd4:	d000      	beq.n	8000bd8 <__aeabi_dmul+0x358>
 8000bd6:	e6f9      	b.n	80009cc <__aeabi_dmul+0x14c>
 8000bd8:	e709      	b.n	80009ee <__aeabi_dmul+0x16e>
 8000bda:	46c0      	nop			@ (mov r8, r8)
 8000bdc:	000007ff 	.word	0x000007ff
 8000be0:	fffffc01 	.word	0xfffffc01
 8000be4:	feffffff 	.word	0xfeffffff
 8000be8:	000007fe 	.word	0x000007fe
 8000bec:	000003ff 	.word	0x000003ff
 8000bf0:	0022      	movs	r2, r4
 8000bf2:	4332      	orrs	r2, r6
 8000bf4:	d06f      	beq.n	8000cd6 <__aeabi_dmul+0x456>
 8000bf6:	2c00      	cmp	r4, #0
 8000bf8:	d100      	bne.n	8000bfc <__aeabi_dmul+0x37c>
 8000bfa:	e0c2      	b.n	8000d82 <__aeabi_dmul+0x502>
 8000bfc:	0020      	movs	r0, r4
 8000bfe:	f000 fdfb 	bl	80017f8 <__clzsi2>
 8000c02:	0002      	movs	r2, r0
 8000c04:	0003      	movs	r3, r0
 8000c06:	3a0b      	subs	r2, #11
 8000c08:	201d      	movs	r0, #29
 8000c0a:	1a82      	subs	r2, r0, r2
 8000c0c:	0030      	movs	r0, r6
 8000c0e:	0019      	movs	r1, r3
 8000c10:	40d0      	lsrs	r0, r2
 8000c12:	3908      	subs	r1, #8
 8000c14:	408c      	lsls	r4, r1
 8000c16:	0002      	movs	r2, r0
 8000c18:	4322      	orrs	r2, r4
 8000c1a:	0034      	movs	r4, r6
 8000c1c:	408c      	lsls	r4, r1
 8000c1e:	4659      	mov	r1, fp
 8000c20:	1acb      	subs	r3, r1, r3
 8000c22:	4986      	ldr	r1, [pc, #536]	@ (8000e3c <__aeabi_dmul+0x5bc>)
 8000c24:	468b      	mov	fp, r1
 8000c26:	449b      	add	fp, r3
 8000c28:	2d0a      	cmp	r5, #10
 8000c2a:	dd00      	ble.n	8000c2e <__aeabi_dmul+0x3ae>
 8000c2c:	e6a4      	b.n	8000978 <__aeabi_dmul+0xf8>
 8000c2e:	4649      	mov	r1, r9
 8000c30:	9b00      	ldr	r3, [sp, #0]
 8000c32:	9401      	str	r4, [sp, #4]
 8000c34:	4059      	eors	r1, r3
 8000c36:	b2cb      	uxtb	r3, r1
 8000c38:	0014      	movs	r4, r2
 8000c3a:	2000      	movs	r0, #0
 8000c3c:	9303      	str	r3, [sp, #12]
 8000c3e:	2d02      	cmp	r5, #2
 8000c40:	dd00      	ble.n	8000c44 <__aeabi_dmul+0x3c4>
 8000c42:	e667      	b.n	8000914 <__aeabi_dmul+0x94>
 8000c44:	e6fb      	b.n	8000a3e <__aeabi_dmul+0x1be>
 8000c46:	4653      	mov	r3, sl
 8000c48:	4303      	orrs	r3, r0
 8000c4a:	4698      	mov	r8, r3
 8000c4c:	d03c      	beq.n	8000cc8 <__aeabi_dmul+0x448>
 8000c4e:	4653      	mov	r3, sl
 8000c50:	2b00      	cmp	r3, #0
 8000c52:	d100      	bne.n	8000c56 <__aeabi_dmul+0x3d6>
 8000c54:	e0a3      	b.n	8000d9e <__aeabi_dmul+0x51e>
 8000c56:	4650      	mov	r0, sl
 8000c58:	f000 fdce 	bl	80017f8 <__clzsi2>
 8000c5c:	230b      	movs	r3, #11
 8000c5e:	425b      	negs	r3, r3
 8000c60:	469c      	mov	ip, r3
 8000c62:	0002      	movs	r2, r0
 8000c64:	4484      	add	ip, r0
 8000c66:	0011      	movs	r1, r2
 8000c68:	4650      	mov	r0, sl
 8000c6a:	3908      	subs	r1, #8
 8000c6c:	4088      	lsls	r0, r1
 8000c6e:	231d      	movs	r3, #29
 8000c70:	4680      	mov	r8, r0
 8000c72:	4660      	mov	r0, ip
 8000c74:	1a1b      	subs	r3, r3, r0
 8000c76:	0020      	movs	r0, r4
 8000c78:	40d8      	lsrs	r0, r3
 8000c7a:	0003      	movs	r3, r0
 8000c7c:	4640      	mov	r0, r8
 8000c7e:	4303      	orrs	r3, r0
 8000c80:	469a      	mov	sl, r3
 8000c82:	0023      	movs	r3, r4
 8000c84:	408b      	lsls	r3, r1
 8000c86:	4698      	mov	r8, r3
 8000c88:	4b6c      	ldr	r3, [pc, #432]	@ (8000e3c <__aeabi_dmul+0x5bc>)
 8000c8a:	2500      	movs	r5, #0
 8000c8c:	1a9b      	subs	r3, r3, r2
 8000c8e:	469b      	mov	fp, r3
 8000c90:	2300      	movs	r3, #0
 8000c92:	9302      	str	r3, [sp, #8]
 8000c94:	e61a      	b.n	80008cc <__aeabi_dmul+0x4c>
 8000c96:	2d0f      	cmp	r5, #15
 8000c98:	d000      	beq.n	8000c9c <__aeabi_dmul+0x41c>
 8000c9a:	e0c9      	b.n	8000e30 <__aeabi_dmul+0x5b0>
 8000c9c:	2380      	movs	r3, #128	@ 0x80
 8000c9e:	4652      	mov	r2, sl
 8000ca0:	031b      	lsls	r3, r3, #12
 8000ca2:	421a      	tst	r2, r3
 8000ca4:	d002      	beq.n	8000cac <__aeabi_dmul+0x42c>
 8000ca6:	421c      	tst	r4, r3
 8000ca8:	d100      	bne.n	8000cac <__aeabi_dmul+0x42c>
 8000caa:	e092      	b.n	8000dd2 <__aeabi_dmul+0x552>
 8000cac:	2480      	movs	r4, #128	@ 0x80
 8000cae:	4653      	mov	r3, sl
 8000cb0:	0324      	lsls	r4, r4, #12
 8000cb2:	431c      	orrs	r4, r3
 8000cb4:	0324      	lsls	r4, r4, #12
 8000cb6:	4642      	mov	r2, r8
 8000cb8:	0b24      	lsrs	r4, r4, #12
 8000cba:	e63e      	b.n	800093a <__aeabi_dmul+0xba>
 8000cbc:	469b      	mov	fp, r3
 8000cbe:	2303      	movs	r3, #3
 8000cc0:	4680      	mov	r8, r0
 8000cc2:	250c      	movs	r5, #12
 8000cc4:	9302      	str	r3, [sp, #8]
 8000cc6:	e601      	b.n	80008cc <__aeabi_dmul+0x4c>
 8000cc8:	2300      	movs	r3, #0
 8000cca:	469a      	mov	sl, r3
 8000ccc:	469b      	mov	fp, r3
 8000cce:	3301      	adds	r3, #1
 8000cd0:	2504      	movs	r5, #4
 8000cd2:	9302      	str	r3, [sp, #8]
 8000cd4:	e5fa      	b.n	80008cc <__aeabi_dmul+0x4c>
 8000cd6:	2101      	movs	r1, #1
 8000cd8:	430d      	orrs	r5, r1
 8000cda:	2d0a      	cmp	r5, #10
 8000cdc:	dd00      	ble.n	8000ce0 <__aeabi_dmul+0x460>
 8000cde:	e64b      	b.n	8000978 <__aeabi_dmul+0xf8>
 8000ce0:	4649      	mov	r1, r9
 8000ce2:	9800      	ldr	r0, [sp, #0]
 8000ce4:	4041      	eors	r1, r0
 8000ce6:	b2c9      	uxtb	r1, r1
 8000ce8:	9103      	str	r1, [sp, #12]
 8000cea:	2d02      	cmp	r5, #2
 8000cec:	dc00      	bgt.n	8000cf0 <__aeabi_dmul+0x470>
 8000cee:	e096      	b.n	8000e1e <__aeabi_dmul+0x59e>
 8000cf0:	2300      	movs	r3, #0
 8000cf2:	2400      	movs	r4, #0
 8000cf4:	2001      	movs	r0, #1
 8000cf6:	9301      	str	r3, [sp, #4]
 8000cf8:	e60c      	b.n	8000914 <__aeabi_dmul+0x94>
 8000cfa:	4649      	mov	r1, r9
 8000cfc:	2302      	movs	r3, #2
 8000cfe:	9a00      	ldr	r2, [sp, #0]
 8000d00:	432b      	orrs	r3, r5
 8000d02:	4051      	eors	r1, r2
 8000d04:	b2ca      	uxtb	r2, r1
 8000d06:	9203      	str	r2, [sp, #12]
 8000d08:	2b0a      	cmp	r3, #10
 8000d0a:	dd00      	ble.n	8000d0e <__aeabi_dmul+0x48e>
 8000d0c:	e634      	b.n	8000978 <__aeabi_dmul+0xf8>
 8000d0e:	2d00      	cmp	r5, #0
 8000d10:	d157      	bne.n	8000dc2 <__aeabi_dmul+0x542>
 8000d12:	9b03      	ldr	r3, [sp, #12]
 8000d14:	4699      	mov	r9, r3
 8000d16:	2400      	movs	r4, #0
 8000d18:	2200      	movs	r2, #0
 8000d1a:	4b49      	ldr	r3, [pc, #292]	@ (8000e40 <__aeabi_dmul+0x5c0>)
 8000d1c:	e60e      	b.n	800093c <__aeabi_dmul+0xbc>
 8000d1e:	4658      	mov	r0, fp
 8000d20:	2101      	movs	r1, #1
 8000d22:	1ac9      	subs	r1, r1, r3
 8000d24:	2938      	cmp	r1, #56	@ 0x38
 8000d26:	dd00      	ble.n	8000d2a <__aeabi_dmul+0x4aa>
 8000d28:	e62f      	b.n	800098a <__aeabi_dmul+0x10a>
 8000d2a:	291f      	cmp	r1, #31
 8000d2c:	dd56      	ble.n	8000ddc <__aeabi_dmul+0x55c>
 8000d2e:	221f      	movs	r2, #31
 8000d30:	4654      	mov	r4, sl
 8000d32:	4252      	negs	r2, r2
 8000d34:	1ad3      	subs	r3, r2, r3
 8000d36:	40dc      	lsrs	r4, r3
 8000d38:	2920      	cmp	r1, #32
 8000d3a:	d007      	beq.n	8000d4c <__aeabi_dmul+0x4cc>
 8000d3c:	4b41      	ldr	r3, [pc, #260]	@ (8000e44 <__aeabi_dmul+0x5c4>)
 8000d3e:	4642      	mov	r2, r8
 8000d40:	469c      	mov	ip, r3
 8000d42:	4653      	mov	r3, sl
 8000d44:	4460      	add	r0, ip
 8000d46:	4083      	lsls	r3, r0
 8000d48:	431a      	orrs	r2, r3
 8000d4a:	4690      	mov	r8, r2
 8000d4c:	4642      	mov	r2, r8
 8000d4e:	2107      	movs	r1, #7
 8000d50:	1e53      	subs	r3, r2, #1
 8000d52:	419a      	sbcs	r2, r3
 8000d54:	000b      	movs	r3, r1
 8000d56:	4322      	orrs	r2, r4
 8000d58:	4013      	ands	r3, r2
 8000d5a:	2400      	movs	r4, #0
 8000d5c:	4211      	tst	r1, r2
 8000d5e:	d009      	beq.n	8000d74 <__aeabi_dmul+0x4f4>
 8000d60:	230f      	movs	r3, #15
 8000d62:	4013      	ands	r3, r2
 8000d64:	2b04      	cmp	r3, #4
 8000d66:	d05d      	beq.n	8000e24 <__aeabi_dmul+0x5a4>
 8000d68:	1d11      	adds	r1, r2, #4
 8000d6a:	4291      	cmp	r1, r2
 8000d6c:	419b      	sbcs	r3, r3
 8000d6e:	000a      	movs	r2, r1
 8000d70:	425b      	negs	r3, r3
 8000d72:	075b      	lsls	r3, r3, #29
 8000d74:	08d2      	lsrs	r2, r2, #3
 8000d76:	431a      	orrs	r2, r3
 8000d78:	2300      	movs	r3, #0
 8000d7a:	e5df      	b.n	800093c <__aeabi_dmul+0xbc>
 8000d7c:	9b03      	ldr	r3, [sp, #12]
 8000d7e:	4699      	mov	r9, r3
 8000d80:	e5fa      	b.n	8000978 <__aeabi_dmul+0xf8>
 8000d82:	9801      	ldr	r0, [sp, #4]
 8000d84:	f000 fd38 	bl	80017f8 <__clzsi2>
 8000d88:	0002      	movs	r2, r0
 8000d8a:	0003      	movs	r3, r0
 8000d8c:	3215      	adds	r2, #21
 8000d8e:	3320      	adds	r3, #32
 8000d90:	2a1c      	cmp	r2, #28
 8000d92:	dc00      	bgt.n	8000d96 <__aeabi_dmul+0x516>
 8000d94:	e738      	b.n	8000c08 <__aeabi_dmul+0x388>
 8000d96:	9a01      	ldr	r2, [sp, #4]
 8000d98:	3808      	subs	r0, #8
 8000d9a:	4082      	lsls	r2, r0
 8000d9c:	e73f      	b.n	8000c1e <__aeabi_dmul+0x39e>
 8000d9e:	f000 fd2b 	bl	80017f8 <__clzsi2>
 8000da2:	2315      	movs	r3, #21
 8000da4:	469c      	mov	ip, r3
 8000da6:	4484      	add	ip, r0
 8000da8:	0002      	movs	r2, r0
 8000daa:	4663      	mov	r3, ip
 8000dac:	3220      	adds	r2, #32
 8000dae:	2b1c      	cmp	r3, #28
 8000db0:	dc00      	bgt.n	8000db4 <__aeabi_dmul+0x534>
 8000db2:	e758      	b.n	8000c66 <__aeabi_dmul+0x3e6>
 8000db4:	2300      	movs	r3, #0
 8000db6:	4698      	mov	r8, r3
 8000db8:	0023      	movs	r3, r4
 8000dba:	3808      	subs	r0, #8
 8000dbc:	4083      	lsls	r3, r0
 8000dbe:	469a      	mov	sl, r3
 8000dc0:	e762      	b.n	8000c88 <__aeabi_dmul+0x408>
 8000dc2:	001d      	movs	r5, r3
 8000dc4:	2300      	movs	r3, #0
 8000dc6:	2400      	movs	r4, #0
 8000dc8:	2002      	movs	r0, #2
 8000dca:	9301      	str	r3, [sp, #4]
 8000dcc:	e5a2      	b.n	8000914 <__aeabi_dmul+0x94>
 8000dce:	9002      	str	r0, [sp, #8]
 8000dd0:	e632      	b.n	8000a38 <__aeabi_dmul+0x1b8>
 8000dd2:	431c      	orrs	r4, r3
 8000dd4:	9b00      	ldr	r3, [sp, #0]
 8000dd6:	9a01      	ldr	r2, [sp, #4]
 8000dd8:	4699      	mov	r9, r3
 8000dda:	e5ae      	b.n	800093a <__aeabi_dmul+0xba>
 8000ddc:	4b1a      	ldr	r3, [pc, #104]	@ (8000e48 <__aeabi_dmul+0x5c8>)
 8000dde:	4652      	mov	r2, sl
 8000de0:	18c3      	adds	r3, r0, r3
 8000de2:	4640      	mov	r0, r8
 8000de4:	409a      	lsls	r2, r3
 8000de6:	40c8      	lsrs	r0, r1
 8000de8:	4302      	orrs	r2, r0
 8000dea:	4640      	mov	r0, r8
 8000dec:	4098      	lsls	r0, r3
 8000dee:	0003      	movs	r3, r0
 8000df0:	1e58      	subs	r0, r3, #1
 8000df2:	4183      	sbcs	r3, r0
 8000df4:	4654      	mov	r4, sl
 8000df6:	431a      	orrs	r2, r3
 8000df8:	40cc      	lsrs	r4, r1
 8000dfa:	0753      	lsls	r3, r2, #29
 8000dfc:	d009      	beq.n	8000e12 <__aeabi_dmul+0x592>
 8000dfe:	230f      	movs	r3, #15
 8000e00:	4013      	ands	r3, r2
 8000e02:	2b04      	cmp	r3, #4
 8000e04:	d005      	beq.n	8000e12 <__aeabi_dmul+0x592>
 8000e06:	1d13      	adds	r3, r2, #4
 8000e08:	4293      	cmp	r3, r2
 8000e0a:	4192      	sbcs	r2, r2
 8000e0c:	4252      	negs	r2, r2
 8000e0e:	18a4      	adds	r4, r4, r2
 8000e10:	001a      	movs	r2, r3
 8000e12:	0223      	lsls	r3, r4, #8
 8000e14:	d508      	bpl.n	8000e28 <__aeabi_dmul+0x5a8>
 8000e16:	2301      	movs	r3, #1
 8000e18:	2400      	movs	r4, #0
 8000e1a:	2200      	movs	r2, #0
 8000e1c:	e58e      	b.n	800093c <__aeabi_dmul+0xbc>
 8000e1e:	4689      	mov	r9, r1
 8000e20:	2400      	movs	r4, #0
 8000e22:	e58b      	b.n	800093c <__aeabi_dmul+0xbc>
 8000e24:	2300      	movs	r3, #0
 8000e26:	e7a5      	b.n	8000d74 <__aeabi_dmul+0x4f4>
 8000e28:	0763      	lsls	r3, r4, #29
 8000e2a:	0264      	lsls	r4, r4, #9
 8000e2c:	0b24      	lsrs	r4, r4, #12
 8000e2e:	e7a1      	b.n	8000d74 <__aeabi_dmul+0x4f4>
 8000e30:	9b00      	ldr	r3, [sp, #0]
 8000e32:	46a2      	mov	sl, r4
 8000e34:	4699      	mov	r9, r3
 8000e36:	9b01      	ldr	r3, [sp, #4]
 8000e38:	4698      	mov	r8, r3
 8000e3a:	e737      	b.n	8000cac <__aeabi_dmul+0x42c>
 8000e3c:	fffffc0d 	.word	0xfffffc0d
 8000e40:	000007ff 	.word	0x000007ff
 8000e44:	0000043e 	.word	0x0000043e
 8000e48:	0000041e 	.word	0x0000041e

08000e4c <__aeabi_dsub>:
 8000e4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e4e:	4657      	mov	r7, sl
 8000e50:	464e      	mov	r6, r9
 8000e52:	4645      	mov	r5, r8
 8000e54:	46de      	mov	lr, fp
 8000e56:	b5e0      	push	{r5, r6, r7, lr}
 8000e58:	b083      	sub	sp, #12
 8000e5a:	9000      	str	r0, [sp, #0]
 8000e5c:	9101      	str	r1, [sp, #4]
 8000e5e:	030c      	lsls	r4, r1, #12
 8000e60:	004d      	lsls	r5, r1, #1
 8000e62:	0fce      	lsrs	r6, r1, #31
 8000e64:	0a61      	lsrs	r1, r4, #9
 8000e66:	9c00      	ldr	r4, [sp, #0]
 8000e68:	005f      	lsls	r7, r3, #1
 8000e6a:	0f64      	lsrs	r4, r4, #29
 8000e6c:	430c      	orrs	r4, r1
 8000e6e:	9900      	ldr	r1, [sp, #0]
 8000e70:	9200      	str	r2, [sp, #0]
 8000e72:	9301      	str	r3, [sp, #4]
 8000e74:	00c8      	lsls	r0, r1, #3
 8000e76:	0319      	lsls	r1, r3, #12
 8000e78:	0d7b      	lsrs	r3, r7, #21
 8000e7a:	4699      	mov	r9, r3
 8000e7c:	9b01      	ldr	r3, [sp, #4]
 8000e7e:	4fcc      	ldr	r7, [pc, #816]	@ (80011b0 <__aeabi_dsub+0x364>)
 8000e80:	0fdb      	lsrs	r3, r3, #31
 8000e82:	469c      	mov	ip, r3
 8000e84:	0a4b      	lsrs	r3, r1, #9
 8000e86:	9900      	ldr	r1, [sp, #0]
 8000e88:	4680      	mov	r8, r0
 8000e8a:	0f49      	lsrs	r1, r1, #29
 8000e8c:	4319      	orrs	r1, r3
 8000e8e:	9b00      	ldr	r3, [sp, #0]
 8000e90:	468b      	mov	fp, r1
 8000e92:	00da      	lsls	r2, r3, #3
 8000e94:	4692      	mov	sl, r2
 8000e96:	0d6d      	lsrs	r5, r5, #21
 8000e98:	45b9      	cmp	r9, r7
 8000e9a:	d100      	bne.n	8000e9e <__aeabi_dsub+0x52>
 8000e9c:	e0bf      	b.n	800101e <__aeabi_dsub+0x1d2>
 8000e9e:	2301      	movs	r3, #1
 8000ea0:	4661      	mov	r1, ip
 8000ea2:	4059      	eors	r1, r3
 8000ea4:	464b      	mov	r3, r9
 8000ea6:	468c      	mov	ip, r1
 8000ea8:	1aeb      	subs	r3, r5, r3
 8000eaa:	428e      	cmp	r6, r1
 8000eac:	d075      	beq.n	8000f9a <__aeabi_dsub+0x14e>
 8000eae:	2b00      	cmp	r3, #0
 8000eb0:	dc00      	bgt.n	8000eb4 <__aeabi_dsub+0x68>
 8000eb2:	e2a3      	b.n	80013fc <__aeabi_dsub+0x5b0>
 8000eb4:	4649      	mov	r1, r9
 8000eb6:	2900      	cmp	r1, #0
 8000eb8:	d100      	bne.n	8000ebc <__aeabi_dsub+0x70>
 8000eba:	e0ce      	b.n	800105a <__aeabi_dsub+0x20e>
 8000ebc:	42bd      	cmp	r5, r7
 8000ebe:	d100      	bne.n	8000ec2 <__aeabi_dsub+0x76>
 8000ec0:	e200      	b.n	80012c4 <__aeabi_dsub+0x478>
 8000ec2:	2701      	movs	r7, #1
 8000ec4:	2b38      	cmp	r3, #56	@ 0x38
 8000ec6:	dc19      	bgt.n	8000efc <__aeabi_dsub+0xb0>
 8000ec8:	2780      	movs	r7, #128	@ 0x80
 8000eca:	4659      	mov	r1, fp
 8000ecc:	043f      	lsls	r7, r7, #16
 8000ece:	4339      	orrs	r1, r7
 8000ed0:	468b      	mov	fp, r1
 8000ed2:	2b1f      	cmp	r3, #31
 8000ed4:	dd00      	ble.n	8000ed8 <__aeabi_dsub+0x8c>
 8000ed6:	e1fa      	b.n	80012ce <__aeabi_dsub+0x482>
 8000ed8:	2720      	movs	r7, #32
 8000eda:	1af9      	subs	r1, r7, r3
 8000edc:	468c      	mov	ip, r1
 8000ede:	4659      	mov	r1, fp
 8000ee0:	4667      	mov	r7, ip
 8000ee2:	40b9      	lsls	r1, r7
 8000ee4:	000f      	movs	r7, r1
 8000ee6:	0011      	movs	r1, r2
 8000ee8:	40d9      	lsrs	r1, r3
 8000eea:	430f      	orrs	r7, r1
 8000eec:	4661      	mov	r1, ip
 8000eee:	408a      	lsls	r2, r1
 8000ef0:	1e51      	subs	r1, r2, #1
 8000ef2:	418a      	sbcs	r2, r1
 8000ef4:	4659      	mov	r1, fp
 8000ef6:	40d9      	lsrs	r1, r3
 8000ef8:	4317      	orrs	r7, r2
 8000efa:	1a64      	subs	r4, r4, r1
 8000efc:	1bc7      	subs	r7, r0, r7
 8000efe:	42b8      	cmp	r0, r7
 8000f00:	4180      	sbcs	r0, r0
 8000f02:	4240      	negs	r0, r0
 8000f04:	1a24      	subs	r4, r4, r0
 8000f06:	0223      	lsls	r3, r4, #8
 8000f08:	d400      	bmi.n	8000f0c <__aeabi_dsub+0xc0>
 8000f0a:	e140      	b.n	800118e <__aeabi_dsub+0x342>
 8000f0c:	0264      	lsls	r4, r4, #9
 8000f0e:	0a64      	lsrs	r4, r4, #9
 8000f10:	2c00      	cmp	r4, #0
 8000f12:	d100      	bne.n	8000f16 <__aeabi_dsub+0xca>
 8000f14:	e154      	b.n	80011c0 <__aeabi_dsub+0x374>
 8000f16:	0020      	movs	r0, r4
 8000f18:	f000 fc6e 	bl	80017f8 <__clzsi2>
 8000f1c:	0003      	movs	r3, r0
 8000f1e:	3b08      	subs	r3, #8
 8000f20:	2120      	movs	r1, #32
 8000f22:	0038      	movs	r0, r7
 8000f24:	1aca      	subs	r2, r1, r3
 8000f26:	40d0      	lsrs	r0, r2
 8000f28:	409c      	lsls	r4, r3
 8000f2a:	0002      	movs	r2, r0
 8000f2c:	409f      	lsls	r7, r3
 8000f2e:	4322      	orrs	r2, r4
 8000f30:	429d      	cmp	r5, r3
 8000f32:	dd00      	ble.n	8000f36 <__aeabi_dsub+0xea>
 8000f34:	e1a6      	b.n	8001284 <__aeabi_dsub+0x438>
 8000f36:	1b58      	subs	r0, r3, r5
 8000f38:	3001      	adds	r0, #1
 8000f3a:	1a09      	subs	r1, r1, r0
 8000f3c:	003c      	movs	r4, r7
 8000f3e:	408f      	lsls	r7, r1
 8000f40:	40c4      	lsrs	r4, r0
 8000f42:	1e7b      	subs	r3, r7, #1
 8000f44:	419f      	sbcs	r7, r3
 8000f46:	0013      	movs	r3, r2
 8000f48:	408b      	lsls	r3, r1
 8000f4a:	4327      	orrs	r7, r4
 8000f4c:	431f      	orrs	r7, r3
 8000f4e:	40c2      	lsrs	r2, r0
 8000f50:	003b      	movs	r3, r7
 8000f52:	0014      	movs	r4, r2
 8000f54:	2500      	movs	r5, #0
 8000f56:	4313      	orrs	r3, r2
 8000f58:	d100      	bne.n	8000f5c <__aeabi_dsub+0x110>
 8000f5a:	e1f7      	b.n	800134c <__aeabi_dsub+0x500>
 8000f5c:	077b      	lsls	r3, r7, #29
 8000f5e:	d100      	bne.n	8000f62 <__aeabi_dsub+0x116>
 8000f60:	e377      	b.n	8001652 <__aeabi_dsub+0x806>
 8000f62:	230f      	movs	r3, #15
 8000f64:	0038      	movs	r0, r7
 8000f66:	403b      	ands	r3, r7
 8000f68:	2b04      	cmp	r3, #4
 8000f6a:	d004      	beq.n	8000f76 <__aeabi_dsub+0x12a>
 8000f6c:	1d38      	adds	r0, r7, #4
 8000f6e:	42b8      	cmp	r0, r7
 8000f70:	41bf      	sbcs	r7, r7
 8000f72:	427f      	negs	r7, r7
 8000f74:	19e4      	adds	r4, r4, r7
 8000f76:	0223      	lsls	r3, r4, #8
 8000f78:	d400      	bmi.n	8000f7c <__aeabi_dsub+0x130>
 8000f7a:	e368      	b.n	800164e <__aeabi_dsub+0x802>
 8000f7c:	4b8c      	ldr	r3, [pc, #560]	@ (80011b0 <__aeabi_dsub+0x364>)
 8000f7e:	3501      	adds	r5, #1
 8000f80:	429d      	cmp	r5, r3
 8000f82:	d100      	bne.n	8000f86 <__aeabi_dsub+0x13a>
 8000f84:	e0f4      	b.n	8001170 <__aeabi_dsub+0x324>
 8000f86:	4b8b      	ldr	r3, [pc, #556]	@ (80011b4 <__aeabi_dsub+0x368>)
 8000f88:	056d      	lsls	r5, r5, #21
 8000f8a:	401c      	ands	r4, r3
 8000f8c:	0d6d      	lsrs	r5, r5, #21
 8000f8e:	0767      	lsls	r7, r4, #29
 8000f90:	08c0      	lsrs	r0, r0, #3
 8000f92:	0264      	lsls	r4, r4, #9
 8000f94:	4307      	orrs	r7, r0
 8000f96:	0b24      	lsrs	r4, r4, #12
 8000f98:	e0ec      	b.n	8001174 <__aeabi_dsub+0x328>
 8000f9a:	2b00      	cmp	r3, #0
 8000f9c:	dc00      	bgt.n	8000fa0 <__aeabi_dsub+0x154>
 8000f9e:	e329      	b.n	80015f4 <__aeabi_dsub+0x7a8>
 8000fa0:	4649      	mov	r1, r9
 8000fa2:	2900      	cmp	r1, #0
 8000fa4:	d000      	beq.n	8000fa8 <__aeabi_dsub+0x15c>
 8000fa6:	e0d6      	b.n	8001156 <__aeabi_dsub+0x30a>
 8000fa8:	4659      	mov	r1, fp
 8000faa:	4311      	orrs	r1, r2
 8000fac:	d100      	bne.n	8000fb0 <__aeabi_dsub+0x164>
 8000fae:	e12e      	b.n	800120e <__aeabi_dsub+0x3c2>
 8000fb0:	1e59      	subs	r1, r3, #1
 8000fb2:	2b01      	cmp	r3, #1
 8000fb4:	d100      	bne.n	8000fb8 <__aeabi_dsub+0x16c>
 8000fb6:	e1e6      	b.n	8001386 <__aeabi_dsub+0x53a>
 8000fb8:	42bb      	cmp	r3, r7
 8000fba:	d100      	bne.n	8000fbe <__aeabi_dsub+0x172>
 8000fbc:	e182      	b.n	80012c4 <__aeabi_dsub+0x478>
 8000fbe:	2701      	movs	r7, #1
 8000fc0:	000b      	movs	r3, r1
 8000fc2:	2938      	cmp	r1, #56	@ 0x38
 8000fc4:	dc14      	bgt.n	8000ff0 <__aeabi_dsub+0x1a4>
 8000fc6:	2b1f      	cmp	r3, #31
 8000fc8:	dd00      	ble.n	8000fcc <__aeabi_dsub+0x180>
 8000fca:	e23c      	b.n	8001446 <__aeabi_dsub+0x5fa>
 8000fcc:	2720      	movs	r7, #32
 8000fce:	1af9      	subs	r1, r7, r3
 8000fd0:	468c      	mov	ip, r1
 8000fd2:	4659      	mov	r1, fp
 8000fd4:	4667      	mov	r7, ip
 8000fd6:	40b9      	lsls	r1, r7
 8000fd8:	000f      	movs	r7, r1
 8000fda:	0011      	movs	r1, r2
 8000fdc:	40d9      	lsrs	r1, r3
 8000fde:	430f      	orrs	r7, r1
 8000fe0:	4661      	mov	r1, ip
 8000fe2:	408a      	lsls	r2, r1
 8000fe4:	1e51      	subs	r1, r2, #1
 8000fe6:	418a      	sbcs	r2, r1
 8000fe8:	4659      	mov	r1, fp
 8000fea:	40d9      	lsrs	r1, r3
 8000fec:	4317      	orrs	r7, r2
 8000fee:	1864      	adds	r4, r4, r1
 8000ff0:	183f      	adds	r7, r7, r0
 8000ff2:	4287      	cmp	r7, r0
 8000ff4:	4180      	sbcs	r0, r0
 8000ff6:	4240      	negs	r0, r0
 8000ff8:	1824      	adds	r4, r4, r0
 8000ffa:	0223      	lsls	r3, r4, #8
 8000ffc:	d400      	bmi.n	8001000 <__aeabi_dsub+0x1b4>
 8000ffe:	e0c6      	b.n	800118e <__aeabi_dsub+0x342>
 8001000:	4b6b      	ldr	r3, [pc, #428]	@ (80011b0 <__aeabi_dsub+0x364>)
 8001002:	3501      	adds	r5, #1
 8001004:	429d      	cmp	r5, r3
 8001006:	d100      	bne.n	800100a <__aeabi_dsub+0x1be>
 8001008:	e0b2      	b.n	8001170 <__aeabi_dsub+0x324>
 800100a:	2101      	movs	r1, #1
 800100c:	4b69      	ldr	r3, [pc, #420]	@ (80011b4 <__aeabi_dsub+0x368>)
 800100e:	087a      	lsrs	r2, r7, #1
 8001010:	401c      	ands	r4, r3
 8001012:	4039      	ands	r1, r7
 8001014:	430a      	orrs	r2, r1
 8001016:	07e7      	lsls	r7, r4, #31
 8001018:	4317      	orrs	r7, r2
 800101a:	0864      	lsrs	r4, r4, #1
 800101c:	e79e      	b.n	8000f5c <__aeabi_dsub+0x110>
 800101e:	4b66      	ldr	r3, [pc, #408]	@ (80011b8 <__aeabi_dsub+0x36c>)
 8001020:	4311      	orrs	r1, r2
 8001022:	468a      	mov	sl, r1
 8001024:	18eb      	adds	r3, r5, r3
 8001026:	2900      	cmp	r1, #0
 8001028:	d028      	beq.n	800107c <__aeabi_dsub+0x230>
 800102a:	4566      	cmp	r6, ip
 800102c:	d02c      	beq.n	8001088 <__aeabi_dsub+0x23c>
 800102e:	2b00      	cmp	r3, #0
 8001030:	d05b      	beq.n	80010ea <__aeabi_dsub+0x29e>
 8001032:	2d00      	cmp	r5, #0
 8001034:	d100      	bne.n	8001038 <__aeabi_dsub+0x1ec>
 8001036:	e12c      	b.n	8001292 <__aeabi_dsub+0x446>
 8001038:	465b      	mov	r3, fp
 800103a:	4666      	mov	r6, ip
 800103c:	075f      	lsls	r7, r3, #29
 800103e:	08d2      	lsrs	r2, r2, #3
 8001040:	4317      	orrs	r7, r2
 8001042:	08dd      	lsrs	r5, r3, #3
 8001044:	003b      	movs	r3, r7
 8001046:	432b      	orrs	r3, r5
 8001048:	d100      	bne.n	800104c <__aeabi_dsub+0x200>
 800104a:	e0e2      	b.n	8001212 <__aeabi_dsub+0x3c6>
 800104c:	2480      	movs	r4, #128	@ 0x80
 800104e:	0324      	lsls	r4, r4, #12
 8001050:	432c      	orrs	r4, r5
 8001052:	0324      	lsls	r4, r4, #12
 8001054:	4d56      	ldr	r5, [pc, #344]	@ (80011b0 <__aeabi_dsub+0x364>)
 8001056:	0b24      	lsrs	r4, r4, #12
 8001058:	e08c      	b.n	8001174 <__aeabi_dsub+0x328>
 800105a:	4659      	mov	r1, fp
 800105c:	4311      	orrs	r1, r2
 800105e:	d100      	bne.n	8001062 <__aeabi_dsub+0x216>
 8001060:	e0d5      	b.n	800120e <__aeabi_dsub+0x3c2>
 8001062:	1e59      	subs	r1, r3, #1
 8001064:	2b01      	cmp	r3, #1
 8001066:	d100      	bne.n	800106a <__aeabi_dsub+0x21e>
 8001068:	e1b9      	b.n	80013de <__aeabi_dsub+0x592>
 800106a:	42bb      	cmp	r3, r7
 800106c:	d100      	bne.n	8001070 <__aeabi_dsub+0x224>
 800106e:	e1b1      	b.n	80013d4 <__aeabi_dsub+0x588>
 8001070:	2701      	movs	r7, #1
 8001072:	000b      	movs	r3, r1
 8001074:	2938      	cmp	r1, #56	@ 0x38
 8001076:	dd00      	ble.n	800107a <__aeabi_dsub+0x22e>
 8001078:	e740      	b.n	8000efc <__aeabi_dsub+0xb0>
 800107a:	e72a      	b.n	8000ed2 <__aeabi_dsub+0x86>
 800107c:	4661      	mov	r1, ip
 800107e:	2701      	movs	r7, #1
 8001080:	4079      	eors	r1, r7
 8001082:	468c      	mov	ip, r1
 8001084:	4566      	cmp	r6, ip
 8001086:	d1d2      	bne.n	800102e <__aeabi_dsub+0x1e2>
 8001088:	2b00      	cmp	r3, #0
 800108a:	d100      	bne.n	800108e <__aeabi_dsub+0x242>
 800108c:	e0c5      	b.n	800121a <__aeabi_dsub+0x3ce>
 800108e:	2d00      	cmp	r5, #0
 8001090:	d000      	beq.n	8001094 <__aeabi_dsub+0x248>
 8001092:	e155      	b.n	8001340 <__aeabi_dsub+0x4f4>
 8001094:	464b      	mov	r3, r9
 8001096:	0025      	movs	r5, r4
 8001098:	4305      	orrs	r5, r0
 800109a:	d100      	bne.n	800109e <__aeabi_dsub+0x252>
 800109c:	e212      	b.n	80014c4 <__aeabi_dsub+0x678>
 800109e:	1e59      	subs	r1, r3, #1
 80010a0:	468c      	mov	ip, r1
 80010a2:	2b01      	cmp	r3, #1
 80010a4:	d100      	bne.n	80010a8 <__aeabi_dsub+0x25c>
 80010a6:	e249      	b.n	800153c <__aeabi_dsub+0x6f0>
 80010a8:	4d41      	ldr	r5, [pc, #260]	@ (80011b0 <__aeabi_dsub+0x364>)
 80010aa:	42ab      	cmp	r3, r5
 80010ac:	d100      	bne.n	80010b0 <__aeabi_dsub+0x264>
 80010ae:	e28f      	b.n	80015d0 <__aeabi_dsub+0x784>
 80010b0:	2701      	movs	r7, #1
 80010b2:	2938      	cmp	r1, #56	@ 0x38
 80010b4:	dc11      	bgt.n	80010da <__aeabi_dsub+0x28e>
 80010b6:	4663      	mov	r3, ip
 80010b8:	2b1f      	cmp	r3, #31
 80010ba:	dd00      	ble.n	80010be <__aeabi_dsub+0x272>
 80010bc:	e25b      	b.n	8001576 <__aeabi_dsub+0x72a>
 80010be:	4661      	mov	r1, ip
 80010c0:	2320      	movs	r3, #32
 80010c2:	0027      	movs	r7, r4
 80010c4:	1a5b      	subs	r3, r3, r1
 80010c6:	0005      	movs	r5, r0
 80010c8:	4098      	lsls	r0, r3
 80010ca:	409f      	lsls	r7, r3
 80010cc:	40cd      	lsrs	r5, r1
 80010ce:	1e43      	subs	r3, r0, #1
 80010d0:	4198      	sbcs	r0, r3
 80010d2:	40cc      	lsrs	r4, r1
 80010d4:	432f      	orrs	r7, r5
 80010d6:	4307      	orrs	r7, r0
 80010d8:	44a3      	add	fp, r4
 80010da:	18bf      	adds	r7, r7, r2
 80010dc:	4297      	cmp	r7, r2
 80010de:	4192      	sbcs	r2, r2
 80010e0:	4252      	negs	r2, r2
 80010e2:	445a      	add	r2, fp
 80010e4:	0014      	movs	r4, r2
 80010e6:	464d      	mov	r5, r9
 80010e8:	e787      	b.n	8000ffa <__aeabi_dsub+0x1ae>
 80010ea:	4f34      	ldr	r7, [pc, #208]	@ (80011bc <__aeabi_dsub+0x370>)
 80010ec:	1c6b      	adds	r3, r5, #1
 80010ee:	423b      	tst	r3, r7
 80010f0:	d000      	beq.n	80010f4 <__aeabi_dsub+0x2a8>
 80010f2:	e0b6      	b.n	8001262 <__aeabi_dsub+0x416>
 80010f4:	4659      	mov	r1, fp
 80010f6:	0023      	movs	r3, r4
 80010f8:	4311      	orrs	r1, r2
 80010fa:	000f      	movs	r7, r1
 80010fc:	4303      	orrs	r3, r0
 80010fe:	2d00      	cmp	r5, #0
 8001100:	d000      	beq.n	8001104 <__aeabi_dsub+0x2b8>
 8001102:	e126      	b.n	8001352 <__aeabi_dsub+0x506>
 8001104:	2b00      	cmp	r3, #0
 8001106:	d100      	bne.n	800110a <__aeabi_dsub+0x2be>
 8001108:	e1c0      	b.n	800148c <__aeabi_dsub+0x640>
 800110a:	2900      	cmp	r1, #0
 800110c:	d100      	bne.n	8001110 <__aeabi_dsub+0x2c4>
 800110e:	e0a1      	b.n	8001254 <__aeabi_dsub+0x408>
 8001110:	1a83      	subs	r3, r0, r2
 8001112:	4698      	mov	r8, r3
 8001114:	465b      	mov	r3, fp
 8001116:	4540      	cmp	r0, r8
 8001118:	41ad      	sbcs	r5, r5
 800111a:	1ae3      	subs	r3, r4, r3
 800111c:	426d      	negs	r5, r5
 800111e:	1b5b      	subs	r3, r3, r5
 8001120:	2580      	movs	r5, #128	@ 0x80
 8001122:	042d      	lsls	r5, r5, #16
 8001124:	422b      	tst	r3, r5
 8001126:	d100      	bne.n	800112a <__aeabi_dsub+0x2de>
 8001128:	e14b      	b.n	80013c2 <__aeabi_dsub+0x576>
 800112a:	465b      	mov	r3, fp
 800112c:	1a10      	subs	r0, r2, r0
 800112e:	4282      	cmp	r2, r0
 8001130:	4192      	sbcs	r2, r2
 8001132:	1b1c      	subs	r4, r3, r4
 8001134:	0007      	movs	r7, r0
 8001136:	2601      	movs	r6, #1
 8001138:	4663      	mov	r3, ip
 800113a:	4252      	negs	r2, r2
 800113c:	1aa4      	subs	r4, r4, r2
 800113e:	4327      	orrs	r7, r4
 8001140:	401e      	ands	r6, r3
 8001142:	2f00      	cmp	r7, #0
 8001144:	d100      	bne.n	8001148 <__aeabi_dsub+0x2fc>
 8001146:	e142      	b.n	80013ce <__aeabi_dsub+0x582>
 8001148:	422c      	tst	r4, r5
 800114a:	d100      	bne.n	800114e <__aeabi_dsub+0x302>
 800114c:	e26d      	b.n	800162a <__aeabi_dsub+0x7de>
 800114e:	4b19      	ldr	r3, [pc, #100]	@ (80011b4 <__aeabi_dsub+0x368>)
 8001150:	2501      	movs	r5, #1
 8001152:	401c      	ands	r4, r3
 8001154:	e71b      	b.n	8000f8e <__aeabi_dsub+0x142>
 8001156:	42bd      	cmp	r5, r7
 8001158:	d100      	bne.n	800115c <__aeabi_dsub+0x310>
 800115a:	e13b      	b.n	80013d4 <__aeabi_dsub+0x588>
 800115c:	2701      	movs	r7, #1
 800115e:	2b38      	cmp	r3, #56	@ 0x38
 8001160:	dd00      	ble.n	8001164 <__aeabi_dsub+0x318>
 8001162:	e745      	b.n	8000ff0 <__aeabi_dsub+0x1a4>
 8001164:	2780      	movs	r7, #128	@ 0x80
 8001166:	4659      	mov	r1, fp
 8001168:	043f      	lsls	r7, r7, #16
 800116a:	4339      	orrs	r1, r7
 800116c:	468b      	mov	fp, r1
 800116e:	e72a      	b.n	8000fc6 <__aeabi_dsub+0x17a>
 8001170:	2400      	movs	r4, #0
 8001172:	2700      	movs	r7, #0
 8001174:	052d      	lsls	r5, r5, #20
 8001176:	4325      	orrs	r5, r4
 8001178:	07f6      	lsls	r6, r6, #31
 800117a:	4335      	orrs	r5, r6
 800117c:	0038      	movs	r0, r7
 800117e:	0029      	movs	r1, r5
 8001180:	b003      	add	sp, #12
 8001182:	bcf0      	pop	{r4, r5, r6, r7}
 8001184:	46bb      	mov	fp, r7
 8001186:	46b2      	mov	sl, r6
 8001188:	46a9      	mov	r9, r5
 800118a:	46a0      	mov	r8, r4
 800118c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800118e:	077b      	lsls	r3, r7, #29
 8001190:	d004      	beq.n	800119c <__aeabi_dsub+0x350>
 8001192:	230f      	movs	r3, #15
 8001194:	403b      	ands	r3, r7
 8001196:	2b04      	cmp	r3, #4
 8001198:	d000      	beq.n	800119c <__aeabi_dsub+0x350>
 800119a:	e6e7      	b.n	8000f6c <__aeabi_dsub+0x120>
 800119c:	002b      	movs	r3, r5
 800119e:	08f8      	lsrs	r0, r7, #3
 80011a0:	4a03      	ldr	r2, [pc, #12]	@ (80011b0 <__aeabi_dsub+0x364>)
 80011a2:	0767      	lsls	r7, r4, #29
 80011a4:	4307      	orrs	r7, r0
 80011a6:	08e5      	lsrs	r5, r4, #3
 80011a8:	4293      	cmp	r3, r2
 80011aa:	d100      	bne.n	80011ae <__aeabi_dsub+0x362>
 80011ac:	e74a      	b.n	8001044 <__aeabi_dsub+0x1f8>
 80011ae:	e0a5      	b.n	80012fc <__aeabi_dsub+0x4b0>
 80011b0:	000007ff 	.word	0x000007ff
 80011b4:	ff7fffff 	.word	0xff7fffff
 80011b8:	fffff801 	.word	0xfffff801
 80011bc:	000007fe 	.word	0x000007fe
 80011c0:	0038      	movs	r0, r7
 80011c2:	f000 fb19 	bl	80017f8 <__clzsi2>
 80011c6:	0003      	movs	r3, r0
 80011c8:	3318      	adds	r3, #24
 80011ca:	2b1f      	cmp	r3, #31
 80011cc:	dc00      	bgt.n	80011d0 <__aeabi_dsub+0x384>
 80011ce:	e6a7      	b.n	8000f20 <__aeabi_dsub+0xd4>
 80011d0:	003a      	movs	r2, r7
 80011d2:	3808      	subs	r0, #8
 80011d4:	4082      	lsls	r2, r0
 80011d6:	429d      	cmp	r5, r3
 80011d8:	dd00      	ble.n	80011dc <__aeabi_dsub+0x390>
 80011da:	e08a      	b.n	80012f2 <__aeabi_dsub+0x4a6>
 80011dc:	1b5b      	subs	r3, r3, r5
 80011de:	1c58      	adds	r0, r3, #1
 80011e0:	281f      	cmp	r0, #31
 80011e2:	dc00      	bgt.n	80011e6 <__aeabi_dsub+0x39a>
 80011e4:	e1d8      	b.n	8001598 <__aeabi_dsub+0x74c>
 80011e6:	0017      	movs	r7, r2
 80011e8:	3b1f      	subs	r3, #31
 80011ea:	40df      	lsrs	r7, r3
 80011ec:	2820      	cmp	r0, #32
 80011ee:	d005      	beq.n	80011fc <__aeabi_dsub+0x3b0>
 80011f0:	2340      	movs	r3, #64	@ 0x40
 80011f2:	1a1b      	subs	r3, r3, r0
 80011f4:	409a      	lsls	r2, r3
 80011f6:	1e53      	subs	r3, r2, #1
 80011f8:	419a      	sbcs	r2, r3
 80011fa:	4317      	orrs	r7, r2
 80011fc:	2500      	movs	r5, #0
 80011fe:	2f00      	cmp	r7, #0
 8001200:	d100      	bne.n	8001204 <__aeabi_dsub+0x3b8>
 8001202:	e0e5      	b.n	80013d0 <__aeabi_dsub+0x584>
 8001204:	077b      	lsls	r3, r7, #29
 8001206:	d000      	beq.n	800120a <__aeabi_dsub+0x3be>
 8001208:	e6ab      	b.n	8000f62 <__aeabi_dsub+0x116>
 800120a:	002c      	movs	r4, r5
 800120c:	e7c6      	b.n	800119c <__aeabi_dsub+0x350>
 800120e:	08c0      	lsrs	r0, r0, #3
 8001210:	e7c6      	b.n	80011a0 <__aeabi_dsub+0x354>
 8001212:	2700      	movs	r7, #0
 8001214:	2400      	movs	r4, #0
 8001216:	4dd1      	ldr	r5, [pc, #836]	@ (800155c <__aeabi_dsub+0x710>)
 8001218:	e7ac      	b.n	8001174 <__aeabi_dsub+0x328>
 800121a:	4fd1      	ldr	r7, [pc, #836]	@ (8001560 <__aeabi_dsub+0x714>)
 800121c:	1c6b      	adds	r3, r5, #1
 800121e:	423b      	tst	r3, r7
 8001220:	d171      	bne.n	8001306 <__aeabi_dsub+0x4ba>
 8001222:	0023      	movs	r3, r4
 8001224:	4303      	orrs	r3, r0
 8001226:	2d00      	cmp	r5, #0
 8001228:	d000      	beq.n	800122c <__aeabi_dsub+0x3e0>
 800122a:	e14e      	b.n	80014ca <__aeabi_dsub+0x67e>
 800122c:	4657      	mov	r7, sl
 800122e:	2b00      	cmp	r3, #0
 8001230:	d100      	bne.n	8001234 <__aeabi_dsub+0x3e8>
 8001232:	e1b5      	b.n	80015a0 <__aeabi_dsub+0x754>
 8001234:	2f00      	cmp	r7, #0
 8001236:	d00d      	beq.n	8001254 <__aeabi_dsub+0x408>
 8001238:	1883      	adds	r3, r0, r2
 800123a:	4283      	cmp	r3, r0
 800123c:	4180      	sbcs	r0, r0
 800123e:	445c      	add	r4, fp
 8001240:	4240      	negs	r0, r0
 8001242:	1824      	adds	r4, r4, r0
 8001244:	0222      	lsls	r2, r4, #8
 8001246:	d500      	bpl.n	800124a <__aeabi_dsub+0x3fe>
 8001248:	e1c8      	b.n	80015dc <__aeabi_dsub+0x790>
 800124a:	001f      	movs	r7, r3
 800124c:	4698      	mov	r8, r3
 800124e:	4327      	orrs	r7, r4
 8001250:	d100      	bne.n	8001254 <__aeabi_dsub+0x408>
 8001252:	e0bc      	b.n	80013ce <__aeabi_dsub+0x582>
 8001254:	4643      	mov	r3, r8
 8001256:	0767      	lsls	r7, r4, #29
 8001258:	08db      	lsrs	r3, r3, #3
 800125a:	431f      	orrs	r7, r3
 800125c:	08e5      	lsrs	r5, r4, #3
 800125e:	2300      	movs	r3, #0
 8001260:	e04c      	b.n	80012fc <__aeabi_dsub+0x4b0>
 8001262:	1a83      	subs	r3, r0, r2
 8001264:	4698      	mov	r8, r3
 8001266:	465b      	mov	r3, fp
 8001268:	4540      	cmp	r0, r8
 800126a:	41bf      	sbcs	r7, r7
 800126c:	1ae3      	subs	r3, r4, r3
 800126e:	427f      	negs	r7, r7
 8001270:	1bdb      	subs	r3, r3, r7
 8001272:	021f      	lsls	r7, r3, #8
 8001274:	d47c      	bmi.n	8001370 <__aeabi_dsub+0x524>
 8001276:	4647      	mov	r7, r8
 8001278:	431f      	orrs	r7, r3
 800127a:	d100      	bne.n	800127e <__aeabi_dsub+0x432>
 800127c:	e0a6      	b.n	80013cc <__aeabi_dsub+0x580>
 800127e:	001c      	movs	r4, r3
 8001280:	4647      	mov	r7, r8
 8001282:	e645      	b.n	8000f10 <__aeabi_dsub+0xc4>
 8001284:	4cb7      	ldr	r4, [pc, #732]	@ (8001564 <__aeabi_dsub+0x718>)
 8001286:	1aed      	subs	r5, r5, r3
 8001288:	4014      	ands	r4, r2
 800128a:	077b      	lsls	r3, r7, #29
 800128c:	d000      	beq.n	8001290 <__aeabi_dsub+0x444>
 800128e:	e780      	b.n	8001192 <__aeabi_dsub+0x346>
 8001290:	e784      	b.n	800119c <__aeabi_dsub+0x350>
 8001292:	464b      	mov	r3, r9
 8001294:	0025      	movs	r5, r4
 8001296:	4305      	orrs	r5, r0
 8001298:	d066      	beq.n	8001368 <__aeabi_dsub+0x51c>
 800129a:	1e5f      	subs	r7, r3, #1
 800129c:	2b01      	cmp	r3, #1
 800129e:	d100      	bne.n	80012a2 <__aeabi_dsub+0x456>
 80012a0:	e0fc      	b.n	800149c <__aeabi_dsub+0x650>
 80012a2:	4dae      	ldr	r5, [pc, #696]	@ (800155c <__aeabi_dsub+0x710>)
 80012a4:	42ab      	cmp	r3, r5
 80012a6:	d100      	bne.n	80012aa <__aeabi_dsub+0x45e>
 80012a8:	e15e      	b.n	8001568 <__aeabi_dsub+0x71c>
 80012aa:	4666      	mov	r6, ip
 80012ac:	2f38      	cmp	r7, #56	@ 0x38
 80012ae:	dc00      	bgt.n	80012b2 <__aeabi_dsub+0x466>
 80012b0:	e0b4      	b.n	800141c <__aeabi_dsub+0x5d0>
 80012b2:	2001      	movs	r0, #1
 80012b4:	1a17      	subs	r7, r2, r0
 80012b6:	42ba      	cmp	r2, r7
 80012b8:	4192      	sbcs	r2, r2
 80012ba:	465b      	mov	r3, fp
 80012bc:	4252      	negs	r2, r2
 80012be:	464d      	mov	r5, r9
 80012c0:	1a9c      	subs	r4, r3, r2
 80012c2:	e620      	b.n	8000f06 <__aeabi_dsub+0xba>
 80012c4:	0767      	lsls	r7, r4, #29
 80012c6:	08c0      	lsrs	r0, r0, #3
 80012c8:	4307      	orrs	r7, r0
 80012ca:	08e5      	lsrs	r5, r4, #3
 80012cc:	e6ba      	b.n	8001044 <__aeabi_dsub+0x1f8>
 80012ce:	001f      	movs	r7, r3
 80012d0:	4659      	mov	r1, fp
 80012d2:	3f20      	subs	r7, #32
 80012d4:	40f9      	lsrs	r1, r7
 80012d6:	000f      	movs	r7, r1
 80012d8:	2b20      	cmp	r3, #32
 80012da:	d005      	beq.n	80012e8 <__aeabi_dsub+0x49c>
 80012dc:	2140      	movs	r1, #64	@ 0x40
 80012de:	1acb      	subs	r3, r1, r3
 80012e0:	4659      	mov	r1, fp
 80012e2:	4099      	lsls	r1, r3
 80012e4:	430a      	orrs	r2, r1
 80012e6:	4692      	mov	sl, r2
 80012e8:	4653      	mov	r3, sl
 80012ea:	1e5a      	subs	r2, r3, #1
 80012ec:	4193      	sbcs	r3, r2
 80012ee:	431f      	orrs	r7, r3
 80012f0:	e604      	b.n	8000efc <__aeabi_dsub+0xb0>
 80012f2:	1aeb      	subs	r3, r5, r3
 80012f4:	4d9b      	ldr	r5, [pc, #620]	@ (8001564 <__aeabi_dsub+0x718>)
 80012f6:	4015      	ands	r5, r2
 80012f8:	076f      	lsls	r7, r5, #29
 80012fa:	08ed      	lsrs	r5, r5, #3
 80012fc:	032c      	lsls	r4, r5, #12
 80012fe:	055d      	lsls	r5, r3, #21
 8001300:	0b24      	lsrs	r4, r4, #12
 8001302:	0d6d      	lsrs	r5, r5, #21
 8001304:	e736      	b.n	8001174 <__aeabi_dsub+0x328>
 8001306:	4d95      	ldr	r5, [pc, #596]	@ (800155c <__aeabi_dsub+0x710>)
 8001308:	42ab      	cmp	r3, r5
 800130a:	d100      	bne.n	800130e <__aeabi_dsub+0x4c2>
 800130c:	e0d6      	b.n	80014bc <__aeabi_dsub+0x670>
 800130e:	1882      	adds	r2, r0, r2
 8001310:	0021      	movs	r1, r4
 8001312:	4282      	cmp	r2, r0
 8001314:	4180      	sbcs	r0, r0
 8001316:	4459      	add	r1, fp
 8001318:	4240      	negs	r0, r0
 800131a:	1808      	adds	r0, r1, r0
 800131c:	07c7      	lsls	r7, r0, #31
 800131e:	0852      	lsrs	r2, r2, #1
 8001320:	4317      	orrs	r7, r2
 8001322:	0844      	lsrs	r4, r0, #1
 8001324:	0752      	lsls	r2, r2, #29
 8001326:	d400      	bmi.n	800132a <__aeabi_dsub+0x4de>
 8001328:	e185      	b.n	8001636 <__aeabi_dsub+0x7ea>
 800132a:	220f      	movs	r2, #15
 800132c:	001d      	movs	r5, r3
 800132e:	403a      	ands	r2, r7
 8001330:	2a04      	cmp	r2, #4
 8001332:	d000      	beq.n	8001336 <__aeabi_dsub+0x4ea>
 8001334:	e61a      	b.n	8000f6c <__aeabi_dsub+0x120>
 8001336:	08ff      	lsrs	r7, r7, #3
 8001338:	0764      	lsls	r4, r4, #29
 800133a:	4327      	orrs	r7, r4
 800133c:	0905      	lsrs	r5, r0, #4
 800133e:	e7dd      	b.n	80012fc <__aeabi_dsub+0x4b0>
 8001340:	465b      	mov	r3, fp
 8001342:	08d2      	lsrs	r2, r2, #3
 8001344:	075f      	lsls	r7, r3, #29
 8001346:	4317      	orrs	r7, r2
 8001348:	08dd      	lsrs	r5, r3, #3
 800134a:	e67b      	b.n	8001044 <__aeabi_dsub+0x1f8>
 800134c:	2700      	movs	r7, #0
 800134e:	2400      	movs	r4, #0
 8001350:	e710      	b.n	8001174 <__aeabi_dsub+0x328>
 8001352:	2b00      	cmp	r3, #0
 8001354:	d000      	beq.n	8001358 <__aeabi_dsub+0x50c>
 8001356:	e0d6      	b.n	8001506 <__aeabi_dsub+0x6ba>
 8001358:	2900      	cmp	r1, #0
 800135a:	d000      	beq.n	800135e <__aeabi_dsub+0x512>
 800135c:	e12f      	b.n	80015be <__aeabi_dsub+0x772>
 800135e:	2480      	movs	r4, #128	@ 0x80
 8001360:	2600      	movs	r6, #0
 8001362:	4d7e      	ldr	r5, [pc, #504]	@ (800155c <__aeabi_dsub+0x710>)
 8001364:	0324      	lsls	r4, r4, #12
 8001366:	e705      	b.n	8001174 <__aeabi_dsub+0x328>
 8001368:	4666      	mov	r6, ip
 800136a:	465c      	mov	r4, fp
 800136c:	08d0      	lsrs	r0, r2, #3
 800136e:	e717      	b.n	80011a0 <__aeabi_dsub+0x354>
 8001370:	465b      	mov	r3, fp
 8001372:	1a17      	subs	r7, r2, r0
 8001374:	42ba      	cmp	r2, r7
 8001376:	4192      	sbcs	r2, r2
 8001378:	1b1c      	subs	r4, r3, r4
 800137a:	2601      	movs	r6, #1
 800137c:	4663      	mov	r3, ip
 800137e:	4252      	negs	r2, r2
 8001380:	1aa4      	subs	r4, r4, r2
 8001382:	401e      	ands	r6, r3
 8001384:	e5c4      	b.n	8000f10 <__aeabi_dsub+0xc4>
 8001386:	1883      	adds	r3, r0, r2
 8001388:	4283      	cmp	r3, r0
 800138a:	4180      	sbcs	r0, r0
 800138c:	445c      	add	r4, fp
 800138e:	4240      	negs	r0, r0
 8001390:	1825      	adds	r5, r4, r0
 8001392:	022a      	lsls	r2, r5, #8
 8001394:	d400      	bmi.n	8001398 <__aeabi_dsub+0x54c>
 8001396:	e0da      	b.n	800154e <__aeabi_dsub+0x702>
 8001398:	4a72      	ldr	r2, [pc, #456]	@ (8001564 <__aeabi_dsub+0x718>)
 800139a:	085b      	lsrs	r3, r3, #1
 800139c:	4015      	ands	r5, r2
 800139e:	07ea      	lsls	r2, r5, #31
 80013a0:	431a      	orrs	r2, r3
 80013a2:	0869      	lsrs	r1, r5, #1
 80013a4:	075b      	lsls	r3, r3, #29
 80013a6:	d400      	bmi.n	80013aa <__aeabi_dsub+0x55e>
 80013a8:	e14a      	b.n	8001640 <__aeabi_dsub+0x7f4>
 80013aa:	230f      	movs	r3, #15
 80013ac:	4013      	ands	r3, r2
 80013ae:	2b04      	cmp	r3, #4
 80013b0:	d100      	bne.n	80013b4 <__aeabi_dsub+0x568>
 80013b2:	e0fc      	b.n	80015ae <__aeabi_dsub+0x762>
 80013b4:	1d17      	adds	r7, r2, #4
 80013b6:	4297      	cmp	r7, r2
 80013b8:	41a4      	sbcs	r4, r4
 80013ba:	4264      	negs	r4, r4
 80013bc:	2502      	movs	r5, #2
 80013be:	1864      	adds	r4, r4, r1
 80013c0:	e6ec      	b.n	800119c <__aeabi_dsub+0x350>
 80013c2:	4647      	mov	r7, r8
 80013c4:	001c      	movs	r4, r3
 80013c6:	431f      	orrs	r7, r3
 80013c8:	d000      	beq.n	80013cc <__aeabi_dsub+0x580>
 80013ca:	e743      	b.n	8001254 <__aeabi_dsub+0x408>
 80013cc:	2600      	movs	r6, #0
 80013ce:	2500      	movs	r5, #0
 80013d0:	2400      	movs	r4, #0
 80013d2:	e6cf      	b.n	8001174 <__aeabi_dsub+0x328>
 80013d4:	08c0      	lsrs	r0, r0, #3
 80013d6:	0767      	lsls	r7, r4, #29
 80013d8:	4307      	orrs	r7, r0
 80013da:	08e5      	lsrs	r5, r4, #3
 80013dc:	e632      	b.n	8001044 <__aeabi_dsub+0x1f8>
 80013de:	1a87      	subs	r7, r0, r2
 80013e0:	465b      	mov	r3, fp
 80013e2:	42b8      	cmp	r0, r7
 80013e4:	4180      	sbcs	r0, r0
 80013e6:	1ae4      	subs	r4, r4, r3
 80013e8:	4240      	negs	r0, r0
 80013ea:	1a24      	subs	r4, r4, r0
 80013ec:	0223      	lsls	r3, r4, #8
 80013ee:	d428      	bmi.n	8001442 <__aeabi_dsub+0x5f6>
 80013f0:	0763      	lsls	r3, r4, #29
 80013f2:	08ff      	lsrs	r7, r7, #3
 80013f4:	431f      	orrs	r7, r3
 80013f6:	08e5      	lsrs	r5, r4, #3
 80013f8:	2301      	movs	r3, #1
 80013fa:	e77f      	b.n	80012fc <__aeabi_dsub+0x4b0>
 80013fc:	2b00      	cmp	r3, #0
 80013fe:	d100      	bne.n	8001402 <__aeabi_dsub+0x5b6>
 8001400:	e673      	b.n	80010ea <__aeabi_dsub+0x29e>
 8001402:	464b      	mov	r3, r9
 8001404:	1b5f      	subs	r7, r3, r5
 8001406:	003b      	movs	r3, r7
 8001408:	2d00      	cmp	r5, #0
 800140a:	d100      	bne.n	800140e <__aeabi_dsub+0x5c2>
 800140c:	e742      	b.n	8001294 <__aeabi_dsub+0x448>
 800140e:	2f38      	cmp	r7, #56	@ 0x38
 8001410:	dd00      	ble.n	8001414 <__aeabi_dsub+0x5c8>
 8001412:	e0ec      	b.n	80015ee <__aeabi_dsub+0x7a2>
 8001414:	2380      	movs	r3, #128	@ 0x80
 8001416:	000e      	movs	r6, r1
 8001418:	041b      	lsls	r3, r3, #16
 800141a:	431c      	orrs	r4, r3
 800141c:	2f1f      	cmp	r7, #31
 800141e:	dc25      	bgt.n	800146c <__aeabi_dsub+0x620>
 8001420:	2520      	movs	r5, #32
 8001422:	0023      	movs	r3, r4
 8001424:	1bed      	subs	r5, r5, r7
 8001426:	0001      	movs	r1, r0
 8001428:	40a8      	lsls	r0, r5
 800142a:	40ab      	lsls	r3, r5
 800142c:	40f9      	lsrs	r1, r7
 800142e:	1e45      	subs	r5, r0, #1
 8001430:	41a8      	sbcs	r0, r5
 8001432:	430b      	orrs	r3, r1
 8001434:	40fc      	lsrs	r4, r7
 8001436:	4318      	orrs	r0, r3
 8001438:	465b      	mov	r3, fp
 800143a:	1b1b      	subs	r3, r3, r4
 800143c:	469b      	mov	fp, r3
 800143e:	e739      	b.n	80012b4 <__aeabi_dsub+0x468>
 8001440:	4666      	mov	r6, ip
 8001442:	2501      	movs	r5, #1
 8001444:	e562      	b.n	8000f0c <__aeabi_dsub+0xc0>
 8001446:	001f      	movs	r7, r3
 8001448:	4659      	mov	r1, fp
 800144a:	3f20      	subs	r7, #32
 800144c:	40f9      	lsrs	r1, r7
 800144e:	468c      	mov	ip, r1
 8001450:	2b20      	cmp	r3, #32
 8001452:	d005      	beq.n	8001460 <__aeabi_dsub+0x614>
 8001454:	2740      	movs	r7, #64	@ 0x40
 8001456:	4659      	mov	r1, fp
 8001458:	1afb      	subs	r3, r7, r3
 800145a:	4099      	lsls	r1, r3
 800145c:	430a      	orrs	r2, r1
 800145e:	4692      	mov	sl, r2
 8001460:	4657      	mov	r7, sl
 8001462:	1e7b      	subs	r3, r7, #1
 8001464:	419f      	sbcs	r7, r3
 8001466:	4663      	mov	r3, ip
 8001468:	431f      	orrs	r7, r3
 800146a:	e5c1      	b.n	8000ff0 <__aeabi_dsub+0x1a4>
 800146c:	003b      	movs	r3, r7
 800146e:	0025      	movs	r5, r4
 8001470:	3b20      	subs	r3, #32
 8001472:	40dd      	lsrs	r5, r3
 8001474:	2f20      	cmp	r7, #32
 8001476:	d004      	beq.n	8001482 <__aeabi_dsub+0x636>
 8001478:	2340      	movs	r3, #64	@ 0x40
 800147a:	1bdb      	subs	r3, r3, r7
 800147c:	409c      	lsls	r4, r3
 800147e:	4320      	orrs	r0, r4
 8001480:	4680      	mov	r8, r0
 8001482:	4640      	mov	r0, r8
 8001484:	1e43      	subs	r3, r0, #1
 8001486:	4198      	sbcs	r0, r3
 8001488:	4328      	orrs	r0, r5
 800148a:	e713      	b.n	80012b4 <__aeabi_dsub+0x468>
 800148c:	2900      	cmp	r1, #0
 800148e:	d09d      	beq.n	80013cc <__aeabi_dsub+0x580>
 8001490:	2601      	movs	r6, #1
 8001492:	4663      	mov	r3, ip
 8001494:	465c      	mov	r4, fp
 8001496:	4690      	mov	r8, r2
 8001498:	401e      	ands	r6, r3
 800149a:	e6db      	b.n	8001254 <__aeabi_dsub+0x408>
 800149c:	1a17      	subs	r7, r2, r0
 800149e:	465b      	mov	r3, fp
 80014a0:	42ba      	cmp	r2, r7
 80014a2:	4192      	sbcs	r2, r2
 80014a4:	1b1c      	subs	r4, r3, r4
 80014a6:	4252      	negs	r2, r2
 80014a8:	1aa4      	subs	r4, r4, r2
 80014aa:	0223      	lsls	r3, r4, #8
 80014ac:	d4c8      	bmi.n	8001440 <__aeabi_dsub+0x5f4>
 80014ae:	0763      	lsls	r3, r4, #29
 80014b0:	08ff      	lsrs	r7, r7, #3
 80014b2:	431f      	orrs	r7, r3
 80014b4:	4666      	mov	r6, ip
 80014b6:	2301      	movs	r3, #1
 80014b8:	08e5      	lsrs	r5, r4, #3
 80014ba:	e71f      	b.n	80012fc <__aeabi_dsub+0x4b0>
 80014bc:	001d      	movs	r5, r3
 80014be:	2400      	movs	r4, #0
 80014c0:	2700      	movs	r7, #0
 80014c2:	e657      	b.n	8001174 <__aeabi_dsub+0x328>
 80014c4:	465c      	mov	r4, fp
 80014c6:	08d0      	lsrs	r0, r2, #3
 80014c8:	e66a      	b.n	80011a0 <__aeabi_dsub+0x354>
 80014ca:	2b00      	cmp	r3, #0
 80014cc:	d100      	bne.n	80014d0 <__aeabi_dsub+0x684>
 80014ce:	e737      	b.n	8001340 <__aeabi_dsub+0x4f4>
 80014d0:	4653      	mov	r3, sl
 80014d2:	08c0      	lsrs	r0, r0, #3
 80014d4:	0767      	lsls	r7, r4, #29
 80014d6:	4307      	orrs	r7, r0
 80014d8:	08e5      	lsrs	r5, r4, #3
 80014da:	2b00      	cmp	r3, #0
 80014dc:	d100      	bne.n	80014e0 <__aeabi_dsub+0x694>
 80014de:	e5b1      	b.n	8001044 <__aeabi_dsub+0x1f8>
 80014e0:	2380      	movs	r3, #128	@ 0x80
 80014e2:	031b      	lsls	r3, r3, #12
 80014e4:	421d      	tst	r5, r3
 80014e6:	d008      	beq.n	80014fa <__aeabi_dsub+0x6ae>
 80014e8:	4659      	mov	r1, fp
 80014ea:	08c8      	lsrs	r0, r1, #3
 80014ec:	4218      	tst	r0, r3
 80014ee:	d104      	bne.n	80014fa <__aeabi_dsub+0x6ae>
 80014f0:	08d2      	lsrs	r2, r2, #3
 80014f2:	0749      	lsls	r1, r1, #29
 80014f4:	430a      	orrs	r2, r1
 80014f6:	0017      	movs	r7, r2
 80014f8:	0005      	movs	r5, r0
 80014fa:	0f7b      	lsrs	r3, r7, #29
 80014fc:	00ff      	lsls	r7, r7, #3
 80014fe:	08ff      	lsrs	r7, r7, #3
 8001500:	075b      	lsls	r3, r3, #29
 8001502:	431f      	orrs	r7, r3
 8001504:	e59e      	b.n	8001044 <__aeabi_dsub+0x1f8>
 8001506:	08c0      	lsrs	r0, r0, #3
 8001508:	0763      	lsls	r3, r4, #29
 800150a:	4318      	orrs	r0, r3
 800150c:	08e5      	lsrs	r5, r4, #3
 800150e:	2900      	cmp	r1, #0
 8001510:	d053      	beq.n	80015ba <__aeabi_dsub+0x76e>
 8001512:	2380      	movs	r3, #128	@ 0x80
 8001514:	031b      	lsls	r3, r3, #12
 8001516:	421d      	tst	r5, r3
 8001518:	d00a      	beq.n	8001530 <__aeabi_dsub+0x6e4>
 800151a:	4659      	mov	r1, fp
 800151c:	08cc      	lsrs	r4, r1, #3
 800151e:	421c      	tst	r4, r3
 8001520:	d106      	bne.n	8001530 <__aeabi_dsub+0x6e4>
 8001522:	2601      	movs	r6, #1
 8001524:	4663      	mov	r3, ip
 8001526:	0025      	movs	r5, r4
 8001528:	08d0      	lsrs	r0, r2, #3
 800152a:	0749      	lsls	r1, r1, #29
 800152c:	4308      	orrs	r0, r1
 800152e:	401e      	ands	r6, r3
 8001530:	0f47      	lsrs	r7, r0, #29
 8001532:	00c0      	lsls	r0, r0, #3
 8001534:	08c0      	lsrs	r0, r0, #3
 8001536:	077f      	lsls	r7, r7, #29
 8001538:	4307      	orrs	r7, r0
 800153a:	e583      	b.n	8001044 <__aeabi_dsub+0x1f8>
 800153c:	1883      	adds	r3, r0, r2
 800153e:	4293      	cmp	r3, r2
 8001540:	4192      	sbcs	r2, r2
 8001542:	445c      	add	r4, fp
 8001544:	4252      	negs	r2, r2
 8001546:	18a5      	adds	r5, r4, r2
 8001548:	022a      	lsls	r2, r5, #8
 800154a:	d500      	bpl.n	800154e <__aeabi_dsub+0x702>
 800154c:	e724      	b.n	8001398 <__aeabi_dsub+0x54c>
 800154e:	076f      	lsls	r7, r5, #29
 8001550:	08db      	lsrs	r3, r3, #3
 8001552:	431f      	orrs	r7, r3
 8001554:	08ed      	lsrs	r5, r5, #3
 8001556:	2301      	movs	r3, #1
 8001558:	e6d0      	b.n	80012fc <__aeabi_dsub+0x4b0>
 800155a:	46c0      	nop			@ (mov r8, r8)
 800155c:	000007ff 	.word	0x000007ff
 8001560:	000007fe 	.word	0x000007fe
 8001564:	ff7fffff 	.word	0xff7fffff
 8001568:	465b      	mov	r3, fp
 800156a:	08d2      	lsrs	r2, r2, #3
 800156c:	075f      	lsls	r7, r3, #29
 800156e:	4666      	mov	r6, ip
 8001570:	4317      	orrs	r7, r2
 8001572:	08dd      	lsrs	r5, r3, #3
 8001574:	e566      	b.n	8001044 <__aeabi_dsub+0x1f8>
 8001576:	0025      	movs	r5, r4
 8001578:	3b20      	subs	r3, #32
 800157a:	40dd      	lsrs	r5, r3
 800157c:	4663      	mov	r3, ip
 800157e:	2b20      	cmp	r3, #32
 8001580:	d005      	beq.n	800158e <__aeabi_dsub+0x742>
 8001582:	2340      	movs	r3, #64	@ 0x40
 8001584:	4661      	mov	r1, ip
 8001586:	1a5b      	subs	r3, r3, r1
 8001588:	409c      	lsls	r4, r3
 800158a:	4320      	orrs	r0, r4
 800158c:	4680      	mov	r8, r0
 800158e:	4647      	mov	r7, r8
 8001590:	1e7b      	subs	r3, r7, #1
 8001592:	419f      	sbcs	r7, r3
 8001594:	432f      	orrs	r7, r5
 8001596:	e5a0      	b.n	80010da <__aeabi_dsub+0x28e>
 8001598:	2120      	movs	r1, #32
 800159a:	2700      	movs	r7, #0
 800159c:	1a09      	subs	r1, r1, r0
 800159e:	e4d2      	b.n	8000f46 <__aeabi_dsub+0xfa>
 80015a0:	2f00      	cmp	r7, #0
 80015a2:	d100      	bne.n	80015a6 <__aeabi_dsub+0x75a>
 80015a4:	e713      	b.n	80013ce <__aeabi_dsub+0x582>
 80015a6:	465c      	mov	r4, fp
 80015a8:	0017      	movs	r7, r2
 80015aa:	2500      	movs	r5, #0
 80015ac:	e5f6      	b.n	800119c <__aeabi_dsub+0x350>
 80015ae:	08d7      	lsrs	r7, r2, #3
 80015b0:	0749      	lsls	r1, r1, #29
 80015b2:	2302      	movs	r3, #2
 80015b4:	430f      	orrs	r7, r1
 80015b6:	092d      	lsrs	r5, r5, #4
 80015b8:	e6a0      	b.n	80012fc <__aeabi_dsub+0x4b0>
 80015ba:	0007      	movs	r7, r0
 80015bc:	e542      	b.n	8001044 <__aeabi_dsub+0x1f8>
 80015be:	465b      	mov	r3, fp
 80015c0:	2601      	movs	r6, #1
 80015c2:	075f      	lsls	r7, r3, #29
 80015c4:	08dd      	lsrs	r5, r3, #3
 80015c6:	4663      	mov	r3, ip
 80015c8:	08d2      	lsrs	r2, r2, #3
 80015ca:	4317      	orrs	r7, r2
 80015cc:	401e      	ands	r6, r3
 80015ce:	e539      	b.n	8001044 <__aeabi_dsub+0x1f8>
 80015d0:	465b      	mov	r3, fp
 80015d2:	08d2      	lsrs	r2, r2, #3
 80015d4:	075f      	lsls	r7, r3, #29
 80015d6:	4317      	orrs	r7, r2
 80015d8:	08dd      	lsrs	r5, r3, #3
 80015da:	e533      	b.n	8001044 <__aeabi_dsub+0x1f8>
 80015dc:	4a1e      	ldr	r2, [pc, #120]	@ (8001658 <__aeabi_dsub+0x80c>)
 80015de:	08db      	lsrs	r3, r3, #3
 80015e0:	4022      	ands	r2, r4
 80015e2:	0757      	lsls	r7, r2, #29
 80015e4:	0252      	lsls	r2, r2, #9
 80015e6:	2501      	movs	r5, #1
 80015e8:	431f      	orrs	r7, r3
 80015ea:	0b14      	lsrs	r4, r2, #12
 80015ec:	e5c2      	b.n	8001174 <__aeabi_dsub+0x328>
 80015ee:	000e      	movs	r6, r1
 80015f0:	2001      	movs	r0, #1
 80015f2:	e65f      	b.n	80012b4 <__aeabi_dsub+0x468>
 80015f4:	2b00      	cmp	r3, #0
 80015f6:	d00d      	beq.n	8001614 <__aeabi_dsub+0x7c8>
 80015f8:	464b      	mov	r3, r9
 80015fa:	1b5b      	subs	r3, r3, r5
 80015fc:	469c      	mov	ip, r3
 80015fe:	2d00      	cmp	r5, #0
 8001600:	d100      	bne.n	8001604 <__aeabi_dsub+0x7b8>
 8001602:	e548      	b.n	8001096 <__aeabi_dsub+0x24a>
 8001604:	2701      	movs	r7, #1
 8001606:	2b38      	cmp	r3, #56	@ 0x38
 8001608:	dd00      	ble.n	800160c <__aeabi_dsub+0x7c0>
 800160a:	e566      	b.n	80010da <__aeabi_dsub+0x28e>
 800160c:	2380      	movs	r3, #128	@ 0x80
 800160e:	041b      	lsls	r3, r3, #16
 8001610:	431c      	orrs	r4, r3
 8001612:	e550      	b.n	80010b6 <__aeabi_dsub+0x26a>
 8001614:	1c6b      	adds	r3, r5, #1
 8001616:	4d11      	ldr	r5, [pc, #68]	@ (800165c <__aeabi_dsub+0x810>)
 8001618:	422b      	tst	r3, r5
 800161a:	d000      	beq.n	800161e <__aeabi_dsub+0x7d2>
 800161c:	e673      	b.n	8001306 <__aeabi_dsub+0x4ba>
 800161e:	4659      	mov	r1, fp
 8001620:	0023      	movs	r3, r4
 8001622:	4311      	orrs	r1, r2
 8001624:	468a      	mov	sl, r1
 8001626:	4303      	orrs	r3, r0
 8001628:	e600      	b.n	800122c <__aeabi_dsub+0x3e0>
 800162a:	0767      	lsls	r7, r4, #29
 800162c:	08c0      	lsrs	r0, r0, #3
 800162e:	2300      	movs	r3, #0
 8001630:	4307      	orrs	r7, r0
 8001632:	08e5      	lsrs	r5, r4, #3
 8001634:	e662      	b.n	80012fc <__aeabi_dsub+0x4b0>
 8001636:	0764      	lsls	r4, r4, #29
 8001638:	08ff      	lsrs	r7, r7, #3
 800163a:	4327      	orrs	r7, r4
 800163c:	0905      	lsrs	r5, r0, #4
 800163e:	e65d      	b.n	80012fc <__aeabi_dsub+0x4b0>
 8001640:	08d2      	lsrs	r2, r2, #3
 8001642:	0749      	lsls	r1, r1, #29
 8001644:	4311      	orrs	r1, r2
 8001646:	000f      	movs	r7, r1
 8001648:	2302      	movs	r3, #2
 800164a:	092d      	lsrs	r5, r5, #4
 800164c:	e656      	b.n	80012fc <__aeabi_dsub+0x4b0>
 800164e:	0007      	movs	r7, r0
 8001650:	e5a4      	b.n	800119c <__aeabi_dsub+0x350>
 8001652:	0038      	movs	r0, r7
 8001654:	e48f      	b.n	8000f76 <__aeabi_dsub+0x12a>
 8001656:	46c0      	nop			@ (mov r8, r8)
 8001658:	ff7fffff 	.word	0xff7fffff
 800165c:	000007fe 	.word	0x000007fe

08001660 <__aeabi_d2iz>:
 8001660:	000b      	movs	r3, r1
 8001662:	0002      	movs	r2, r0
 8001664:	b570      	push	{r4, r5, r6, lr}
 8001666:	4d16      	ldr	r5, [pc, #88]	@ (80016c0 <__aeabi_d2iz+0x60>)
 8001668:	030c      	lsls	r4, r1, #12
 800166a:	b082      	sub	sp, #8
 800166c:	0049      	lsls	r1, r1, #1
 800166e:	2000      	movs	r0, #0
 8001670:	9200      	str	r2, [sp, #0]
 8001672:	9301      	str	r3, [sp, #4]
 8001674:	0b24      	lsrs	r4, r4, #12
 8001676:	0d49      	lsrs	r1, r1, #21
 8001678:	0fde      	lsrs	r6, r3, #31
 800167a:	42a9      	cmp	r1, r5
 800167c:	dd04      	ble.n	8001688 <__aeabi_d2iz+0x28>
 800167e:	4811      	ldr	r0, [pc, #68]	@ (80016c4 <__aeabi_d2iz+0x64>)
 8001680:	4281      	cmp	r1, r0
 8001682:	dd03      	ble.n	800168c <__aeabi_d2iz+0x2c>
 8001684:	4b10      	ldr	r3, [pc, #64]	@ (80016c8 <__aeabi_d2iz+0x68>)
 8001686:	18f0      	adds	r0, r6, r3
 8001688:	b002      	add	sp, #8
 800168a:	bd70      	pop	{r4, r5, r6, pc}
 800168c:	2080      	movs	r0, #128	@ 0x80
 800168e:	0340      	lsls	r0, r0, #13
 8001690:	4320      	orrs	r0, r4
 8001692:	4c0e      	ldr	r4, [pc, #56]	@ (80016cc <__aeabi_d2iz+0x6c>)
 8001694:	1a64      	subs	r4, r4, r1
 8001696:	2c1f      	cmp	r4, #31
 8001698:	dd08      	ble.n	80016ac <__aeabi_d2iz+0x4c>
 800169a:	4b0d      	ldr	r3, [pc, #52]	@ (80016d0 <__aeabi_d2iz+0x70>)
 800169c:	1a5b      	subs	r3, r3, r1
 800169e:	40d8      	lsrs	r0, r3
 80016a0:	0003      	movs	r3, r0
 80016a2:	4258      	negs	r0, r3
 80016a4:	2e00      	cmp	r6, #0
 80016a6:	d1ef      	bne.n	8001688 <__aeabi_d2iz+0x28>
 80016a8:	0018      	movs	r0, r3
 80016aa:	e7ed      	b.n	8001688 <__aeabi_d2iz+0x28>
 80016ac:	4b09      	ldr	r3, [pc, #36]	@ (80016d4 <__aeabi_d2iz+0x74>)
 80016ae:	9a00      	ldr	r2, [sp, #0]
 80016b0:	469c      	mov	ip, r3
 80016b2:	0003      	movs	r3, r0
 80016b4:	4461      	add	r1, ip
 80016b6:	408b      	lsls	r3, r1
 80016b8:	40e2      	lsrs	r2, r4
 80016ba:	4313      	orrs	r3, r2
 80016bc:	e7f1      	b.n	80016a2 <__aeabi_d2iz+0x42>
 80016be:	46c0      	nop			@ (mov r8, r8)
 80016c0:	000003fe 	.word	0x000003fe
 80016c4:	0000041d 	.word	0x0000041d
 80016c8:	7fffffff 	.word	0x7fffffff
 80016cc:	00000433 	.word	0x00000433
 80016d0:	00000413 	.word	0x00000413
 80016d4:	fffffbed 	.word	0xfffffbed

080016d8 <__aeabi_i2d>:
 80016d8:	b570      	push	{r4, r5, r6, lr}
 80016da:	2800      	cmp	r0, #0
 80016dc:	d016      	beq.n	800170c <__aeabi_i2d+0x34>
 80016de:	17c3      	asrs	r3, r0, #31
 80016e0:	18c5      	adds	r5, r0, r3
 80016e2:	405d      	eors	r5, r3
 80016e4:	0fc4      	lsrs	r4, r0, #31
 80016e6:	0028      	movs	r0, r5
 80016e8:	f000 f886 	bl	80017f8 <__clzsi2>
 80016ec:	4b10      	ldr	r3, [pc, #64]	@ (8001730 <__aeabi_i2d+0x58>)
 80016ee:	1a1b      	subs	r3, r3, r0
 80016f0:	055b      	lsls	r3, r3, #21
 80016f2:	0d5b      	lsrs	r3, r3, #21
 80016f4:	280a      	cmp	r0, #10
 80016f6:	dc14      	bgt.n	8001722 <__aeabi_i2d+0x4a>
 80016f8:	0002      	movs	r2, r0
 80016fa:	002e      	movs	r6, r5
 80016fc:	3215      	adds	r2, #21
 80016fe:	4096      	lsls	r6, r2
 8001700:	220b      	movs	r2, #11
 8001702:	1a12      	subs	r2, r2, r0
 8001704:	40d5      	lsrs	r5, r2
 8001706:	032d      	lsls	r5, r5, #12
 8001708:	0b2d      	lsrs	r5, r5, #12
 800170a:	e003      	b.n	8001714 <__aeabi_i2d+0x3c>
 800170c:	2400      	movs	r4, #0
 800170e:	2300      	movs	r3, #0
 8001710:	2500      	movs	r5, #0
 8001712:	2600      	movs	r6, #0
 8001714:	051b      	lsls	r3, r3, #20
 8001716:	432b      	orrs	r3, r5
 8001718:	07e4      	lsls	r4, r4, #31
 800171a:	4323      	orrs	r3, r4
 800171c:	0030      	movs	r0, r6
 800171e:	0019      	movs	r1, r3
 8001720:	bd70      	pop	{r4, r5, r6, pc}
 8001722:	380b      	subs	r0, #11
 8001724:	4085      	lsls	r5, r0
 8001726:	032d      	lsls	r5, r5, #12
 8001728:	2600      	movs	r6, #0
 800172a:	0b2d      	lsrs	r5, r5, #12
 800172c:	e7f2      	b.n	8001714 <__aeabi_i2d+0x3c>
 800172e:	46c0      	nop			@ (mov r8, r8)
 8001730:	0000041e 	.word	0x0000041e

08001734 <__aeabi_ui2d>:
 8001734:	b510      	push	{r4, lr}
 8001736:	1e04      	subs	r4, r0, #0
 8001738:	d010      	beq.n	800175c <__aeabi_ui2d+0x28>
 800173a:	f000 f85d 	bl	80017f8 <__clzsi2>
 800173e:	4b0e      	ldr	r3, [pc, #56]	@ (8001778 <__aeabi_ui2d+0x44>)
 8001740:	1a1b      	subs	r3, r3, r0
 8001742:	055b      	lsls	r3, r3, #21
 8001744:	0d5b      	lsrs	r3, r3, #21
 8001746:	280a      	cmp	r0, #10
 8001748:	dc0f      	bgt.n	800176a <__aeabi_ui2d+0x36>
 800174a:	220b      	movs	r2, #11
 800174c:	0021      	movs	r1, r4
 800174e:	1a12      	subs	r2, r2, r0
 8001750:	40d1      	lsrs	r1, r2
 8001752:	3015      	adds	r0, #21
 8001754:	030a      	lsls	r2, r1, #12
 8001756:	4084      	lsls	r4, r0
 8001758:	0b12      	lsrs	r2, r2, #12
 800175a:	e001      	b.n	8001760 <__aeabi_ui2d+0x2c>
 800175c:	2300      	movs	r3, #0
 800175e:	2200      	movs	r2, #0
 8001760:	051b      	lsls	r3, r3, #20
 8001762:	4313      	orrs	r3, r2
 8001764:	0020      	movs	r0, r4
 8001766:	0019      	movs	r1, r3
 8001768:	bd10      	pop	{r4, pc}
 800176a:	0022      	movs	r2, r4
 800176c:	380b      	subs	r0, #11
 800176e:	4082      	lsls	r2, r0
 8001770:	0312      	lsls	r2, r2, #12
 8001772:	2400      	movs	r4, #0
 8001774:	0b12      	lsrs	r2, r2, #12
 8001776:	e7f3      	b.n	8001760 <__aeabi_ui2d+0x2c>
 8001778:	0000041e 	.word	0x0000041e

0800177c <__aeabi_cdrcmple>:
 800177c:	4684      	mov	ip, r0
 800177e:	0010      	movs	r0, r2
 8001780:	4662      	mov	r2, ip
 8001782:	468c      	mov	ip, r1
 8001784:	0019      	movs	r1, r3
 8001786:	4663      	mov	r3, ip
 8001788:	e000      	b.n	800178c <__aeabi_cdcmpeq>
 800178a:	46c0      	nop			@ (mov r8, r8)

0800178c <__aeabi_cdcmpeq>:
 800178c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800178e:	f000 f905 	bl	800199c <__ledf2>
 8001792:	2800      	cmp	r0, #0
 8001794:	d401      	bmi.n	800179a <__aeabi_cdcmpeq+0xe>
 8001796:	2100      	movs	r1, #0
 8001798:	42c8      	cmn	r0, r1
 800179a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800179c <__aeabi_dcmpeq>:
 800179c:	b510      	push	{r4, lr}
 800179e:	f000 f849 	bl	8001834 <__eqdf2>
 80017a2:	4240      	negs	r0, r0
 80017a4:	3001      	adds	r0, #1
 80017a6:	bd10      	pop	{r4, pc}

080017a8 <__aeabi_dcmplt>:
 80017a8:	b510      	push	{r4, lr}
 80017aa:	f000 f8f7 	bl	800199c <__ledf2>
 80017ae:	2800      	cmp	r0, #0
 80017b0:	db01      	blt.n	80017b6 <__aeabi_dcmplt+0xe>
 80017b2:	2000      	movs	r0, #0
 80017b4:	bd10      	pop	{r4, pc}
 80017b6:	2001      	movs	r0, #1
 80017b8:	bd10      	pop	{r4, pc}
 80017ba:	46c0      	nop			@ (mov r8, r8)

080017bc <__aeabi_dcmple>:
 80017bc:	b510      	push	{r4, lr}
 80017be:	f000 f8ed 	bl	800199c <__ledf2>
 80017c2:	2800      	cmp	r0, #0
 80017c4:	dd01      	ble.n	80017ca <__aeabi_dcmple+0xe>
 80017c6:	2000      	movs	r0, #0
 80017c8:	bd10      	pop	{r4, pc}
 80017ca:	2001      	movs	r0, #1
 80017cc:	bd10      	pop	{r4, pc}
 80017ce:	46c0      	nop			@ (mov r8, r8)

080017d0 <__aeabi_dcmpgt>:
 80017d0:	b510      	push	{r4, lr}
 80017d2:	f000 f873 	bl	80018bc <__gedf2>
 80017d6:	2800      	cmp	r0, #0
 80017d8:	dc01      	bgt.n	80017de <__aeabi_dcmpgt+0xe>
 80017da:	2000      	movs	r0, #0
 80017dc:	bd10      	pop	{r4, pc}
 80017de:	2001      	movs	r0, #1
 80017e0:	bd10      	pop	{r4, pc}
 80017e2:	46c0      	nop			@ (mov r8, r8)

080017e4 <__aeabi_dcmpge>:
 80017e4:	b510      	push	{r4, lr}
 80017e6:	f000 f869 	bl	80018bc <__gedf2>
 80017ea:	2800      	cmp	r0, #0
 80017ec:	da01      	bge.n	80017f2 <__aeabi_dcmpge+0xe>
 80017ee:	2000      	movs	r0, #0
 80017f0:	bd10      	pop	{r4, pc}
 80017f2:	2001      	movs	r0, #1
 80017f4:	bd10      	pop	{r4, pc}
 80017f6:	46c0      	nop			@ (mov r8, r8)

080017f8 <__clzsi2>:
 80017f8:	211c      	movs	r1, #28
 80017fa:	2301      	movs	r3, #1
 80017fc:	041b      	lsls	r3, r3, #16
 80017fe:	4298      	cmp	r0, r3
 8001800:	d301      	bcc.n	8001806 <__clzsi2+0xe>
 8001802:	0c00      	lsrs	r0, r0, #16
 8001804:	3910      	subs	r1, #16
 8001806:	0a1b      	lsrs	r3, r3, #8
 8001808:	4298      	cmp	r0, r3
 800180a:	d301      	bcc.n	8001810 <__clzsi2+0x18>
 800180c:	0a00      	lsrs	r0, r0, #8
 800180e:	3908      	subs	r1, #8
 8001810:	091b      	lsrs	r3, r3, #4
 8001812:	4298      	cmp	r0, r3
 8001814:	d301      	bcc.n	800181a <__clzsi2+0x22>
 8001816:	0900      	lsrs	r0, r0, #4
 8001818:	3904      	subs	r1, #4
 800181a:	a202      	add	r2, pc, #8	@ (adr r2, 8001824 <__clzsi2+0x2c>)
 800181c:	5c10      	ldrb	r0, [r2, r0]
 800181e:	1840      	adds	r0, r0, r1
 8001820:	4770      	bx	lr
 8001822:	46c0      	nop			@ (mov r8, r8)
 8001824:	02020304 	.word	0x02020304
 8001828:	01010101 	.word	0x01010101
	...

08001834 <__eqdf2>:
 8001834:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001836:	4657      	mov	r7, sl
 8001838:	46de      	mov	lr, fp
 800183a:	464e      	mov	r6, r9
 800183c:	4645      	mov	r5, r8
 800183e:	b5e0      	push	{r5, r6, r7, lr}
 8001840:	000d      	movs	r5, r1
 8001842:	0004      	movs	r4, r0
 8001844:	0fe8      	lsrs	r0, r5, #31
 8001846:	4683      	mov	fp, r0
 8001848:	0309      	lsls	r1, r1, #12
 800184a:	0fd8      	lsrs	r0, r3, #31
 800184c:	0b09      	lsrs	r1, r1, #12
 800184e:	4682      	mov	sl, r0
 8001850:	4819      	ldr	r0, [pc, #100]	@ (80018b8 <__eqdf2+0x84>)
 8001852:	468c      	mov	ip, r1
 8001854:	031f      	lsls	r7, r3, #12
 8001856:	0069      	lsls	r1, r5, #1
 8001858:	005e      	lsls	r6, r3, #1
 800185a:	0d49      	lsrs	r1, r1, #21
 800185c:	0b3f      	lsrs	r7, r7, #12
 800185e:	0d76      	lsrs	r6, r6, #21
 8001860:	4281      	cmp	r1, r0
 8001862:	d018      	beq.n	8001896 <__eqdf2+0x62>
 8001864:	4286      	cmp	r6, r0
 8001866:	d00f      	beq.n	8001888 <__eqdf2+0x54>
 8001868:	2001      	movs	r0, #1
 800186a:	42b1      	cmp	r1, r6
 800186c:	d10d      	bne.n	800188a <__eqdf2+0x56>
 800186e:	45bc      	cmp	ip, r7
 8001870:	d10b      	bne.n	800188a <__eqdf2+0x56>
 8001872:	4294      	cmp	r4, r2
 8001874:	d109      	bne.n	800188a <__eqdf2+0x56>
 8001876:	45d3      	cmp	fp, sl
 8001878:	d01c      	beq.n	80018b4 <__eqdf2+0x80>
 800187a:	2900      	cmp	r1, #0
 800187c:	d105      	bne.n	800188a <__eqdf2+0x56>
 800187e:	4660      	mov	r0, ip
 8001880:	4320      	orrs	r0, r4
 8001882:	1e43      	subs	r3, r0, #1
 8001884:	4198      	sbcs	r0, r3
 8001886:	e000      	b.n	800188a <__eqdf2+0x56>
 8001888:	2001      	movs	r0, #1
 800188a:	bcf0      	pop	{r4, r5, r6, r7}
 800188c:	46bb      	mov	fp, r7
 800188e:	46b2      	mov	sl, r6
 8001890:	46a9      	mov	r9, r5
 8001892:	46a0      	mov	r8, r4
 8001894:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001896:	2001      	movs	r0, #1
 8001898:	428e      	cmp	r6, r1
 800189a:	d1f6      	bne.n	800188a <__eqdf2+0x56>
 800189c:	4661      	mov	r1, ip
 800189e:	4339      	orrs	r1, r7
 80018a0:	000f      	movs	r7, r1
 80018a2:	4317      	orrs	r7, r2
 80018a4:	4327      	orrs	r7, r4
 80018a6:	d1f0      	bne.n	800188a <__eqdf2+0x56>
 80018a8:	465b      	mov	r3, fp
 80018aa:	4652      	mov	r2, sl
 80018ac:	1a98      	subs	r0, r3, r2
 80018ae:	1e43      	subs	r3, r0, #1
 80018b0:	4198      	sbcs	r0, r3
 80018b2:	e7ea      	b.n	800188a <__eqdf2+0x56>
 80018b4:	2000      	movs	r0, #0
 80018b6:	e7e8      	b.n	800188a <__eqdf2+0x56>
 80018b8:	000007ff 	.word	0x000007ff

080018bc <__gedf2>:
 80018bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80018be:	4657      	mov	r7, sl
 80018c0:	464e      	mov	r6, r9
 80018c2:	4645      	mov	r5, r8
 80018c4:	46de      	mov	lr, fp
 80018c6:	b5e0      	push	{r5, r6, r7, lr}
 80018c8:	000d      	movs	r5, r1
 80018ca:	030e      	lsls	r6, r1, #12
 80018cc:	0049      	lsls	r1, r1, #1
 80018ce:	0d49      	lsrs	r1, r1, #21
 80018d0:	468a      	mov	sl, r1
 80018d2:	0fdf      	lsrs	r7, r3, #31
 80018d4:	0fe9      	lsrs	r1, r5, #31
 80018d6:	46bc      	mov	ip, r7
 80018d8:	b083      	sub	sp, #12
 80018da:	4f2f      	ldr	r7, [pc, #188]	@ (8001998 <__gedf2+0xdc>)
 80018dc:	0004      	movs	r4, r0
 80018de:	4680      	mov	r8, r0
 80018e0:	9101      	str	r1, [sp, #4]
 80018e2:	0058      	lsls	r0, r3, #1
 80018e4:	0319      	lsls	r1, r3, #12
 80018e6:	4691      	mov	r9, r2
 80018e8:	0b36      	lsrs	r6, r6, #12
 80018ea:	0b09      	lsrs	r1, r1, #12
 80018ec:	0d40      	lsrs	r0, r0, #21
 80018ee:	45ba      	cmp	sl, r7
 80018f0:	d01d      	beq.n	800192e <__gedf2+0x72>
 80018f2:	42b8      	cmp	r0, r7
 80018f4:	d00d      	beq.n	8001912 <__gedf2+0x56>
 80018f6:	4657      	mov	r7, sl
 80018f8:	2f00      	cmp	r7, #0
 80018fa:	d12a      	bne.n	8001952 <__gedf2+0x96>
 80018fc:	4334      	orrs	r4, r6
 80018fe:	2800      	cmp	r0, #0
 8001900:	d124      	bne.n	800194c <__gedf2+0x90>
 8001902:	430a      	orrs	r2, r1
 8001904:	d036      	beq.n	8001974 <__gedf2+0xb8>
 8001906:	2c00      	cmp	r4, #0
 8001908:	d141      	bne.n	800198e <__gedf2+0xd2>
 800190a:	4663      	mov	r3, ip
 800190c:	0058      	lsls	r0, r3, #1
 800190e:	3801      	subs	r0, #1
 8001910:	e015      	b.n	800193e <__gedf2+0x82>
 8001912:	4311      	orrs	r1, r2
 8001914:	d138      	bne.n	8001988 <__gedf2+0xcc>
 8001916:	4653      	mov	r3, sl
 8001918:	2b00      	cmp	r3, #0
 800191a:	d101      	bne.n	8001920 <__gedf2+0x64>
 800191c:	4326      	orrs	r6, r4
 800191e:	d0f4      	beq.n	800190a <__gedf2+0x4e>
 8001920:	9b01      	ldr	r3, [sp, #4]
 8001922:	4563      	cmp	r3, ip
 8001924:	d107      	bne.n	8001936 <__gedf2+0x7a>
 8001926:	9b01      	ldr	r3, [sp, #4]
 8001928:	0058      	lsls	r0, r3, #1
 800192a:	3801      	subs	r0, #1
 800192c:	e007      	b.n	800193e <__gedf2+0x82>
 800192e:	4326      	orrs	r6, r4
 8001930:	d12a      	bne.n	8001988 <__gedf2+0xcc>
 8001932:	4550      	cmp	r0, sl
 8001934:	d021      	beq.n	800197a <__gedf2+0xbe>
 8001936:	2001      	movs	r0, #1
 8001938:	9b01      	ldr	r3, [sp, #4]
 800193a:	425f      	negs	r7, r3
 800193c:	4338      	orrs	r0, r7
 800193e:	b003      	add	sp, #12
 8001940:	bcf0      	pop	{r4, r5, r6, r7}
 8001942:	46bb      	mov	fp, r7
 8001944:	46b2      	mov	sl, r6
 8001946:	46a9      	mov	r9, r5
 8001948:	46a0      	mov	r8, r4
 800194a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800194c:	2c00      	cmp	r4, #0
 800194e:	d0dc      	beq.n	800190a <__gedf2+0x4e>
 8001950:	e7e6      	b.n	8001920 <__gedf2+0x64>
 8001952:	2800      	cmp	r0, #0
 8001954:	d0ef      	beq.n	8001936 <__gedf2+0x7a>
 8001956:	9b01      	ldr	r3, [sp, #4]
 8001958:	4563      	cmp	r3, ip
 800195a:	d1ec      	bne.n	8001936 <__gedf2+0x7a>
 800195c:	4582      	cmp	sl, r0
 800195e:	dcea      	bgt.n	8001936 <__gedf2+0x7a>
 8001960:	dbe1      	blt.n	8001926 <__gedf2+0x6a>
 8001962:	428e      	cmp	r6, r1
 8001964:	d8e7      	bhi.n	8001936 <__gedf2+0x7a>
 8001966:	d1de      	bne.n	8001926 <__gedf2+0x6a>
 8001968:	45c8      	cmp	r8, r9
 800196a:	d8e4      	bhi.n	8001936 <__gedf2+0x7a>
 800196c:	2000      	movs	r0, #0
 800196e:	45c8      	cmp	r8, r9
 8001970:	d2e5      	bcs.n	800193e <__gedf2+0x82>
 8001972:	e7d8      	b.n	8001926 <__gedf2+0x6a>
 8001974:	2c00      	cmp	r4, #0
 8001976:	d0e2      	beq.n	800193e <__gedf2+0x82>
 8001978:	e7dd      	b.n	8001936 <__gedf2+0x7a>
 800197a:	4311      	orrs	r1, r2
 800197c:	d104      	bne.n	8001988 <__gedf2+0xcc>
 800197e:	9b01      	ldr	r3, [sp, #4]
 8001980:	4563      	cmp	r3, ip
 8001982:	d1d8      	bne.n	8001936 <__gedf2+0x7a>
 8001984:	2000      	movs	r0, #0
 8001986:	e7da      	b.n	800193e <__gedf2+0x82>
 8001988:	2002      	movs	r0, #2
 800198a:	4240      	negs	r0, r0
 800198c:	e7d7      	b.n	800193e <__gedf2+0x82>
 800198e:	9b01      	ldr	r3, [sp, #4]
 8001990:	4563      	cmp	r3, ip
 8001992:	d0e6      	beq.n	8001962 <__gedf2+0xa6>
 8001994:	e7cf      	b.n	8001936 <__gedf2+0x7a>
 8001996:	46c0      	nop			@ (mov r8, r8)
 8001998:	000007ff 	.word	0x000007ff

0800199c <__ledf2>:
 800199c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800199e:	4657      	mov	r7, sl
 80019a0:	464e      	mov	r6, r9
 80019a2:	4645      	mov	r5, r8
 80019a4:	46de      	mov	lr, fp
 80019a6:	b5e0      	push	{r5, r6, r7, lr}
 80019a8:	000d      	movs	r5, r1
 80019aa:	030e      	lsls	r6, r1, #12
 80019ac:	0049      	lsls	r1, r1, #1
 80019ae:	0d49      	lsrs	r1, r1, #21
 80019b0:	468a      	mov	sl, r1
 80019b2:	0fdf      	lsrs	r7, r3, #31
 80019b4:	0fe9      	lsrs	r1, r5, #31
 80019b6:	46bc      	mov	ip, r7
 80019b8:	b083      	sub	sp, #12
 80019ba:	4f2e      	ldr	r7, [pc, #184]	@ (8001a74 <__ledf2+0xd8>)
 80019bc:	0004      	movs	r4, r0
 80019be:	4680      	mov	r8, r0
 80019c0:	9101      	str	r1, [sp, #4]
 80019c2:	0058      	lsls	r0, r3, #1
 80019c4:	0319      	lsls	r1, r3, #12
 80019c6:	4691      	mov	r9, r2
 80019c8:	0b36      	lsrs	r6, r6, #12
 80019ca:	0b09      	lsrs	r1, r1, #12
 80019cc:	0d40      	lsrs	r0, r0, #21
 80019ce:	45ba      	cmp	sl, r7
 80019d0:	d01e      	beq.n	8001a10 <__ledf2+0x74>
 80019d2:	42b8      	cmp	r0, r7
 80019d4:	d00d      	beq.n	80019f2 <__ledf2+0x56>
 80019d6:	4657      	mov	r7, sl
 80019d8:	2f00      	cmp	r7, #0
 80019da:	d127      	bne.n	8001a2c <__ledf2+0x90>
 80019dc:	4334      	orrs	r4, r6
 80019de:	2800      	cmp	r0, #0
 80019e0:	d133      	bne.n	8001a4a <__ledf2+0xae>
 80019e2:	430a      	orrs	r2, r1
 80019e4:	d034      	beq.n	8001a50 <__ledf2+0xb4>
 80019e6:	2c00      	cmp	r4, #0
 80019e8:	d140      	bne.n	8001a6c <__ledf2+0xd0>
 80019ea:	4663      	mov	r3, ip
 80019ec:	0058      	lsls	r0, r3, #1
 80019ee:	3801      	subs	r0, #1
 80019f0:	e015      	b.n	8001a1e <__ledf2+0x82>
 80019f2:	4311      	orrs	r1, r2
 80019f4:	d112      	bne.n	8001a1c <__ledf2+0x80>
 80019f6:	4653      	mov	r3, sl
 80019f8:	2b00      	cmp	r3, #0
 80019fa:	d101      	bne.n	8001a00 <__ledf2+0x64>
 80019fc:	4326      	orrs	r6, r4
 80019fe:	d0f4      	beq.n	80019ea <__ledf2+0x4e>
 8001a00:	9b01      	ldr	r3, [sp, #4]
 8001a02:	4563      	cmp	r3, ip
 8001a04:	d01d      	beq.n	8001a42 <__ledf2+0xa6>
 8001a06:	2001      	movs	r0, #1
 8001a08:	9b01      	ldr	r3, [sp, #4]
 8001a0a:	425f      	negs	r7, r3
 8001a0c:	4338      	orrs	r0, r7
 8001a0e:	e006      	b.n	8001a1e <__ledf2+0x82>
 8001a10:	4326      	orrs	r6, r4
 8001a12:	d103      	bne.n	8001a1c <__ledf2+0x80>
 8001a14:	4550      	cmp	r0, sl
 8001a16:	d1f6      	bne.n	8001a06 <__ledf2+0x6a>
 8001a18:	4311      	orrs	r1, r2
 8001a1a:	d01c      	beq.n	8001a56 <__ledf2+0xba>
 8001a1c:	2002      	movs	r0, #2
 8001a1e:	b003      	add	sp, #12
 8001a20:	bcf0      	pop	{r4, r5, r6, r7}
 8001a22:	46bb      	mov	fp, r7
 8001a24:	46b2      	mov	sl, r6
 8001a26:	46a9      	mov	r9, r5
 8001a28:	46a0      	mov	r8, r4
 8001a2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a2c:	2800      	cmp	r0, #0
 8001a2e:	d0ea      	beq.n	8001a06 <__ledf2+0x6a>
 8001a30:	9b01      	ldr	r3, [sp, #4]
 8001a32:	4563      	cmp	r3, ip
 8001a34:	d1e7      	bne.n	8001a06 <__ledf2+0x6a>
 8001a36:	4582      	cmp	sl, r0
 8001a38:	dce5      	bgt.n	8001a06 <__ledf2+0x6a>
 8001a3a:	db02      	blt.n	8001a42 <__ledf2+0xa6>
 8001a3c:	428e      	cmp	r6, r1
 8001a3e:	d8e2      	bhi.n	8001a06 <__ledf2+0x6a>
 8001a40:	d00e      	beq.n	8001a60 <__ledf2+0xc4>
 8001a42:	9b01      	ldr	r3, [sp, #4]
 8001a44:	0058      	lsls	r0, r3, #1
 8001a46:	3801      	subs	r0, #1
 8001a48:	e7e9      	b.n	8001a1e <__ledf2+0x82>
 8001a4a:	2c00      	cmp	r4, #0
 8001a4c:	d0cd      	beq.n	80019ea <__ledf2+0x4e>
 8001a4e:	e7d7      	b.n	8001a00 <__ledf2+0x64>
 8001a50:	2c00      	cmp	r4, #0
 8001a52:	d0e4      	beq.n	8001a1e <__ledf2+0x82>
 8001a54:	e7d7      	b.n	8001a06 <__ledf2+0x6a>
 8001a56:	9b01      	ldr	r3, [sp, #4]
 8001a58:	2000      	movs	r0, #0
 8001a5a:	4563      	cmp	r3, ip
 8001a5c:	d0df      	beq.n	8001a1e <__ledf2+0x82>
 8001a5e:	e7d2      	b.n	8001a06 <__ledf2+0x6a>
 8001a60:	45c8      	cmp	r8, r9
 8001a62:	d8d0      	bhi.n	8001a06 <__ledf2+0x6a>
 8001a64:	2000      	movs	r0, #0
 8001a66:	45c8      	cmp	r8, r9
 8001a68:	d2d9      	bcs.n	8001a1e <__ledf2+0x82>
 8001a6a:	e7ea      	b.n	8001a42 <__ledf2+0xa6>
 8001a6c:	9b01      	ldr	r3, [sp, #4]
 8001a6e:	4563      	cmp	r3, ip
 8001a70:	d0e4      	beq.n	8001a3c <__ledf2+0xa0>
 8001a72:	e7c8      	b.n	8001a06 <__ledf2+0x6a>
 8001a74:	000007ff 	.word	0x000007ff

08001a78 <USER_ADC_Init>:
#include <stdint.h>
#include "main.h"
#include "systicklib.h"
#include "adclib.h"

void USER_ADC_Init(void) {
 8001a78:	b580      	push	{r7, lr}
 8001a7a:	b082      	sub	sp, #8
 8001a7c:	af00      	add	r7, sp, #0
    // Habilitar reloj del ADC y del puerto GPIOA
    RCC->IOPENR |= (1 << 0);     // GPIOAEN
 8001a7e:	4b4b      	ldr	r3, [pc, #300]	@ (8001bac <USER_ADC_Init+0x134>)
 8001a80:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8001a82:	4b4a      	ldr	r3, [pc, #296]	@ (8001bac <USER_ADC_Init+0x134>)
 8001a84:	2101      	movs	r1, #1
 8001a86:	430a      	orrs	r2, r1
 8001a88:	635a      	str	r2, [r3, #52]	@ 0x34
    RCC->APBENR2 |= (1 << 20);   // ADCEN
 8001a8a:	4b48      	ldr	r3, [pc, #288]	@ (8001bac <USER_ADC_Init+0x134>)
 8001a8c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001a8e:	4b47      	ldr	r3, [pc, #284]	@ (8001bac <USER_ADC_Init+0x134>)
 8001a90:	2180      	movs	r1, #128	@ 0x80
 8001a92:	0349      	lsls	r1, r1, #13
 8001a94:	430a      	orrs	r2, r1
 8001a96:	641a      	str	r2, [r3, #64]	@ 0x40

    // PA0 en modo analógico
    GPIOA->MODER |= (0x3 << (0*2));   // Modo analógico
 8001a98:	23a0      	movs	r3, #160	@ 0xa0
 8001a9a:	05db      	lsls	r3, r3, #23
 8001a9c:	681a      	ldr	r2, [r3, #0]
 8001a9e:	23a0      	movs	r3, #160	@ 0xa0
 8001aa0:	05db      	lsls	r3, r3, #23
 8001aa2:	2103      	movs	r1, #3
 8001aa4:	430a      	orrs	r2, r1
 8001aa6:	601a      	str	r2, [r3, #0]
    GPIOA->PUPDR &= ~(0x3 << (0*2));  // Sin pull-up/pull-down
 8001aa8:	23a0      	movs	r3, #160	@ 0xa0
 8001aaa:	05db      	lsls	r3, r3, #23
 8001aac:	68da      	ldr	r2, [r3, #12]
 8001aae:	23a0      	movs	r3, #160	@ 0xa0
 8001ab0:	05db      	lsls	r3, r3, #23
 8001ab2:	2103      	movs	r1, #3
 8001ab4:	438a      	bics	r2, r1
 8001ab6:	60da      	str	r2, [r3, #12]

    // Configurar CKMODE para reloj síncrono dividido entre 2
    ADC->CFGR2 &= ~(0x3 << 30);        // Borrar CKMODE
 8001ab8:	4b3d      	ldr	r3, [pc, #244]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001aba:	691a      	ldr	r2, [r3, #16]
 8001abc:	4b3c      	ldr	r3, [pc, #240]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001abe:	0092      	lsls	r2, r2, #2
 8001ac0:	0892      	lsrs	r2, r2, #2
 8001ac2:	611a      	str	r2, [r3, #16]
    //ADC1->CFGR2 |=  (0x1 << 30);        // CKMODE = 01: PCLK/2

    ADC->CCR &= ~(0xE << 18);
 8001ac4:	4a3a      	ldr	r2, [pc, #232]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001ac6:	23c2      	movs	r3, #194	@ 0xc2
 8001ac8:	009b      	lsls	r3, r3, #2
 8001aca:	58d3      	ldr	r3, [r2, r3]
 8001acc:	4938      	ldr	r1, [pc, #224]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001ace:	4a39      	ldr	r2, [pc, #228]	@ (8001bb4 <USER_ADC_Init+0x13c>)
 8001ad0:	401a      	ands	r2, r3
 8001ad2:	23c2      	movs	r3, #194	@ 0xc2
 8001ad4:	009b      	lsls	r3, r3, #2
 8001ad6:	50ca      	str	r2, [r1, r3]
    ADC->CCR|=  (0x1 << 18);
 8001ad8:	4a35      	ldr	r2, [pc, #212]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001ada:	23c2      	movs	r3, #194	@ 0xc2
 8001adc:	009b      	lsls	r3, r3, #2
 8001ade:	58d3      	ldr	r3, [r2, r3]
 8001ae0:	4933      	ldr	r1, [pc, #204]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001ae2:	2280      	movs	r2, #128	@ 0x80
 8001ae4:	02d2      	lsls	r2, r2, #11
 8001ae6:	431a      	orrs	r2, r3
 8001ae8:	23c2      	movs	r3, #194	@ 0xc2
 8001aea:	009b      	lsls	r3, r3, #2
 8001aec:	50ca      	str	r2, [r1, r3]

    // Configurar resolución, alineación, modo de conversión
    ADC->CFGR1 &= ~(0x1 << 13); // Single conversion mode
 8001aee:	4b30      	ldr	r3, [pc, #192]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001af0:	68da      	ldr	r2, [r3, #12]
 8001af2:	4b2f      	ldr	r3, [pc, #188]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001af4:	4930      	ldr	r1, [pc, #192]	@ (8001bb8 <USER_ADC_Init+0x140>)
 8001af6:	400a      	ands	r2, r1
 8001af8:	60da      	str	r2, [r3, #12]
    ADC->CFGR1 &= ~(0x1 << 5);  // Right alignment
 8001afa:	4b2d      	ldr	r3, [pc, #180]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001afc:	68da      	ldr	r2, [r3, #12]
 8001afe:	4b2c      	ldr	r3, [pc, #176]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001b00:	2120      	movs	r1, #32
 8001b02:	438a      	bics	r2, r1
 8001b04:	60da      	str	r2, [r3, #12]
    ADC->CFGR1 &= ~(0x3 << 3);  // 12-bit resolution
 8001b06:	4b2a      	ldr	r3, [pc, #168]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001b08:	68da      	ldr	r2, [r3, #12]
 8001b0a:	4b29      	ldr	r3, [pc, #164]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001b0c:	2118      	movs	r1, #24
 8001b0e:	438a      	bics	r2, r1
 8001b10:	60da      	str	r2, [r3, #12]

    // Tiempo de muestreo
    ADC->SMPR |= ~(0x7 << 0);   // Sampling time = shortest
 8001b12:	4b27      	ldr	r3, [pc, #156]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001b14:	695a      	ldr	r2, [r3, #20]
 8001b16:	4b26      	ldr	r3, [pc, #152]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001b18:	2108      	movs	r1, #8
 8001b1a:	4249      	negs	r1, r1
 8001b1c:	430a      	orrs	r2, r1
 8001b1e:	615a      	str	r2, [r3, #20]

    ADC->ISR &= ~( 0x1UL << 13U );
 8001b20:	4b23      	ldr	r3, [pc, #140]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001b22:	681a      	ldr	r2, [r3, #0]
 8001b24:	4b22      	ldr	r3, [pc, #136]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001b26:	4924      	ldr	r1, [pc, #144]	@ (8001bb8 <USER_ADC_Init+0x140>)
 8001b28:	400a      	ands	r2, r1
 8001b2a:	601a      	str	r2, [r3, #0]
    ADC->CFGR1 &= ~( 0x1UL << 21U ) & ~( 0x1UL << 2U );
 8001b2c:	4b20      	ldr	r3, [pc, #128]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001b2e:	68da      	ldr	r2, [r3, #12]
 8001b30:	4b1f      	ldr	r3, [pc, #124]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001b32:	4922      	ldr	r1, [pc, #136]	@ (8001bbc <USER_ADC_Init+0x144>)
 8001b34:	400a      	ands	r2, r1
 8001b36:	60da      	str	r2, [r3, #12]

    // Seleccionar canal 0 (PA0)
    ADC->CHSELR |= (1 << 0);
 8001b38:	4b1d      	ldr	r3, [pc, #116]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001b3a:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8001b3c:	4b1c      	ldr	r3, [pc, #112]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001b3e:	2101      	movs	r1, #1
 8001b40:	430a      	orrs	r2, r1
 8001b42:	629a      	str	r2, [r3, #40]	@ 0x28

    while( !(ADC->ISR & (0x1UL << 13U)));
 8001b44:	46c0      	nop			@ (mov r8, r8)
 8001b46:	4b1a      	ldr	r3, [pc, #104]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001b48:	681a      	ldr	r2, [r3, #0]
 8001b4a:	2380      	movs	r3, #128	@ 0x80
 8001b4c:	019b      	lsls	r3, r3, #6
 8001b4e:	4013      	ands	r3, r2
 8001b50:	d0f9      	beq.n	8001b46 <USER_ADC_Init+0xce>

    // Habilitar regulador interno

    ADC->CR |= (1 << 28);       // ADVREGEN
 8001b52:	4b17      	ldr	r3, [pc, #92]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001b54:	689a      	ldr	r2, [r3, #8]
 8001b56:	4b16      	ldr	r3, [pc, #88]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001b58:	2180      	movs	r1, #128	@ 0x80
 8001b5a:	0549      	lsls	r1, r1, #21
 8001b5c:	430a      	orrs	r2, r1
 8001b5e:	609a      	str	r2, [r3, #8]
    SysTick_Delay(1);            // Delay > 10 us
 8001b60:	2001      	movs	r0, #1
 8001b62:	f000 fc4f 	bl	8002404 <SysTick_Delay>

    // Calibración
    while (!USER_ADC_Calibration());
 8001b66:	46c0      	nop			@ (mov r8, r8)
 8001b68:	f000 f82a 	bl	8001bc0 <USER_ADC_Calibration>
 8001b6c:	1e03      	subs	r3, r0, #0
 8001b6e:	d0fb      	beq.n	8001b68 <USER_ADC_Init+0xf0>

    // Habilitar ADC
    ADC->CR |= (1 << 0);         // ADEN
 8001b70:	4b0f      	ldr	r3, [pc, #60]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001b72:	689a      	ldr	r2, [r3, #8]
 8001b74:	4b0e      	ldr	r3, [pc, #56]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001b76:	2101      	movs	r1, #1
 8001b78:	430a      	orrs	r2, r1
 8001b7a:	609a      	str	r2, [r3, #8]
    for (uint32_t i = 0; i < 1000 && !(ADC->ISR & (1 << 0)); i++) SysTick_Delay(1); // Wait up to 1ms
 8001b7c:	2300      	movs	r3, #0
 8001b7e:	607b      	str	r3, [r7, #4]
 8001b80:	e005      	b.n	8001b8e <USER_ADC_Init+0x116>
 8001b82:	2001      	movs	r0, #1
 8001b84:	f000 fc3e 	bl	8002404 <SysTick_Delay>
 8001b88:	687b      	ldr	r3, [r7, #4]
 8001b8a:	3301      	adds	r3, #1
 8001b8c:	607b      	str	r3, [r7, #4]
 8001b8e:	687a      	ldr	r2, [r7, #4]
 8001b90:	23fa      	movs	r3, #250	@ 0xfa
 8001b92:	009b      	lsls	r3, r3, #2
 8001b94:	429a      	cmp	r2, r3
 8001b96:	d204      	bcs.n	8001ba2 <USER_ADC_Init+0x12a>
 8001b98:	4b05      	ldr	r3, [pc, #20]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001b9a:	681b      	ldr	r3, [r3, #0]
 8001b9c:	2201      	movs	r2, #1
 8001b9e:	4013      	ands	r3, r2
 8001ba0:	d0ef      	beq.n	8001b82 <USER_ADC_Init+0x10a>
    if (!(ADC->ISR & (1 << 0))) return;  // Fail if ADRDY not set
 8001ba2:	4b03      	ldr	r3, [pc, #12]	@ (8001bb0 <USER_ADC_Init+0x138>)
 8001ba4:	681b      	ldr	r3, [r3, #0]
}
 8001ba6:	46bd      	mov	sp, r7
 8001ba8:	b002      	add	sp, #8
 8001baa:	bd80      	pop	{r7, pc}
 8001bac:	40021000 	.word	0x40021000
 8001bb0:	40012400 	.word	0x40012400
 8001bb4:	ffc7ffff 	.word	0xffc7ffff
 8001bb8:	ffffdfff 	.word	0xffffdfff
 8001bbc:	ffdffffb 	.word	0xffdffffb

08001bc0 <USER_ADC_Calibration>:

uint8_t USER_ADC_Calibration(void) {
 8001bc0:	b580      	push	{r7, lr}
 8001bc2:	af00      	add	r7, sp, #0
    ADC->CR |= (1 << 31);                   // ADCAL
 8001bc4:	4b0c      	ldr	r3, [pc, #48]	@ (8001bf8 <USER_ADC_Calibration+0x38>)
 8001bc6:	689a      	ldr	r2, [r3, #8]
 8001bc8:	4b0b      	ldr	r3, [pc, #44]	@ (8001bf8 <USER_ADC_Calibration+0x38>)
 8001bca:	2180      	movs	r1, #128	@ 0x80
 8001bcc:	0609      	lsls	r1, r1, #24
 8001bce:	430a      	orrs	r2, r1
 8001bd0:	609a      	str	r2, [r3, #8]
    while (ADC->CR & (1 << 31));            // Esperar fin de calibración
 8001bd2:	46c0      	nop			@ (mov r8, r8)
 8001bd4:	4b08      	ldr	r3, [pc, #32]	@ (8001bf8 <USER_ADC_Calibration+0x38>)
 8001bd6:	689b      	ldr	r3, [r3, #8]
 8001bd8:	2b00      	cmp	r3, #0
 8001bda:	dbfb      	blt.n	8001bd4 <USER_ADC_Calibration+0x14>

    // (Opcional) Ajustar factor de calibración
    if (ADC->CALFACT > 0x7F) {
 8001bdc:	4a06      	ldr	r2, [pc, #24]	@ (8001bf8 <USER_ADC_Calibration+0x38>)
 8001bde:	23b4      	movs	r3, #180	@ 0xb4
 8001be0:	58d3      	ldr	r3, [r2, r3]
 8001be2:	2b7f      	cmp	r3, #127	@ 0x7f
 8001be4:	d903      	bls.n	8001bee <USER_ADC_Calibration+0x2e>
        ADC->CALFACT = 0x7F;
 8001be6:	4a04      	ldr	r2, [pc, #16]	@ (8001bf8 <USER_ADC_Calibration+0x38>)
 8001be8:	23b4      	movs	r3, #180	@ 0xb4
 8001bea:	217f      	movs	r1, #127	@ 0x7f
 8001bec:	50d1      	str	r1, [r2, r3]
    }
    return 1;
 8001bee:	2301      	movs	r3, #1
}
 8001bf0:	0018      	movs	r0, r3
 8001bf2:	46bd      	mov	sp, r7
 8001bf4:	bd80      	pop	{r7, pc}
 8001bf6:	46c0      	nop			@ (mov r8, r8)
 8001bf8:	40012400 	.word	0x40012400

08001bfc <USER_EXTI1_Init>:
#include <stdint.h>
#include "main.h"
#include "systicklib.h"
#include "exti_func.h"

void USER_EXTI1_Init( void ){
 8001bfc:	b580      	push	{r7, lr}
 8001bfe:	af00      	add	r7, sp, #0
  EXTI->IMR1    |=  (  0x1UL <<  25U );//  Enable interrupt
 8001c00:	4a11      	ldr	r2, [pc, #68]	@ (8001c48 <USER_EXTI1_Init+0x4c>)
 8001c02:	2380      	movs	r3, #128	@ 0x80
 8001c04:	58d3      	ldr	r3, [r2, r3]
 8001c06:	4910      	ldr	r1, [pc, #64]	@ (8001c48 <USER_EXTI1_Init+0x4c>)
 8001c08:	2280      	movs	r2, #128	@ 0x80
 8001c0a:	0492      	lsls	r2, r2, #18
 8001c0c:	4313      	orrs	r3, r2
 8001c0e:	2280      	movs	r2, #128	@ 0x80
 8001c10:	508b      	str	r3, [r1, r2]
  EXTI->EMR1    &=  ~(  0x1UL <<  25U );//  Disable event generation
 8001c12:	4a0d      	ldr	r2, [pc, #52]	@ (8001c48 <USER_EXTI1_Init+0x4c>)
 8001c14:	2384      	movs	r3, #132	@ 0x84
 8001c16:	58d3      	ldr	r3, [r2, r3]
 8001c18:	490b      	ldr	r1, [pc, #44]	@ (8001c48 <USER_EXTI1_Init+0x4c>)
 8001c1a:	4a0c      	ldr	r2, [pc, #48]	@ (8001c4c <USER_EXTI1_Init+0x50>)
 8001c1c:	4013      	ands	r3, r2
 8001c1e:	2284      	movs	r2, #132	@ 0x84
 8001c20:	508b      	str	r3, [r1, r2]
  /* Enable EXTI1 vector */

  NVIC->IPR[6]  &= ~( 0x00UL <<  3U );
 8001c22:	4a0b      	ldr	r2, [pc, #44]	@ (8001c50 <USER_EXTI1_Init+0x54>)
 8001c24:	490a      	ldr	r1, [pc, #40]	@ (8001c50 <USER_EXTI1_Init+0x54>)
 8001c26:	23c6      	movs	r3, #198	@ 0xc6
 8001c28:	009b      	lsls	r3, r3, #2
 8001c2a:	58d2      	ldr	r2, [r2, r3]
 8001c2c:	23c6      	movs	r3, #198	@ 0xc6
 8001c2e:	009b      	lsls	r3, r3, #2
 8001c30:	50ca      	str	r2, [r1, r3]

//  NVIC->ISER    |=  (  0x1UL <<  16U );
  NVIC->ISER    |=  (  0x1UL <<  27U );
 8001c32:	4b07      	ldr	r3, [pc, #28]	@ (8001c50 <USER_EXTI1_Init+0x54>)
 8001c34:	681a      	ldr	r2, [r3, #0]
 8001c36:	4b06      	ldr	r3, [pc, #24]	@ (8001c50 <USER_EXTI1_Init+0x54>)
 8001c38:	2180      	movs	r1, #128	@ 0x80
 8001c3a:	0509      	lsls	r1, r1, #20
 8001c3c:	430a      	orrs	r2, r1
 8001c3e:	601a      	str	r2, [r3, #0]

}
 8001c40:	46c0      	nop			@ (mov r8, r8)
 8001c42:	46bd      	mov	sp, r7
 8001c44:	bd80      	pop	{r7, pc}
 8001c46:	46c0      	nop			@ (mov r8, r8)
 8001c48:	40021800 	.word	0x40021800
 8001c4c:	fdffffff 	.word	0xfdffffff
 8001c50:	e000e100 	.word	0xe000e100

08001c54 <LCD_Init>:
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
};

//Funcion que inicializa el LCD a 4 bits
void LCD_Init(void){
 8001c54:	b580      	push	{r7, lr}
 8001c56:	b082      	sub	sp, #8
 8001c58:	af00      	add	r7, sp, #0
	int8_t const *p;
/**
  * Habilitamos las señales de reloj para los puertos I/O
	*/
	RCC->IOPENR		|=	( 0x1UL <<  1U );
 8001c5a:	4bab      	ldr	r3, [pc, #684]	@ (8001f08 <LCD_Init+0x2b4>)
 8001c5c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8001c5e:	4baa      	ldr	r3, [pc, #680]	@ (8001f08 <LCD_Init+0x2b4>)
 8001c60:	2102      	movs	r1, #2
 8001c62:	430a      	orrs	r2, r1
 8001c64:	635a      	str	r2, [r3, #52]	@ 0x34

/**
  * Configuración de los pines de control (RS, RW, EN) como GP output PP
	*/
	GPIOB->PUPDR  &= ~( 0x3UL << 18U );
 8001c66:	4ba9      	ldr	r3, [pc, #676]	@ (8001f0c <LCD_Init+0x2b8>)
 8001c68:	68da      	ldr	r2, [r3, #12]
 8001c6a:	4ba8      	ldr	r3, [pc, #672]	@ (8001f0c <LCD_Init+0x2b8>)
 8001c6c:	49a8      	ldr	r1, [pc, #672]	@ (8001f10 <LCD_Init+0x2bc>)
 8001c6e:	400a      	ands	r2, r1
 8001c70:	60da      	str	r2, [r3, #12]
	GPIOB->OTYPER &= ~( 0x1UL <<  9U );
 8001c72:	4ba6      	ldr	r3, [pc, #664]	@ (8001f0c <LCD_Init+0x2b8>)
 8001c74:	685a      	ldr	r2, [r3, #4]
 8001c76:	4ba5      	ldr	r3, [pc, #660]	@ (8001f0c <LCD_Init+0x2b8>)
 8001c78:	49a6      	ldr	r1, [pc, #664]	@ (8001f14 <LCD_Init+0x2c0>)
 8001c7a:	400a      	ands	r2, r1
 8001c7c:	605a      	str	r2, [r3, #4]
	GPIOB->MODER  &= ~( 0x2UL << 18U );
 8001c7e:	4ba3      	ldr	r3, [pc, #652]	@ (8001f0c <LCD_Init+0x2b8>)
 8001c80:	681a      	ldr	r2, [r3, #0]
 8001c82:	4ba2      	ldr	r3, [pc, #648]	@ (8001f0c <LCD_Init+0x2b8>)
 8001c84:	49a4      	ldr	r1, [pc, #656]	@ (8001f18 <LCD_Init+0x2c4>)
 8001c86:	400a      	ands	r2, r1
 8001c88:	601a      	str	r2, [r3, #0]
	GPIOB->MODER  |=  ( 0x1UL << 18U );
 8001c8a:	4ba0      	ldr	r3, [pc, #640]	@ (8001f0c <LCD_Init+0x2b8>)
 8001c8c:	681a      	ldr	r2, [r3, #0]
 8001c8e:	4b9f      	ldr	r3, [pc, #636]	@ (8001f0c <LCD_Init+0x2b8>)
 8001c90:	2180      	movs	r1, #128	@ 0x80
 8001c92:	02c9      	lsls	r1, r1, #11
 8001c94:	430a      	orrs	r2, r1
 8001c96:	601a      	str	r2, [r3, #0]

	GPIOB->PUPDR  &= ~( 0x3UL << 20U );
 8001c98:	4b9c      	ldr	r3, [pc, #624]	@ (8001f0c <LCD_Init+0x2b8>)
 8001c9a:	68da      	ldr	r2, [r3, #12]
 8001c9c:	4b9b      	ldr	r3, [pc, #620]	@ (8001f0c <LCD_Init+0x2b8>)
 8001c9e:	499f      	ldr	r1, [pc, #636]	@ (8001f1c <LCD_Init+0x2c8>)
 8001ca0:	400a      	ands	r2, r1
 8001ca2:	60da      	str	r2, [r3, #12]
	GPIOB->OTYPER &= ~( 0x1UL << 10U );
 8001ca4:	4b99      	ldr	r3, [pc, #612]	@ (8001f0c <LCD_Init+0x2b8>)
 8001ca6:	685a      	ldr	r2, [r3, #4]
 8001ca8:	4b98      	ldr	r3, [pc, #608]	@ (8001f0c <LCD_Init+0x2b8>)
 8001caa:	499d      	ldr	r1, [pc, #628]	@ (8001f20 <LCD_Init+0x2cc>)
 8001cac:	400a      	ands	r2, r1
 8001cae:	605a      	str	r2, [r3, #4]
	GPIOB->MODER  &= ~( 0x2UL << 20U );
 8001cb0:	4b96      	ldr	r3, [pc, #600]	@ (8001f0c <LCD_Init+0x2b8>)
 8001cb2:	681a      	ldr	r2, [r3, #0]
 8001cb4:	4b95      	ldr	r3, [pc, #596]	@ (8001f0c <LCD_Init+0x2b8>)
 8001cb6:	499b      	ldr	r1, [pc, #620]	@ (8001f24 <LCD_Init+0x2d0>)
 8001cb8:	400a      	ands	r2, r1
 8001cba:	601a      	str	r2, [r3, #0]
	GPIOB->MODER  |=  ( 0x1UL << 20U );
 8001cbc:	4b93      	ldr	r3, [pc, #588]	@ (8001f0c <LCD_Init+0x2b8>)
 8001cbe:	681a      	ldr	r2, [r3, #0]
 8001cc0:	4b92      	ldr	r3, [pc, #584]	@ (8001f0c <LCD_Init+0x2b8>)
 8001cc2:	2180      	movs	r1, #128	@ 0x80
 8001cc4:	0349      	lsls	r1, r1, #13
 8001cc6:	430a      	orrs	r2, r1
 8001cc8:	601a      	str	r2, [r3, #0]

	GPIOB->PUPDR  &= ~( 0x3UL << 22U );
 8001cca:	4b90      	ldr	r3, [pc, #576]	@ (8001f0c <LCD_Init+0x2b8>)
 8001ccc:	68da      	ldr	r2, [r3, #12]
 8001cce:	4b8f      	ldr	r3, [pc, #572]	@ (8001f0c <LCD_Init+0x2b8>)
 8001cd0:	4995      	ldr	r1, [pc, #596]	@ (8001f28 <LCD_Init+0x2d4>)
 8001cd2:	400a      	ands	r2, r1
 8001cd4:	60da      	str	r2, [r3, #12]
	GPIOB->OTYPER &= ~( 0x1UL << 11U );
 8001cd6:	4b8d      	ldr	r3, [pc, #564]	@ (8001f0c <LCD_Init+0x2b8>)
 8001cd8:	685a      	ldr	r2, [r3, #4]
 8001cda:	4b8c      	ldr	r3, [pc, #560]	@ (8001f0c <LCD_Init+0x2b8>)
 8001cdc:	4993      	ldr	r1, [pc, #588]	@ (8001f2c <LCD_Init+0x2d8>)
 8001cde:	400a      	ands	r2, r1
 8001ce0:	605a      	str	r2, [r3, #4]
	GPIOB->MODER  &= ~( 0x2UL << 22U );
 8001ce2:	4b8a      	ldr	r3, [pc, #552]	@ (8001f0c <LCD_Init+0x2b8>)
 8001ce4:	681a      	ldr	r2, [r3, #0]
 8001ce6:	4b89      	ldr	r3, [pc, #548]	@ (8001f0c <LCD_Init+0x2b8>)
 8001ce8:	4991      	ldr	r1, [pc, #580]	@ (8001f30 <LCD_Init+0x2dc>)
 8001cea:	400a      	ands	r2, r1
 8001cec:	601a      	str	r2, [r3, #0]
	GPIOB->MODER  |=  ( 0x1UL << 22U );
 8001cee:	4b87      	ldr	r3, [pc, #540]	@ (8001f0c <LCD_Init+0x2b8>)
 8001cf0:	681a      	ldr	r2, [r3, #0]
 8001cf2:	4b86      	ldr	r3, [pc, #536]	@ (8001f0c <LCD_Init+0x2b8>)
 8001cf4:	2180      	movs	r1, #128	@ 0x80
 8001cf6:	03c9      	lsls	r1, r1, #15
 8001cf8:	430a      	orrs	r2, r1
 8001cfa:	601a      	str	r2, [r3, #0]

/**
  * Configuración de los pines de datos (D4-D7) como GP output PP
	*/
	GPIOB->PUPDR  &= ~( 0x3UL << 24U );
 8001cfc:	4b83      	ldr	r3, [pc, #524]	@ (8001f0c <LCD_Init+0x2b8>)
 8001cfe:	68da      	ldr	r2, [r3, #12]
 8001d00:	4b82      	ldr	r3, [pc, #520]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d02:	498c      	ldr	r1, [pc, #560]	@ (8001f34 <LCD_Init+0x2e0>)
 8001d04:	400a      	ands	r2, r1
 8001d06:	60da      	str	r2, [r3, #12]
	GPIOB->OTYPER &= ~( 0x1UL << 12U );
 8001d08:	4b80      	ldr	r3, [pc, #512]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d0a:	685a      	ldr	r2, [r3, #4]
 8001d0c:	4b7f      	ldr	r3, [pc, #508]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d0e:	498a      	ldr	r1, [pc, #552]	@ (8001f38 <LCD_Init+0x2e4>)
 8001d10:	400a      	ands	r2, r1
 8001d12:	605a      	str	r2, [r3, #4]
	GPIOB->MODER  &= ~( 0x2UL << 24U );
 8001d14:	4b7d      	ldr	r3, [pc, #500]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d16:	681a      	ldr	r2, [r3, #0]
 8001d18:	4b7c      	ldr	r3, [pc, #496]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d1a:	4988      	ldr	r1, [pc, #544]	@ (8001f3c <LCD_Init+0x2e8>)
 8001d1c:	400a      	ands	r2, r1
 8001d1e:	601a      	str	r2, [r3, #0]
	GPIOB->MODER  |=  ( 0x1UL << 24U );
 8001d20:	4b7a      	ldr	r3, [pc, #488]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d22:	681a      	ldr	r2, [r3, #0]
 8001d24:	4b79      	ldr	r3, [pc, #484]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d26:	2180      	movs	r1, #128	@ 0x80
 8001d28:	0449      	lsls	r1, r1, #17
 8001d2a:	430a      	orrs	r2, r1
 8001d2c:	601a      	str	r2, [r3, #0]

	GPIOB->PUPDR  &= ~( 0x3UL << 26U );
 8001d2e:	4b77      	ldr	r3, [pc, #476]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d30:	68da      	ldr	r2, [r3, #12]
 8001d32:	4b76      	ldr	r3, [pc, #472]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d34:	4982      	ldr	r1, [pc, #520]	@ (8001f40 <LCD_Init+0x2ec>)
 8001d36:	400a      	ands	r2, r1
 8001d38:	60da      	str	r2, [r3, #12]
	GPIOB->OTYPER &= ~( 0x1UL << 13U );
 8001d3a:	4b74      	ldr	r3, [pc, #464]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d3c:	685a      	ldr	r2, [r3, #4]
 8001d3e:	4b73      	ldr	r3, [pc, #460]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d40:	4980      	ldr	r1, [pc, #512]	@ (8001f44 <LCD_Init+0x2f0>)
 8001d42:	400a      	ands	r2, r1
 8001d44:	605a      	str	r2, [r3, #4]
	GPIOB->MODER  &= ~( 0x2UL << 26U );
 8001d46:	4b71      	ldr	r3, [pc, #452]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d48:	681a      	ldr	r2, [r3, #0]
 8001d4a:	4b70      	ldr	r3, [pc, #448]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d4c:	497e      	ldr	r1, [pc, #504]	@ (8001f48 <LCD_Init+0x2f4>)
 8001d4e:	400a      	ands	r2, r1
 8001d50:	601a      	str	r2, [r3, #0]
	GPIOB->MODER  |=  ( 0x1UL << 26U );
 8001d52:	4b6e      	ldr	r3, [pc, #440]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d54:	681a      	ldr	r2, [r3, #0]
 8001d56:	4b6d      	ldr	r3, [pc, #436]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d58:	2180      	movs	r1, #128	@ 0x80
 8001d5a:	04c9      	lsls	r1, r1, #19
 8001d5c:	430a      	orrs	r2, r1
 8001d5e:	601a      	str	r2, [r3, #0]

	GPIOB->PUPDR  &= ~( 0x3UL << 28U );
 8001d60:	4b6a      	ldr	r3, [pc, #424]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d62:	68da      	ldr	r2, [r3, #12]
 8001d64:	4b69      	ldr	r3, [pc, #420]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d66:	4979      	ldr	r1, [pc, #484]	@ (8001f4c <LCD_Init+0x2f8>)
 8001d68:	400a      	ands	r2, r1
 8001d6a:	60da      	str	r2, [r3, #12]
	GPIOB->OTYPER &= ~( 0x1UL << 14U );
 8001d6c:	4b67      	ldr	r3, [pc, #412]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d6e:	685a      	ldr	r2, [r3, #4]
 8001d70:	4b66      	ldr	r3, [pc, #408]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d72:	4977      	ldr	r1, [pc, #476]	@ (8001f50 <LCD_Init+0x2fc>)
 8001d74:	400a      	ands	r2, r1
 8001d76:	605a      	str	r2, [r3, #4]
	GPIOB->MODER  &= ~( 0x2UL << 28U );
 8001d78:	4b64      	ldr	r3, [pc, #400]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d7a:	681a      	ldr	r2, [r3, #0]
 8001d7c:	4b63      	ldr	r3, [pc, #396]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d7e:	4975      	ldr	r1, [pc, #468]	@ (8001f54 <LCD_Init+0x300>)
 8001d80:	400a      	ands	r2, r1
 8001d82:	601a      	str	r2, [r3, #0]
	GPIOB->MODER  |=  ( 0x1UL << 28U );
 8001d84:	4b61      	ldr	r3, [pc, #388]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d86:	681a      	ldr	r2, [r3, #0]
 8001d88:	4b60      	ldr	r3, [pc, #384]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d8a:	2180      	movs	r1, #128	@ 0x80
 8001d8c:	0549      	lsls	r1, r1, #21
 8001d8e:	430a      	orrs	r2, r1
 8001d90:	601a      	str	r2, [r3, #0]

	GPIOB->PUPDR  &= ~( 0x3UL << 30U );
 8001d92:	4b5e      	ldr	r3, [pc, #376]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d94:	68da      	ldr	r2, [r3, #12]
 8001d96:	4b5d      	ldr	r3, [pc, #372]	@ (8001f0c <LCD_Init+0x2b8>)
 8001d98:	0092      	lsls	r2, r2, #2
 8001d9a:	0892      	lsrs	r2, r2, #2
 8001d9c:	60da      	str	r2, [r3, #12]
	GPIOB->OTYPER &= ~( 0x1UL << 15U );
 8001d9e:	4b5b      	ldr	r3, [pc, #364]	@ (8001f0c <LCD_Init+0x2b8>)
 8001da0:	685a      	ldr	r2, [r3, #4]
 8001da2:	4b5a      	ldr	r3, [pc, #360]	@ (8001f0c <LCD_Init+0x2b8>)
 8001da4:	496c      	ldr	r1, [pc, #432]	@ (8001f58 <LCD_Init+0x304>)
 8001da6:	400a      	ands	r2, r1
 8001da8:	605a      	str	r2, [r3, #4]
	GPIOB->MODER  &= ~( 0x2UL << 30U );
 8001daa:	4b58      	ldr	r3, [pc, #352]	@ (8001f0c <LCD_Init+0x2b8>)
 8001dac:	681a      	ldr	r2, [r3, #0]
 8001dae:	4b57      	ldr	r3, [pc, #348]	@ (8001f0c <LCD_Init+0x2b8>)
 8001db0:	0052      	lsls	r2, r2, #1
 8001db2:	0852      	lsrs	r2, r2, #1
 8001db4:	601a      	str	r2, [r3, #0]
	GPIOB->MODER  |=  ( 0x1UL << 30U );
 8001db6:	4b55      	ldr	r3, [pc, #340]	@ (8001f0c <LCD_Init+0x2b8>)
 8001db8:	681a      	ldr	r2, [r3, #0]
 8001dba:	4b54      	ldr	r3, [pc, #336]	@ (8001f0c <LCD_Init+0x2b8>)
 8001dbc:	2180      	movs	r1, #128	@ 0x80
 8001dbe:	05c9      	lsls	r1, r1, #23
 8001dc0:	430a      	orrs	r2, r1
 8001dc2:	601a      	str	r2, [r3, #0]
/**
  * Inicialización del LCD
  * https://web.alfredstate.edu/faculty/weimandn/lcd/lcd_initialization/lcd_initialization_index.html
  * Power ON
  */
	GPIOB->BSRR	 =	 LCD_RS_PIN_LOW;
 8001dc4:	4b51      	ldr	r3, [pc, #324]	@ (8001f0c <LCD_Init+0x2b8>)
 8001dc6:	2280      	movs	r2, #128	@ 0x80
 8001dc8:	0492      	lsls	r2, r2, #18
 8001dca:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_RW_PIN_LOW;
 8001dcc:	4b4f      	ldr	r3, [pc, #316]	@ (8001f0c <LCD_Init+0x2b8>)
 8001dce:	2280      	movs	r2, #128	@ 0x80
 8001dd0:	04d2      	lsls	r2, r2, #19
 8001dd2:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_EN_PIN_LOW;
 8001dd4:	4b4d      	ldr	r3, [pc, #308]	@ (8001f0c <LCD_Init+0x2b8>)
 8001dd6:	2280      	movs	r2, #128	@ 0x80
 8001dd8:	0512      	lsls	r2, r2, #20
 8001dda:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D4_PIN_LOW;
 8001ddc:	4b4b      	ldr	r3, [pc, #300]	@ (8001f0c <LCD_Init+0x2b8>)
 8001dde:	2280      	movs	r2, #128	@ 0x80
 8001de0:	0552      	lsls	r2, r2, #21
 8001de2:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D5_PIN_LOW;
 8001de4:	4b49      	ldr	r3, [pc, #292]	@ (8001f0c <LCD_Init+0x2b8>)
 8001de6:	2280      	movs	r2, #128	@ 0x80
 8001de8:	0592      	lsls	r2, r2, #22
 8001dea:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D6_PIN_LOW;
 8001dec:	4b47      	ldr	r3, [pc, #284]	@ (8001f0c <LCD_Init+0x2b8>)
 8001dee:	2280      	movs	r2, #128	@ 0x80
 8001df0:	05d2      	lsls	r2, r2, #23
 8001df2:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D7_PIN_LOW;
 8001df4:	4b45      	ldr	r3, [pc, #276]	@ (8001f0c <LCD_Init+0x2b8>)
 8001df6:	2280      	movs	r2, #128	@ 0x80
 8001df8:	0612      	lsls	r2, r2, #24
 8001dfa:	619a      	str	r2, [r3, #24]
	// SysTick_Delay( 50 );
	TIM17_Delay_ms(50);
 8001dfc:	2032      	movs	r0, #50	@ 0x32
 8001dfe:	f000 fcc9 	bl	8002794 <TIM17_Delay_ms>

	/* Special case of 'Function Set'	*/
	GPIOB->BSRR	 =	 LCD_D4_PIN_HIGH;
 8001e02:	4b42      	ldr	r3, [pc, #264]	@ (8001f0c <LCD_Init+0x2b8>)
 8001e04:	2280      	movs	r2, #128	@ 0x80
 8001e06:	0152      	lsls	r2, r2, #5
 8001e08:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D5_PIN_HIGH;
 8001e0a:	4b40      	ldr	r3, [pc, #256]	@ (8001f0c <LCD_Init+0x2b8>)
 8001e0c:	2280      	movs	r2, #128	@ 0x80
 8001e0e:	0192      	lsls	r2, r2, #6
 8001e10:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D6_PIN_LOW;
 8001e12:	4b3e      	ldr	r3, [pc, #248]	@ (8001f0c <LCD_Init+0x2b8>)
 8001e14:	2280      	movs	r2, #128	@ 0x80
 8001e16:	05d2      	lsls	r2, r2, #23
 8001e18:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D7_PIN_LOW;
 8001e1a:	4b3c      	ldr	r3, [pc, #240]	@ (8001f0c <LCD_Init+0x2b8>)
 8001e1c:	2280      	movs	r2, #128	@ 0x80
 8001e1e:	0612      	lsls	r2, r2, #24
 8001e20:	619a      	str	r2, [r3, #24]
	LCD_Pulse_EN( );
 8001e22:	f000 f9a1 	bl	8002168 <LCD_Pulse_EN>
	// SysTick_Delay( 50 );
	TIM17_Delay_ms(50);
 8001e26:	2032      	movs	r0, #50	@ 0x32
 8001e28:	f000 fcb4 	bl	8002794 <TIM17_Delay_ms>

	/* Special case of 'Function Set' */
	GPIOB->BSRR	 =	 LCD_D4_PIN_HIGH;
 8001e2c:	4b37      	ldr	r3, [pc, #220]	@ (8001f0c <LCD_Init+0x2b8>)
 8001e2e:	2280      	movs	r2, #128	@ 0x80
 8001e30:	0152      	lsls	r2, r2, #5
 8001e32:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D5_PIN_HIGH;
 8001e34:	4b35      	ldr	r3, [pc, #212]	@ (8001f0c <LCD_Init+0x2b8>)
 8001e36:	2280      	movs	r2, #128	@ 0x80
 8001e38:	0192      	lsls	r2, r2, #6
 8001e3a:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D6_PIN_LOW;
 8001e3c:	4b33      	ldr	r3, [pc, #204]	@ (8001f0c <LCD_Init+0x2b8>)
 8001e3e:	2280      	movs	r2, #128	@ 0x80
 8001e40:	05d2      	lsls	r2, r2, #23
 8001e42:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D7_PIN_LOW;
 8001e44:	4b31      	ldr	r3, [pc, #196]	@ (8001f0c <LCD_Init+0x2b8>)
 8001e46:	2280      	movs	r2, #128	@ 0x80
 8001e48:	0612      	lsls	r2, r2, #24
 8001e4a:	619a      	str	r2, [r3, #24]
	LCD_Pulse_EN( );
 8001e4c:	f000 f98c 	bl	8002168 <LCD_Pulse_EN>
	// SysTick_Delay( 50 );
	TIM17_Delay_ms(50);
 8001e50:	2032      	movs	r0, #50	@ 0x32
 8001e52:	f000 fc9f 	bl	8002794 <TIM17_Delay_ms>

	/* Special case of 'Function Set' */
	GPIOB->BSRR	 =	 LCD_D4_PIN_HIGH;
 8001e56:	4b2d      	ldr	r3, [pc, #180]	@ (8001f0c <LCD_Init+0x2b8>)
 8001e58:	2280      	movs	r2, #128	@ 0x80
 8001e5a:	0152      	lsls	r2, r2, #5
 8001e5c:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D5_PIN_HIGH;
 8001e5e:	4b2b      	ldr	r3, [pc, #172]	@ (8001f0c <LCD_Init+0x2b8>)
 8001e60:	2280      	movs	r2, #128	@ 0x80
 8001e62:	0192      	lsls	r2, r2, #6
 8001e64:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D6_PIN_LOW;
 8001e66:	4b29      	ldr	r3, [pc, #164]	@ (8001f0c <LCD_Init+0x2b8>)
 8001e68:	2280      	movs	r2, #128	@ 0x80
 8001e6a:	05d2      	lsls	r2, r2, #23
 8001e6c:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D7_PIN_LOW;
 8001e6e:	4b27      	ldr	r3, [pc, #156]	@ (8001f0c <LCD_Init+0x2b8>)
 8001e70:	2280      	movs	r2, #128	@ 0x80
 8001e72:	0612      	lsls	r2, r2, #24
 8001e74:	619a      	str	r2, [r3, #24]
	LCD_Pulse_EN( );
 8001e76:	f000 f977 	bl	8002168 <LCD_Pulse_EN>
	while( LCD_Busy( ) );
 8001e7a:	46c0      	nop			@ (mov r8, r8)
 8001e7c:	f000 f904 	bl	8002088 <LCD_Busy>
 8001e80:	1e03      	subs	r3, r0, #0
 8001e82:	d1fb      	bne.n	8001e7c <LCD_Init+0x228>

	/* Initial 'Function Set' to change 4-bit mode	*/
	GPIOB->BSRR	 =	 LCD_D4_PIN_LOW;
 8001e84:	4b21      	ldr	r3, [pc, #132]	@ (8001f0c <LCD_Init+0x2b8>)
 8001e86:	2280      	movs	r2, #128	@ 0x80
 8001e88:	0552      	lsls	r2, r2, #21
 8001e8a:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D5_PIN_HIGH;
 8001e8c:	4b1f      	ldr	r3, [pc, #124]	@ (8001f0c <LCD_Init+0x2b8>)
 8001e8e:	2280      	movs	r2, #128	@ 0x80
 8001e90:	0192      	lsls	r2, r2, #6
 8001e92:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D6_PIN_LOW;
 8001e94:	4b1d      	ldr	r3, [pc, #116]	@ (8001f0c <LCD_Init+0x2b8>)
 8001e96:	2280      	movs	r2, #128	@ 0x80
 8001e98:	05d2      	lsls	r2, r2, #23
 8001e9a:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D7_PIN_LOW;
 8001e9c:	4b1b      	ldr	r3, [pc, #108]	@ (8001f0c <LCD_Init+0x2b8>)
 8001e9e:	2280      	movs	r2, #128	@ 0x80
 8001ea0:	0612      	lsls	r2, r2, #24
 8001ea2:	619a      	str	r2, [r3, #24]
	LCD_Pulse_EN( );
 8001ea4:	f000 f960 	bl	8002168 <LCD_Pulse_EN>
	while( LCD_Busy( ) );
 8001ea8:	46c0      	nop			@ (mov r8, r8)
 8001eaa:	f000 f8ed 	bl	8002088 <LCD_Busy>
 8001eae:	1e03      	subs	r3, r0, #0
 8001eb0:	d1fb      	bne.n	8001eaa <LCD_Init+0x256>
	/* 'Function Set' (I=1, N and F as required)	*/
	LCD_Write_Cmd( 0x28U );
 8001eb2:	2028      	movs	r0, #40	@ 0x28
 8001eb4:	f000 f8bc 	bl	8002030 <LCD_Write_Cmd>
	/* 'Display ON/OFF Control' (D=1, C=0, B=0)	*/
	LCD_Write_Cmd( 0x0CU );
 8001eb8:	200c      	movs	r0, #12
 8001eba:	f000 f8b9 	bl	8002030 <LCD_Write_Cmd>
	/* 'Clear Display'	*/
	LCD_Write_Cmd( 0x01U );//
 8001ebe:	2001      	movs	r0, #1
 8001ec0:	f000 f8b6 	bl	8002030 <LCD_Write_Cmd>
	/* 'Entry Mode Set' (I/D and S as required)	*/
	LCD_Write_Cmd( 0x06U );
 8001ec4:	2006      	movs	r0, #6
 8001ec6:	f000 f8b3 	bl	8002030 <LCD_Write_Cmd>
	/* Initialization Ends	*/
//	LCD_Write_Cmd( 0x0FU );

	//Cargamos el caracter definido por el usuario en la CGRAM
	LCD_Write_Cmd( 0x40 );
 8001eca:	2040      	movs	r0, #64	@ 0x40
 8001ecc:	f000 f8b0 	bl	8002030 <LCD_Write_Cmd>
	p = &UserFont[0][0];
 8001ed0:	4b22      	ldr	r3, [pc, #136]	@ (8001f5c <LCD_Init+0x308>)
 8001ed2:	607b      	str	r3, [r7, #4]


	for( int i = 0; i < sizeof( UserFont ); i++, p++ )
 8001ed4:	2300      	movs	r3, #0
 8001ed6:	603b      	str	r3, [r7, #0]
 8001ed8:	e00c      	b.n	8001ef4 <LCD_Init+0x2a0>
		LCD_Put_Char( *p );
 8001eda:	687b      	ldr	r3, [r7, #4]
 8001edc:	781b      	ldrb	r3, [r3, #0]
 8001ede:	b25b      	sxtb	r3, r3
 8001ee0:	b2db      	uxtb	r3, r3
 8001ee2:	0018      	movs	r0, r3
 8001ee4:	f000 f8ba 	bl	800205c <LCD_Put_Char>
	for( int i = 0; i < sizeof( UserFont ); i++, p++ )
 8001ee8:	683b      	ldr	r3, [r7, #0]
 8001eea:	3301      	adds	r3, #1
 8001eec:	603b      	str	r3, [r7, #0]
 8001eee:	687b      	ldr	r3, [r7, #4]
 8001ef0:	3301      	adds	r3, #1
 8001ef2:	607b      	str	r3, [r7, #4]
 8001ef4:	683b      	ldr	r3, [r7, #0]
 8001ef6:	2b3f      	cmp	r3, #63	@ 0x3f
 8001ef8:	d9ef      	bls.n	8001eda <LCD_Init+0x286>

	/*	Set DDRAM address in address			*/
	LCD_Write_Cmd( 0x80 );//
 8001efa:	2080      	movs	r0, #128	@ 0x80
 8001efc:	f000 f898 	bl	8002030 <LCD_Write_Cmd>
}
 8001f00:	46c0      	nop			@ (mov r8, r8)
 8001f02:	46bd      	mov	sp, r7
 8001f04:	b002      	add	sp, #8
 8001f06:	bd80      	pop	{r7, pc}
 8001f08:	40021000 	.word	0x40021000
 8001f0c:	50000400 	.word	0x50000400
 8001f10:	fff3ffff 	.word	0xfff3ffff
 8001f14:	fffffdff 	.word	0xfffffdff
 8001f18:	fff7ffff 	.word	0xfff7ffff
 8001f1c:	ffcfffff 	.word	0xffcfffff
 8001f20:	fffffbff 	.word	0xfffffbff
 8001f24:	ffdfffff 	.word	0xffdfffff
 8001f28:	ff3fffff 	.word	0xff3fffff
 8001f2c:	fffff7ff 	.word	0xfffff7ff
 8001f30:	ff7fffff 	.word	0xff7fffff
 8001f34:	fcffffff 	.word	0xfcffffff
 8001f38:	ffffefff 	.word	0xffffefff
 8001f3c:	fdffffff 	.word	0xfdffffff
 8001f40:	f3ffffff 	.word	0xf3ffffff
 8001f44:	ffffdfff 	.word	0xffffdfff
 8001f48:	f7ffffff 	.word	0xf7ffffff
 8001f4c:	cfffffff 	.word	0xcfffffff
 8001f50:	ffffbfff 	.word	0xffffbfff
 8001f54:	dfffffff 	.word	0xdfffffff
 8001f58:	ffff7fff 	.word	0xffff7fff
 8001f5c:	08002ba4 	.word	0x08002ba4

08001f60 <LCD_Out_Data4>:

//Funcion que genera un strobe en el LCD
void LCD_Out_Data4(uint8_t val){
 8001f60:	b580      	push	{r7, lr}
 8001f62:	b082      	sub	sp, #8
 8001f64:	af00      	add	r7, sp, #0
 8001f66:	0002      	movs	r2, r0
 8001f68:	1dfb      	adds	r3, r7, #7
 8001f6a:	701a      	strb	r2, [r3, #0]
	if( ( val & 0x01U ) == 0x01U )
 8001f6c:	1dfb      	adds	r3, r7, #7
 8001f6e:	781b      	ldrb	r3, [r3, #0]
 8001f70:	2201      	movs	r2, #1
 8001f72:	4013      	ands	r3, r2
 8001f74:	d004      	beq.n	8001f80 <LCD_Out_Data4+0x20>
		GPIOB->BSRR	=	LCD_D4_PIN_HIGH;
 8001f76:	4b1b      	ldr	r3, [pc, #108]	@ (8001fe4 <LCD_Out_Data4+0x84>)
 8001f78:	2280      	movs	r2, #128	@ 0x80
 8001f7a:	0152      	lsls	r2, r2, #5
 8001f7c:	619a      	str	r2, [r3, #24]
 8001f7e:	e003      	b.n	8001f88 <LCD_Out_Data4+0x28>
	else
		GPIOB->BSRR	=	LCD_D4_PIN_LOW;
 8001f80:	4b18      	ldr	r3, [pc, #96]	@ (8001fe4 <LCD_Out_Data4+0x84>)
 8001f82:	2280      	movs	r2, #128	@ 0x80
 8001f84:	0552      	lsls	r2, r2, #21
 8001f86:	619a      	str	r2, [r3, #24]

	if( ( val & 0x02U ) == 0x02U )
 8001f88:	1dfb      	adds	r3, r7, #7
 8001f8a:	781b      	ldrb	r3, [r3, #0]
 8001f8c:	2202      	movs	r2, #2
 8001f8e:	4013      	ands	r3, r2
 8001f90:	d004      	beq.n	8001f9c <LCD_Out_Data4+0x3c>
		GPIOB->BSRR	=	LCD_D5_PIN_HIGH;
 8001f92:	4b14      	ldr	r3, [pc, #80]	@ (8001fe4 <LCD_Out_Data4+0x84>)
 8001f94:	2280      	movs	r2, #128	@ 0x80
 8001f96:	0192      	lsls	r2, r2, #6
 8001f98:	619a      	str	r2, [r3, #24]
 8001f9a:	e003      	b.n	8001fa4 <LCD_Out_Data4+0x44>
	else
		GPIOB->BSRR	=	LCD_D5_PIN_LOW;
 8001f9c:	4b11      	ldr	r3, [pc, #68]	@ (8001fe4 <LCD_Out_Data4+0x84>)
 8001f9e:	2280      	movs	r2, #128	@ 0x80
 8001fa0:	0592      	lsls	r2, r2, #22
 8001fa2:	619a      	str	r2, [r3, #24]

	if( ( val & 0x04U ) == 0x04U )
 8001fa4:	1dfb      	adds	r3, r7, #7
 8001fa6:	781b      	ldrb	r3, [r3, #0]
 8001fa8:	2204      	movs	r2, #4
 8001faa:	4013      	ands	r3, r2
 8001fac:	d004      	beq.n	8001fb8 <LCD_Out_Data4+0x58>
		GPIOB->BSRR	=	LCD_D6_PIN_HIGH;
 8001fae:	4b0d      	ldr	r3, [pc, #52]	@ (8001fe4 <LCD_Out_Data4+0x84>)
 8001fb0:	2280      	movs	r2, #128	@ 0x80
 8001fb2:	01d2      	lsls	r2, r2, #7
 8001fb4:	619a      	str	r2, [r3, #24]
 8001fb6:	e003      	b.n	8001fc0 <LCD_Out_Data4+0x60>
	else
		GPIOB->BSRR	=	LCD_D6_PIN_LOW;
 8001fb8:	4b0a      	ldr	r3, [pc, #40]	@ (8001fe4 <LCD_Out_Data4+0x84>)
 8001fba:	2280      	movs	r2, #128	@ 0x80
 8001fbc:	05d2      	lsls	r2, r2, #23
 8001fbe:	619a      	str	r2, [r3, #24]

	if( ( val & 0x08U ) == 0x08U )
 8001fc0:	1dfb      	adds	r3, r7, #7
 8001fc2:	781b      	ldrb	r3, [r3, #0]
 8001fc4:	2208      	movs	r2, #8
 8001fc6:	4013      	ands	r3, r2
 8001fc8:	d004      	beq.n	8001fd4 <LCD_Out_Data4+0x74>
		GPIOB->BSRR	=	LCD_D7_PIN_HIGH;
 8001fca:	4b06      	ldr	r3, [pc, #24]	@ (8001fe4 <LCD_Out_Data4+0x84>)
 8001fcc:	2280      	movs	r2, #128	@ 0x80
 8001fce:	0212      	lsls	r2, r2, #8
 8001fd0:	619a      	str	r2, [r3, #24]
	else
		GPIOB->BSRR	=	LCD_D7_PIN_LOW;
}
 8001fd2:	e003      	b.n	8001fdc <LCD_Out_Data4+0x7c>
		GPIOB->BSRR	=	LCD_D7_PIN_LOW;
 8001fd4:	4b03      	ldr	r3, [pc, #12]	@ (8001fe4 <LCD_Out_Data4+0x84>)
 8001fd6:	2280      	movs	r2, #128	@ 0x80
 8001fd8:	0612      	lsls	r2, r2, #24
 8001fda:	619a      	str	r2, [r3, #24]
}
 8001fdc:	46c0      	nop			@ (mov r8, r8)
 8001fde:	46bd      	mov	sp, r7
 8001fe0:	b002      	add	sp, #8
 8001fe2:	bd80      	pop	{r7, pc}
 8001fe4:	50000400 	.word	0x50000400

08001fe8 <LCD_Write_Byte>:

//Funcion que escribe 1 byte de datos en el LCD
void LCD_Write_Byte(uint8_t val){
 8001fe8:	b580      	push	{r7, lr}
 8001fea:	b082      	sub	sp, #8
 8001fec:	af00      	add	r7, sp, #0
 8001fee:	0002      	movs	r2, r0
 8001ff0:	1dfb      	adds	r3, r7, #7
 8001ff2:	701a      	strb	r2, [r3, #0]
	LCD_Out_Data4( ( val >> 4 ) & 0x0FU );
 8001ff4:	1dfb      	adds	r3, r7, #7
 8001ff6:	781b      	ldrb	r3, [r3, #0]
 8001ff8:	091b      	lsrs	r3, r3, #4
 8001ffa:	b2db      	uxtb	r3, r3
 8001ffc:	0018      	movs	r0, r3
 8001ffe:	f7ff ffaf 	bl	8001f60 <LCD_Out_Data4>
	LCD_Pulse_EN( );
 8002002:	f000 f8b1 	bl	8002168 <LCD_Pulse_EN>
	LCD_Out_Data4( val & 0x0FU );
 8002006:	1dfb      	adds	r3, r7, #7
 8002008:	781b      	ldrb	r3, [r3, #0]
 800200a:	220f      	movs	r2, #15
 800200c:	4013      	ands	r3, r2
 800200e:	b2db      	uxtb	r3, r3
 8002010:	0018      	movs	r0, r3
 8002012:	f7ff ffa5 	bl	8001f60 <LCD_Out_Data4>
	LCD_Pulse_EN( );
 8002016:	f000 f8a7 	bl	8002168 <LCD_Pulse_EN>
	while( LCD_Busy( ) );
 800201a:	46c0      	nop			@ (mov r8, r8)
 800201c:	f000 f834 	bl	8002088 <LCD_Busy>
 8002020:	1e03      	subs	r3, r0, #0
 8002022:	d1fb      	bne.n	800201c <LCD_Write_Byte+0x34>
}
 8002024:	46c0      	nop			@ (mov r8, r8)
 8002026:	46c0      	nop			@ (mov r8, r8)
 8002028:	46bd      	mov	sp, r7
 800202a:	b002      	add	sp, #8
 800202c:	bd80      	pop	{r7, pc}
	...

08002030 <LCD_Write_Cmd>:

//Funcion que escribe un comando en el LCD
void LCD_Write_Cmd(uint8_t val){
 8002030:	b580      	push	{r7, lr}
 8002032:	b082      	sub	sp, #8
 8002034:	af00      	add	r7, sp, #0
 8002036:	0002      	movs	r2, r0
 8002038:	1dfb      	adds	r3, r7, #7
 800203a:	701a      	strb	r2, [r3, #0]
	GPIOB->BSRR	=	LCD_RS_PIN_LOW;
 800203c:	4b06      	ldr	r3, [pc, #24]	@ (8002058 <LCD_Write_Cmd+0x28>)
 800203e:	2280      	movs	r2, #128	@ 0x80
 8002040:	0492      	lsls	r2, r2, #18
 8002042:	619a      	str	r2, [r3, #24]
	LCD_Write_Byte( val );
 8002044:	1dfb      	adds	r3, r7, #7
 8002046:	781b      	ldrb	r3, [r3, #0]
 8002048:	0018      	movs	r0, r3
 800204a:	f7ff ffcd 	bl	8001fe8 <LCD_Write_Byte>
}
 800204e:	46c0      	nop			@ (mov r8, r8)
 8002050:	46bd      	mov	sp, r7
 8002052:	b002      	add	sp, #8
 8002054:	bd80      	pop	{r7, pc}
 8002056:	46c0      	nop			@ (mov r8, r8)
 8002058:	50000400 	.word	0x50000400

0800205c <LCD_Put_Char>:

//Escribe un caracter ASCII en el LCD
void LCD_Put_Char(uint8_t c){
 800205c:	b580      	push	{r7, lr}
 800205e:	b082      	sub	sp, #8
 8002060:	af00      	add	r7, sp, #0
 8002062:	0002      	movs	r2, r0
 8002064:	1dfb      	adds	r3, r7, #7
 8002066:	701a      	strb	r2, [r3, #0]
	GPIOB->BSRR	=	LCD_RS_PIN_HIGH;
 8002068:	4b06      	ldr	r3, [pc, #24]	@ (8002084 <LCD_Put_Char+0x28>)
 800206a:	2280      	movs	r2, #128	@ 0x80
 800206c:	0092      	lsls	r2, r2, #2
 800206e:	619a      	str	r2, [r3, #24]
	LCD_Write_Byte( c );
 8002070:	1dfb      	adds	r3, r7, #7
 8002072:	781b      	ldrb	r3, [r3, #0]
 8002074:	0018      	movs	r0, r3
 8002076:	f7ff ffb7 	bl	8001fe8 <LCD_Write_Byte>
}
 800207a:	46c0      	nop			@ (mov r8, r8)
 800207c:	46bd      	mov	sp, r7
 800207e:	b002      	add	sp, #8
 8002080:	bd80      	pop	{r7, pc}
 8002082:	46c0      	nop			@ (mov r8, r8)
 8002084:	50000400 	.word	0x50000400

08002088 <LCD_Busy>:
			LCD_Put_Char( ch[ i ] );
	}
}

//Funcion que provoca tiempos de espera en el LCD
char LCD_Busy(void){
 8002088:	b580      	push	{r7, lr}
 800208a:	af00      	add	r7, sp, #0
/**
  * Configuracion de D7 as input floating
  */
	GPIOB->PUPDR &= ~( 0x3UL << 30U );
 800208c:	4b34      	ldr	r3, [pc, #208]	@ (8002160 <LCD_Busy+0xd8>)
 800208e:	68da      	ldr	r2, [r3, #12]
 8002090:	4b33      	ldr	r3, [pc, #204]	@ (8002160 <LCD_Busy+0xd8>)
 8002092:	0092      	lsls	r2, r2, #2
 8002094:	0892      	lsrs	r2, r2, #2
 8002096:	60da      	str	r2, [r3, #12]
  GPIOB->MODER &= ~( 0x3UL << 30U );
 8002098:	4b31      	ldr	r3, [pc, #196]	@ (8002160 <LCD_Busy+0xd8>)
 800209a:	681a      	ldr	r2, [r3, #0]
 800209c:	4b30      	ldr	r3, [pc, #192]	@ (8002160 <LCD_Busy+0xd8>)
 800209e:	0092      	lsls	r2, r2, #2
 80020a0:	0892      	lsrs	r2, r2, #2
 80020a2:	601a      	str	r2, [r3, #0]
	GPIOB->BSRR	  =	 LCD_RS_PIN_LOW;
 80020a4:	4b2e      	ldr	r3, [pc, #184]	@ (8002160 <LCD_Busy+0xd8>)
 80020a6:	2280      	movs	r2, #128	@ 0x80
 80020a8:	0492      	lsls	r2, r2, #18
 80020aa:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	  =	 LCD_RW_PIN_HIGH;
 80020ac:	4b2c      	ldr	r3, [pc, #176]	@ (8002160 <LCD_Busy+0xd8>)
 80020ae:	2280      	movs	r2, #128	@ 0x80
 80020b0:	00d2      	lsls	r2, r2, #3
 80020b2:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	  =	 LCD_EN_PIN_HIGH;
 80020b4:	4b2a      	ldr	r3, [pc, #168]	@ (8002160 <LCD_Busy+0xd8>)
 80020b6:	2280      	movs	r2, #128	@ 0x80
 80020b8:	0112      	lsls	r2, r2, #4
 80020ba:	619a      	str	r2, [r3, #24]
	SysTick_Delay( 1 );
 80020bc:	2001      	movs	r0, #1
 80020be:	f000 f9a1 	bl	8002404 <SysTick_Delay>
	// TIM17_Delay_ms(1);
	if(( GPIOB->IDR	& LCD_D7_PIN_HIGH )) {
 80020c2:	4b27      	ldr	r3, [pc, #156]	@ (8002160 <LCD_Busy+0xd8>)
 80020c4:	691a      	ldr	r2, [r3, #16]
 80020c6:	2380      	movs	r3, #128	@ 0x80
 80020c8:	021b      	lsls	r3, r3, #8
 80020ca:	4013      	ands	r3, r2
 80020cc:	d022      	beq.n	8002114 <LCD_Busy+0x8c>
		GPIOB->BSRR	=  LCD_EN_PIN_LOW;
 80020ce:	4b24      	ldr	r3, [pc, #144]	@ (8002160 <LCD_Busy+0xd8>)
 80020d0:	2280      	movs	r2, #128	@ 0x80
 80020d2:	0512      	lsls	r2, r2, #20
 80020d4:	619a      	str	r2, [r3, #24]
		GPIOB->BSRR	=	 LCD_RW_PIN_LOW;
 80020d6:	4b22      	ldr	r3, [pc, #136]	@ (8002160 <LCD_Busy+0xd8>)
 80020d8:	2280      	movs	r2, #128	@ 0x80
 80020da:	04d2      	lsls	r2, r2, #19
 80020dc:	619a      	str	r2, [r3, #24]
/**
  * Configuracion de D7 as output push-pull
  */
		GPIOB->PUPDR  &= ~( 0x3UL << 30U );
 80020de:	4b20      	ldr	r3, [pc, #128]	@ (8002160 <LCD_Busy+0xd8>)
 80020e0:	68da      	ldr	r2, [r3, #12]
 80020e2:	4b1f      	ldr	r3, [pc, #124]	@ (8002160 <LCD_Busy+0xd8>)
 80020e4:	0092      	lsls	r2, r2, #2
 80020e6:	0892      	lsrs	r2, r2, #2
 80020e8:	60da      	str	r2, [r3, #12]
  	GPIOB->OTYPER &= ~( 0x1UL << 15U );
 80020ea:	4b1d      	ldr	r3, [pc, #116]	@ (8002160 <LCD_Busy+0xd8>)
 80020ec:	685a      	ldr	r2, [r3, #4]
 80020ee:	4b1c      	ldr	r3, [pc, #112]	@ (8002160 <LCD_Busy+0xd8>)
 80020f0:	491c      	ldr	r1, [pc, #112]	@ (8002164 <LCD_Busy+0xdc>)
 80020f2:	400a      	ands	r2, r1
 80020f4:	605a      	str	r2, [r3, #4]
  	GPIOB->MODER  &= ~( 0x2UL << 30U );
 80020f6:	4b1a      	ldr	r3, [pc, #104]	@ (8002160 <LCD_Busy+0xd8>)
 80020f8:	681a      	ldr	r2, [r3, #0]
 80020fa:	4b19      	ldr	r3, [pc, #100]	@ (8002160 <LCD_Busy+0xd8>)
 80020fc:	0052      	lsls	r2, r2, #1
 80020fe:	0852      	lsrs	r2, r2, #1
 8002100:	601a      	str	r2, [r3, #0]
  	GPIOB->MODER  |=  ( 0x1UL << 30U );
 8002102:	4b17      	ldr	r3, [pc, #92]	@ (8002160 <LCD_Busy+0xd8>)
 8002104:	681a      	ldr	r2, [r3, #0]
 8002106:	4b16      	ldr	r3, [pc, #88]	@ (8002160 <LCD_Busy+0xd8>)
 8002108:	2180      	movs	r1, #128	@ 0x80
 800210a:	05c9      	lsls	r1, r1, #23
 800210c:	430a      	orrs	r2, r1
 800210e:	601a      	str	r2, [r3, #0]
		return 1;
 8002110:	2301      	movs	r3, #1
 8002112:	e021      	b.n	8002158 <LCD_Busy+0xd0>
	} else {
		GPIOB->BSRR	=  LCD_EN_PIN_LOW;
 8002114:	4b12      	ldr	r3, [pc, #72]	@ (8002160 <LCD_Busy+0xd8>)
 8002116:	2280      	movs	r2, #128	@ 0x80
 8002118:	0512      	lsls	r2, r2, #20
 800211a:	619a      	str	r2, [r3, #24]
		GPIOB->BSRR	=	 LCD_RW_PIN_LOW;
 800211c:	4b10      	ldr	r3, [pc, #64]	@ (8002160 <LCD_Busy+0xd8>)
 800211e:	2280      	movs	r2, #128	@ 0x80
 8002120:	04d2      	lsls	r2, r2, #19
 8002122:	619a      	str	r2, [r3, #24]
/**
  * Configuracion de D7 as output push-pull
  */
		GPIOB->PUPDR  &= ~( 0x3UL << 30U );
 8002124:	4b0e      	ldr	r3, [pc, #56]	@ (8002160 <LCD_Busy+0xd8>)
 8002126:	68da      	ldr	r2, [r3, #12]
 8002128:	4b0d      	ldr	r3, [pc, #52]	@ (8002160 <LCD_Busy+0xd8>)
 800212a:	0092      	lsls	r2, r2, #2
 800212c:	0892      	lsrs	r2, r2, #2
 800212e:	60da      	str	r2, [r3, #12]
  	GPIOB->OTYPER &= ~( 0x1UL << 15U );
 8002130:	4b0b      	ldr	r3, [pc, #44]	@ (8002160 <LCD_Busy+0xd8>)
 8002132:	685a      	ldr	r2, [r3, #4]
 8002134:	4b0a      	ldr	r3, [pc, #40]	@ (8002160 <LCD_Busy+0xd8>)
 8002136:	490b      	ldr	r1, [pc, #44]	@ (8002164 <LCD_Busy+0xdc>)
 8002138:	400a      	ands	r2, r1
 800213a:	605a      	str	r2, [r3, #4]
  	GPIOB->MODER  &= ~( 0x2UL << 30U );
 800213c:	4b08      	ldr	r3, [pc, #32]	@ (8002160 <LCD_Busy+0xd8>)
 800213e:	681a      	ldr	r2, [r3, #0]
 8002140:	4b07      	ldr	r3, [pc, #28]	@ (8002160 <LCD_Busy+0xd8>)
 8002142:	0052      	lsls	r2, r2, #1
 8002144:	0852      	lsrs	r2, r2, #1
 8002146:	601a      	str	r2, [r3, #0]
  	GPIOB->MODER  |=  ( 0x1UL << 30U );
 8002148:	4b05      	ldr	r3, [pc, #20]	@ (8002160 <LCD_Busy+0xd8>)
 800214a:	681a      	ldr	r2, [r3, #0]
 800214c:	4b04      	ldr	r3, [pc, #16]	@ (8002160 <LCD_Busy+0xd8>)
 800214e:	2180      	movs	r1, #128	@ 0x80
 8002150:	05c9      	lsls	r1, r1, #23
 8002152:	430a      	orrs	r2, r1
 8002154:	601a      	str	r2, [r3, #0]
		return 0;
 8002156:	2300      	movs	r3, #0
	}
}
 8002158:	0018      	movs	r0, r3
 800215a:	46bd      	mov	sp, r7
 800215c:	bd80      	pop	{r7, pc}
 800215e:	46c0      	nop			@ (mov r8, r8)
 8002160:	50000400 	.word	0x50000400
 8002164:	ffff7fff 	.word	0xffff7fff

08002168 <LCD_Pulse_EN>:

//Funcion que genera un pulso en el pin EN del LCD
void LCD_Pulse_EN(void){
 8002168:	b580      	push	{r7, lr}
 800216a:	af00      	add	r7, sp, #0
	GPIOB->BSRR	=	LCD_EN_PIN_LOW;//
 800216c:	4b0b      	ldr	r3, [pc, #44]	@ (800219c <LCD_Pulse_EN+0x34>)
 800216e:	2280      	movs	r2, #128	@ 0x80
 8002170:	0512      	lsls	r2, r2, #20
 8002172:	619a      	str	r2, [r3, #24]
	// SysTick_Delay( 1 );
	TIM17_Delay_ms(1);
 8002174:	2001      	movs	r0, #1
 8002176:	f000 fb0d 	bl	8002794 <TIM17_Delay_ms>
	GPIOB->BSRR	=	LCD_EN_PIN_HIGH;
 800217a:	4b08      	ldr	r3, [pc, #32]	@ (800219c <LCD_Pulse_EN+0x34>)
 800217c:	2280      	movs	r2, #128	@ 0x80
 800217e:	0112      	lsls	r2, r2, #4
 8002180:	619a      	str	r2, [r3, #24]
	// SysTick_Delay( 1 );
	TIM17_Delay_ms(1);
 8002182:	2001      	movs	r0, #1
 8002184:	f000 fb06 	bl	8002794 <TIM17_Delay_ms>
	GPIOB->BSRR	=	LCD_EN_PIN_LOW;
 8002188:	4b04      	ldr	r3, [pc, #16]	@ (800219c <LCD_Pulse_EN+0x34>)
 800218a:	2280      	movs	r2, #128	@ 0x80
 800218c:	0512      	lsls	r2, r2, #20
 800218e:	619a      	str	r2, [r3, #24]
	// SysTick_Delay( 1 );
	TIM17_Delay_ms(1);
 8002190:	2001      	movs	r0, #1
 8002192:	f000 faff 	bl	8002794 <TIM17_Delay_ms>
}
 8002196:	46c0      	nop			@ (mov r8, r8)
 8002198:	46bd      	mov	sp, r7
 800219a:	bd80      	pop	{r7, pc}
 800219c:	50000400 	.word	0x50000400

080021a0 <USART1_IRQHandler>:
uint16_t val;

#define USART1_IRQ_POS 27

void USART1_IRQHandler(void)
{
 80021a0:	b580      	push	{r7, lr}
 80021a2:	b082      	sub	sp, #8
 80021a4:	af00      	add	r7, sp, #0
	if ((USART1->ISR & (0x1UL << 5U)))
 80021a6:	4b30      	ldr	r3, [pc, #192]	@ (8002268 <USART1_IRQHandler+0xc8>)
 80021a8:	69db      	ldr	r3, [r3, #28]
 80021aa:	2220      	movs	r2, #32
 80021ac:	4013      	ands	r3, r2
 80021ae:	d057      	beq.n	8002260 <USART1_IRQHandler+0xc0>
	{ // wait until a data is received (ISR register)
		char received = USART1->RDR;
 80021b0:	4b2d      	ldr	r3, [pc, #180]	@ (8002268 <USART1_IRQHandler+0xc8>)
 80021b2:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80021b4:	1dfb      	adds	r3, r7, #7
 80021b6:	701a      	strb	r2, [r3, #0]
		if (received == 'V')
 80021b8:	1dfb      	adds	r3, r7, #7
 80021ba:	781b      	ldrb	r3, [r3, #0]
 80021bc:	2b56      	cmp	r3, #86	@ 0x56
 80021be:	d114      	bne.n	80021ea <USART1_IRQHandler+0x4a>
		{
			velocity = atoi(buffer_str);
 80021c0:	4b2a      	ldr	r3, [pc, #168]	@ (800226c <USART1_IRQHandler+0xcc>)
 80021c2:	0018      	movs	r0, r3
 80021c4:	f000 fbf3 	bl	80029ae <atoi>
 80021c8:	0002      	movs	r2, r0
 80021ca:	4b29      	ldr	r3, [pc, #164]	@ (8002270 <USART1_IRQHandler+0xd0>)
 80021cc:	601a      	str	r2, [r3, #0]
			memcpy(buffer_vel, buffer_str, sizeof(buffer_str));
 80021ce:	4b29      	ldr	r3, [pc, #164]	@ (8002274 <USART1_IRQHandler+0xd4>)
 80021d0:	4a26      	ldr	r2, [pc, #152]	@ (800226c <USART1_IRQHandler+0xcc>)
 80021d2:	ca03      	ldmia	r2!, {r0, r1}
 80021d4:	c303      	stmia	r3!, {r0, r1}
			memset(buffer_str, 0, sizeof(buffer_str));
 80021d6:	4b25      	ldr	r3, [pc, #148]	@ (800226c <USART1_IRQHandler+0xcc>)
 80021d8:	2208      	movs	r2, #8
 80021da:	2100      	movs	r1, #0
 80021dc:	0018      	movs	r0, r3
 80021de:	f000 fc83 	bl	8002ae8 <memset>
			index_k = 0;
 80021e2:	4b25      	ldr	r3, [pc, #148]	@ (8002278 <USART1_IRQHandler+0xd8>)
 80021e4:	2200      	movs	r2, #0
 80021e6:	601a      	str	r2, [r3, #0]
				memset(buffer_str, 0, sizeof(buffer_str));
				index_k = 0;
			}
		}
	}
}
 80021e8:	e03a      	b.n	8002260 <USART1_IRQHandler+0xc0>
		else if (received == 'S')
 80021ea:	1dfb      	adds	r3, r7, #7
 80021ec:	781b      	ldrb	r3, [r3, #0]
 80021ee:	2b53      	cmp	r3, #83	@ 0x53
 80021f0:	d10d      	bne.n	800220e <USART1_IRQHandler+0x6e>
					memcpy(buffer_rpm, buffer_str, sizeof(buffer_str));
 80021f2:	4b22      	ldr	r3, [pc, #136]	@ (800227c <USART1_IRQHandler+0xdc>)
 80021f4:	4a1d      	ldr	r2, [pc, #116]	@ (800226c <USART1_IRQHandler+0xcc>)
 80021f6:	ca03      	ldmia	r2!, {r0, r1}
 80021f8:	c303      	stmia	r3!, {r0, r1}
					memset(buffer_str, 0, sizeof(buffer_str));
 80021fa:	4b1c      	ldr	r3, [pc, #112]	@ (800226c <USART1_IRQHandler+0xcc>)
 80021fc:	2208      	movs	r2, #8
 80021fe:	2100      	movs	r1, #0
 8002200:	0018      	movs	r0, r3
 8002202:	f000 fc71 	bl	8002ae8 <memset>
					index_k = 0;
 8002206:	4b1c      	ldr	r3, [pc, #112]	@ (8002278 <USART1_IRQHandler+0xd8>)
 8002208:	2200      	movs	r2, #0
 800220a:	601a      	str	r2, [r3, #0]
}
 800220c:	e028      	b.n	8002260 <USART1_IRQHandler+0xc0>
		else if (received == 'E')
 800220e:	1dfb      	adds	r3, r7, #7
 8002210:	781b      	ldrb	r3, [r3, #0]
 8002212:	2b45      	cmp	r3, #69	@ 0x45
 8002214:	d10d      	bne.n	8002232 <USART1_IRQHandler+0x92>
							memcpy(buffer_gear, buffer_str, sizeof(buffer_str));
 8002216:	4b1a      	ldr	r3, [pc, #104]	@ (8002280 <USART1_IRQHandler+0xe0>)
 8002218:	4a14      	ldr	r2, [pc, #80]	@ (800226c <USART1_IRQHandler+0xcc>)
 800221a:	ca03      	ldmia	r2!, {r0, r1}
 800221c:	c303      	stmia	r3!, {r0, r1}
							memset(buffer_str, 0, sizeof(buffer_str));
 800221e:	4b13      	ldr	r3, [pc, #76]	@ (800226c <USART1_IRQHandler+0xcc>)
 8002220:	2208      	movs	r2, #8
 8002222:	2100      	movs	r1, #0
 8002224:	0018      	movs	r0, r3
 8002226:	f000 fc5f 	bl	8002ae8 <memset>
							index_k = 0;
 800222a:	4b13      	ldr	r3, [pc, #76]	@ (8002278 <USART1_IRQHandler+0xd8>)
 800222c:	2200      	movs	r2, #0
 800222e:	601a      	str	r2, [r3, #0]
}
 8002230:	e016      	b.n	8002260 <USART1_IRQHandler+0xc0>
			if (index_k < BUFFER_SIZE - 1)
 8002232:	4b11      	ldr	r3, [pc, #68]	@ (8002278 <USART1_IRQHandler+0xd8>)
 8002234:	681b      	ldr	r3, [r3, #0]
 8002236:	2b06      	cmp	r3, #6
 8002238:	dc09      	bgt.n	800224e <USART1_IRQHandler+0xae>
				buffer_str[index_k++] = received;
 800223a:	4b0f      	ldr	r3, [pc, #60]	@ (8002278 <USART1_IRQHandler+0xd8>)
 800223c:	681b      	ldr	r3, [r3, #0]
 800223e:	1c59      	adds	r1, r3, #1
 8002240:	4a0d      	ldr	r2, [pc, #52]	@ (8002278 <USART1_IRQHandler+0xd8>)
 8002242:	6011      	str	r1, [r2, #0]
 8002244:	4a09      	ldr	r2, [pc, #36]	@ (800226c <USART1_IRQHandler+0xcc>)
 8002246:	1df9      	adds	r1, r7, #7
 8002248:	7809      	ldrb	r1, [r1, #0]
 800224a:	54d1      	strb	r1, [r2, r3]
}
 800224c:	e008      	b.n	8002260 <USART1_IRQHandler+0xc0>
				memset(buffer_str, 0, sizeof(buffer_str));
 800224e:	4b07      	ldr	r3, [pc, #28]	@ (800226c <USART1_IRQHandler+0xcc>)
 8002250:	2208      	movs	r2, #8
 8002252:	2100      	movs	r1, #0
 8002254:	0018      	movs	r0, r3
 8002256:	f000 fc47 	bl	8002ae8 <memset>
				index_k = 0;
 800225a:	4b07      	ldr	r3, [pc, #28]	@ (8002278 <USART1_IRQHandler+0xd8>)
 800225c:	2200      	movs	r2, #0
 800225e:	601a      	str	r2, [r3, #0]
}
 8002260:	46c0      	nop			@ (mov r8, r8)
 8002262:	46bd      	mov	sp, r7
 8002264:	b002      	add	sp, #8
 8002266:	bd80      	pop	{r7, pc}
 8002268:	40013800 	.word	0x40013800
 800226c:	2000006c 	.word	0x2000006c
 8002270:	2000008c 	.word	0x2000008c
 8002274:	20000074 	.word	0x20000074
 8002278:	20000090 	.word	0x20000090
 800227c:	2000007c 	.word	0x2000007c
 8002280:	20000084 	.word	0x20000084

08002284 <main>:
//		printf("{adc: %u, button: %u}\n", val, button_status);
//		SysTick_Delay(100);
//	}
//}

int main(void) {
 8002284:	b580      	push	{r7, lr}
 8002286:	af00      	add	r7, sp, #0
	USER_RCC_Init();
 8002288:	f000 f818 	bl	80022bc <USER_RCC_Init>
	// USER_TIM3_PWM_Init();
	USER_SysTick_Init();
 800228c:	f000 f8a4 	bl	80023d8 <USER_SysTick_Init>

	USER_TIM17_Init();
 8002290:	f000 fa5e 	bl	8002750 <USER_TIM17_Init>

	USER_UART1_Init();
 8002294:	f000 faa6 	bl	80027e4 <USER_UART1_Init>
	USER_GPIO_Init();
 8002298:	f000 f84a 	bl	8002330 <USER_GPIO_Init>
	LCD_Init();
 800229c:	f7ff fcda 	bl	8001c54 <LCD_Init>
	USER_ADC_Init();
 80022a0:	f7ff fbea 	bl	8001a78 <USER_ADC_Init>
	USER_EXTI1_Init();
 80022a4:	f7ff fcaa 	bl	8001bfc <USER_EXTI1_Init>
	LCD_Clear();
 80022a8:	2001      	movs	r0, #1
 80022aa:	f7ff fec1 	bl	8002030 <LCD_Write_Cmd>

	USER_TIM3_PWM_4CH_Init();
 80022ae:	f000 f8d1 	bl	8002454 <USER_TIM3_PWM_4CH_Init>
	update_cycle(25);
 80022b2:	2019      	movs	r0, #25
 80022b4:	f000 f9e6 	bl	8002684 <update_cycle>


	while(1){
 80022b8:	46c0      	nop			@ (mov r8, r8)
 80022ba:	e7fd      	b.n	80022b8 <main+0x34>

080022bc <USER_RCC_Init>:
//		TIM17_Delay_ms(100);
//	}

}
void USER_RCC_Init(void)
{
 80022bc:	b580      	push	{r7, lr}
 80022be:	af00      	add	r7, sp, #0
	// set gpio output
//	RCC->IOPENR = RCC->IOPENR | (0x1UL << 0U);
	/* System Clock (SYSCLK) configuration for 48 MHz */
	FLASH->ACR &= ~(0x6UL << 0U); // 2 HCLK cycles latency, if SYSCLK >=24MHz <=48MHz
 80022c0:	4b17      	ldr	r3, [pc, #92]	@ (8002320 <USER_RCC_Init+0x64>)
 80022c2:	681a      	ldr	r2, [r3, #0]
 80022c4:	4b16      	ldr	r3, [pc, #88]	@ (8002320 <USER_RCC_Init+0x64>)
 80022c6:	2106      	movs	r1, #6
 80022c8:	438a      	bics	r2, r1
 80022ca:	601a      	str	r2, [r3, #0]
	FLASH->ACR |= (0x1UL << 0U);  // 2 HCLK cycles latency, if SYSCLK >=24MHz <=48MHz
 80022cc:	4b14      	ldr	r3, [pc, #80]	@ (8002320 <USER_RCC_Init+0x64>)
 80022ce:	681a      	ldr	r2, [r3, #0]
 80022d0:	4b13      	ldr	r3, [pc, #76]	@ (8002320 <USER_RCC_Init+0x64>)
 80022d2:	2101      	movs	r1, #1
 80022d4:	430a      	orrs	r2, r1
 80022d6:	601a      	str	r2, [r3, #0]
	while ((FLASH->ACR & (0x7UL << 0U)) != 0x001UL)
 80022d8:	46c0      	nop			@ (mov r8, r8)
 80022da:	4b11      	ldr	r3, [pc, #68]	@ (8002320 <USER_RCC_Init+0x64>)
 80022dc:	681b      	ldr	r3, [r3, #0]
 80022de:	2207      	movs	r2, #7
 80022e0:	4013      	ands	r3, r2
 80022e2:	2b01      	cmp	r3, #1
 80022e4:	d1f9      	bne.n	80022da <USER_RCC_Init+0x1e>
		;						// wait until LATENCY[2:0]=001
	RCC->CR &= ~(0x7UL << 11U); // select HSISYS division factor by 1
 80022e6:	4b0f      	ldr	r3, [pc, #60]	@ (8002324 <USER_RCC_Init+0x68>)
 80022e8:	681a      	ldr	r2, [r3, #0]
 80022ea:	4b0e      	ldr	r3, [pc, #56]	@ (8002324 <USER_RCC_Init+0x68>)
 80022ec:	490e      	ldr	r1, [pc, #56]	@ (8002328 <USER_RCC_Init+0x6c>)
 80022ee:	400a      	ands	r2, r1
 80022f0:	601a      	str	r2, [r3, #0]
	while (!(RCC->CR & (0x1UL << 10U)))
 80022f2:	46c0      	nop			@ (mov r8, r8)
 80022f4:	4b0b      	ldr	r3, [pc, #44]	@ (8002324 <USER_RCC_Init+0x68>)
 80022f6:	681a      	ldr	r2, [r3, #0]
 80022f8:	2380      	movs	r3, #128	@ 0x80
 80022fa:	00db      	lsls	r3, r3, #3
 80022fc:	4013      	ands	r3, r2
 80022fe:	d0f9      	beq.n	80022f4 <USER_RCC_Init+0x38>
		;						  // wait until HSISYS is stable and ready
	RCC->CFGR &= ~(0x7UL << 0U);  // select HSISYS as the SYSCLK clock source
 8002300:	4b08      	ldr	r3, [pc, #32]	@ (8002324 <USER_RCC_Init+0x68>)
 8002302:	689a      	ldr	r2, [r3, #8]
 8002304:	4b07      	ldr	r3, [pc, #28]	@ (8002324 <USER_RCC_Init+0x68>)
 8002306:	2107      	movs	r1, #7
 8002308:	438a      	bics	r2, r1
 800230a:	609a      	str	r2, [r3, #8]
	RCC->CFGR &= ~(0x1UL << 11U); // select HCLK division factor by 1
 800230c:	4b05      	ldr	r3, [pc, #20]	@ (8002324 <USER_RCC_Init+0x68>)
 800230e:	689a      	ldr	r2, [r3, #8]
 8002310:	4b04      	ldr	r3, [pc, #16]	@ (8002324 <USER_RCC_Init+0x68>)
 8002312:	4906      	ldr	r1, [pc, #24]	@ (800232c <USER_RCC_Init+0x70>)
 8002314:	400a      	ands	r2, r1
 8002316:	609a      	str	r2, [r3, #8]
}
 8002318:	46c0      	nop			@ (mov r8, r8)
 800231a:	46bd      	mov	sp, r7
 800231c:	bd80      	pop	{r7, pc}
 800231e:	46c0      	nop			@ (mov r8, r8)
 8002320:	40022000 	.word	0x40022000
 8002324:	40021000 	.word	0x40021000
 8002328:	ffffc7ff 	.word	0xffffc7ff
 800232c:	fffff7ff 	.word	0xfffff7ff

08002330 <USER_GPIO_Init>:

void USER_GPIO_Init(void)
{
 8002330:	b580      	push	{r7, lr}
 8002332:	af00      	add	r7, sp, #0
	// SET 4 BIT LEDS AS OUTPUT
	RCC->IOPENR = RCC->IOPENR | (0X1UL << 0U);
 8002334:	4b23      	ldr	r3, [pc, #140]	@ (80023c4 <USER_GPIO_Init+0x94>)
 8002336:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8002338:	4b22      	ldr	r3, [pc, #136]	@ (80023c4 <USER_GPIO_Init+0x94>)
 800233a:	2101      	movs	r1, #1
 800233c:	430a      	orrs	r2, r1
 800233e:	635a      	str	r2, [r3, #52]	@ 0x34
	// PINA5 AS OUTPUT
	GPIOA->BSRR = 0x1UL << 21U;						// Reset PA5 low to turn off LED
 8002340:	23a0      	movs	r3, #160	@ 0xa0
 8002342:	05db      	lsls	r3, r3, #23
 8002344:	2280      	movs	r2, #128	@ 0x80
 8002346:	0392      	lsls	r2, r2, #14
 8002348:	619a      	str	r2, [r3, #24]
	GPIOA->PUPDR = GPIOA->PUPDR & ~(0x3UL << 10U);	// Clear pull-up/pull-down bits for PA5
 800234a:	23a0      	movs	r3, #160	@ 0xa0
 800234c:	05db      	lsls	r3, r3, #23
 800234e:	68da      	ldr	r2, [r3, #12]
 8002350:	23a0      	movs	r3, #160	@ 0xa0
 8002352:	05db      	lsls	r3, r3, #23
 8002354:	491c      	ldr	r1, [pc, #112]	@ (80023c8 <USER_GPIO_Init+0x98>)
 8002356:	400a      	ands	r2, r1
 8002358:	60da      	str	r2, [r3, #12]
	GPIOA->OTYPER = GPIOA->OTYPER & ~(0x1UL << 5U); // Clear output type bit for PA5
 800235a:	23a0      	movs	r3, #160	@ 0xa0
 800235c:	05db      	lsls	r3, r3, #23
 800235e:	685a      	ldr	r2, [r3, #4]
 8002360:	23a0      	movs	r3, #160	@ 0xa0
 8002362:	05db      	lsls	r3, r3, #23
 8002364:	2120      	movs	r1, #32
 8002366:	438a      	bics	r2, r1
 8002368:	605a      	str	r2, [r3, #4]
	GPIOA->MODER = GPIOA->MODER & ~(0x2UL << 10U);	// Set PA5 as output
 800236a:	23a0      	movs	r3, #160	@ 0xa0
 800236c:	05db      	lsls	r3, r3, #23
 800236e:	681a      	ldr	r2, [r3, #0]
 8002370:	23a0      	movs	r3, #160	@ 0xa0
 8002372:	05db      	lsls	r3, r3, #23
 8002374:	4915      	ldr	r1, [pc, #84]	@ (80023cc <USER_GPIO_Init+0x9c>)
 8002376:	400a      	ands	r2, r1
 8002378:	601a      	str	r2, [r3, #0]
	GPIOA->MODER = GPIOA->MODER | (0x1UL << 10U);	// Set PA5 as output
 800237a:	23a0      	movs	r3, #160	@ 0xa0
 800237c:	05db      	lsls	r3, r3, #23
 800237e:	681a      	ldr	r2, [r3, #0]
 8002380:	23a0      	movs	r3, #160	@ 0xa0
 8002382:	05db      	lsls	r3, r3, #23
 8002384:	2180      	movs	r1, #128	@ 0x80
 8002386:	00c9      	lsls	r1, r1, #3
 8002388:	430a      	orrs	r2, r1
 800238a:	601a      	str	r2, [r3, #0]
	// PINA9 AS INPUT PULL DOWN
	GPIOA->MODER &= ~(0x3UL << 14U);
 800238c:	23a0      	movs	r3, #160	@ 0xa0
 800238e:	05db      	lsls	r3, r3, #23
 8002390:	681a      	ldr	r2, [r3, #0]
 8002392:	23a0      	movs	r3, #160	@ 0xa0
 8002394:	05db      	lsls	r3, r3, #23
 8002396:	490e      	ldr	r1, [pc, #56]	@ (80023d0 <USER_GPIO_Init+0xa0>)
 8002398:	400a      	ands	r2, r1
 800239a:	601a      	str	r2, [r3, #0]
	GPIOA->PUPDR &= ~(0x1UL << 14U);
 800239c:	23a0      	movs	r3, #160	@ 0xa0
 800239e:	05db      	lsls	r3, r3, #23
 80023a0:	68da      	ldr	r2, [r3, #12]
 80023a2:	23a0      	movs	r3, #160	@ 0xa0
 80023a4:	05db      	lsls	r3, r3, #23
 80023a6:	490b      	ldr	r1, [pc, #44]	@ (80023d4 <USER_GPIO_Init+0xa4>)
 80023a8:	400a      	ands	r2, r1
 80023aa:	60da      	str	r2, [r3, #12]
	GPIOA->PUPDR |= (0x2UL << 14U);
 80023ac:	23a0      	movs	r3, #160	@ 0xa0
 80023ae:	05db      	lsls	r3, r3, #23
 80023b0:	68da      	ldr	r2, [r3, #12]
 80023b2:	23a0      	movs	r3, #160	@ 0xa0
 80023b4:	05db      	lsls	r3, r3, #23
 80023b6:	2180      	movs	r1, #128	@ 0x80
 80023b8:	0209      	lsls	r1, r1, #8
 80023ba:	430a      	orrs	r2, r1
 80023bc:	60da      	str	r2, [r3, #12]
}
 80023be:	46c0      	nop			@ (mov r8, r8)
 80023c0:	46bd      	mov	sp, r7
 80023c2:	bd80      	pop	{r7, pc}
 80023c4:	40021000 	.word	0x40021000
 80023c8:	fffff3ff 	.word	0xfffff3ff
 80023cc:	fffff7ff 	.word	0xfffff7ff
 80023d0:	ffff3fff 	.word	0xffff3fff
 80023d4:	ffffbfff 	.word	0xffffbfff

080023d8 <USER_SysTick_Init>:
#include <stdint.h>
#include "main.h"
#include "systicklib.h"

void USER_SysTick_Init( void ){
 80023d8:	b580      	push	{r7, lr}
 80023da:	af00      	add	r7, sp, #0
  // Reloj del sistema = 48 MHz
  // SysTick es de 24 bits, así que máximo 2^24-1 = 16,777,215
  // Para 1ms: 48,000,000 / 1000 ciclos
  Systick->RVR  = 48000 - 1;//          Carga para 1ms
 80023dc:	4b07      	ldr	r3, [pc, #28]	@ (80023fc <USER_SysTick_Init+0x24>)
 80023de:	4a08      	ldr	r2, [pc, #32]	@ (8002400 <USER_SysTick_Init+0x28>)
 80023e0:	605a      	str	r2, [r3, #4]
  Systick->CVR  = 0;//                  Reinicia el contador
 80023e2:	4b06      	ldr	r3, [pc, #24]	@ (80023fc <USER_SysTick_Init+0x24>)
 80023e4:	2200      	movs	r2, #0
 80023e6:	609a      	str	r2, [r3, #8]
  Systick->CSR |=  ( 0x1UL <<  2U );//  Selecciona el reloj del procesador como el Systick
 80023e8:	4b04      	ldr	r3, [pc, #16]	@ (80023fc <USER_SysTick_Init+0x24>)
 80023ea:	681a      	ldr	r2, [r3, #0]
 80023ec:	4b03      	ldr	r3, [pc, #12]	@ (80023fc <USER_SysTick_Init+0x24>)
 80023ee:	2104      	movs	r1, #4
 80023f0:	430a      	orrs	r2, r1
 80023f2:	601a      	str	r2, [r3, #0]
}
 80023f4:	46c0      	nop			@ (mov r8, r8)
 80023f6:	46bd      	mov	sp, r7
 80023f8:	bd80      	pop	{r7, pc}
 80023fa:	46c0      	nop			@ (mov r8, r8)
 80023fc:	e000e010 	.word	0xe000e010
 8002400:	0000bb7f 	.word	0x0000bb7f

08002404 <SysTick_Delay>:

void SysTick_Delay( uint32_t time ) {
 8002404:	b580      	push	{r7, lr}
 8002406:	b084      	sub	sp, #16
 8002408:	af00      	add	r7, sp, #0
 800240a:	6078      	str	r0, [r7, #4]
  Systick->CSR |=  ( 0x1UL <<  0U );//  Inicia el Systick
 800240c:	4b10      	ldr	r3, [pc, #64]	@ (8002450 <SysTick_Delay+0x4c>)
 800240e:	681a      	ldr	r2, [r3, #0]
 8002410:	4b0f      	ldr	r3, [pc, #60]	@ (8002450 <SysTick_Delay+0x4c>)
 8002412:	2101      	movs	r1, #1
 8002414:	430a      	orrs	r2, r1
 8002416:	601a      	str	r2, [r3, #0]
  for(uint32_t i = 0; i < time; i++){
 8002418:	2300      	movs	r3, #0
 800241a:	60fb      	str	r3, [r7, #12]
 800241c:	e009      	b.n	8002432 <SysTick_Delay+0x2e>
    // Espera a que el bit COUNTFLAG se ponga en 1 (cuando se desborda)
    while(!( Systick->CSR & ( 0x1UL << 16U )));
 800241e:	46c0      	nop			@ (mov r8, r8)
 8002420:	4b0b      	ldr	r3, [pc, #44]	@ (8002450 <SysTick_Delay+0x4c>)
 8002422:	681a      	ldr	r2, [r3, #0]
 8002424:	2380      	movs	r3, #128	@ 0x80
 8002426:	025b      	lsls	r3, r3, #9
 8002428:	4013      	ands	r3, r2
 800242a:	d0f9      	beq.n	8002420 <SysTick_Delay+0x1c>
  for(uint32_t i = 0; i < time; i++){
 800242c:	68fb      	ldr	r3, [r7, #12]
 800242e:	3301      	adds	r3, #1
 8002430:	60fb      	str	r3, [r7, #12]
 8002432:	68fa      	ldr	r2, [r7, #12]
 8002434:	687b      	ldr	r3, [r7, #4]
 8002436:	429a      	cmp	r2, r3
 8002438:	d3f1      	bcc.n	800241e <SysTick_Delay+0x1a>
  }
  Systick->CSR &= ~( 0x1UL <<  0U );//  Detiene el SysTick
 800243a:	4b05      	ldr	r3, [pc, #20]	@ (8002450 <SysTick_Delay+0x4c>)
 800243c:	681a      	ldr	r2, [r3, #0]
 800243e:	4b04      	ldr	r3, [pc, #16]	@ (8002450 <SysTick_Delay+0x4c>)
 8002440:	2101      	movs	r1, #1
 8002442:	438a      	bics	r2, r1
 8002444:	601a      	str	r2, [r3, #0]
}
 8002446:	46c0      	nop			@ (mov r8, r8)
 8002448:	46bd      	mov	sp, r7
 800244a:	b004      	add	sp, #16
 800244c:	bd80      	pop	{r7, pc}
 800244e:	46c0      	nop			@ (mov r8, r8)
 8002450:	e000e010 	.word	0xe000e010

08002454 <USER_TIM3_PWM_4CH_Init>:

// 	/* STEP 7. Enable the Timer to start counting */
// 	TIM3->CR1		|=  ( 0x1UL <<  0U );
// }

void USER_TIM3_PWM_4CH_Init( void ){
 8002454:	b580      	push	{r7, lr}
 8002456:	af00      	add	r7, sp, #0
	/* STEP 0. Enable the clock signal for the TIM3 and GPIOB peripherals */
	RCC->IOPENR		|=  ( 0x1UL <<  1U );
 8002458:	4b7b      	ldr	r3, [pc, #492]	@ (8002648 <USER_TIM3_PWM_4CH_Init+0x1f4>)
 800245a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800245c:	4b7a      	ldr	r3, [pc, #488]	@ (8002648 <USER_TIM3_PWM_4CH_Init+0x1f4>)
 800245e:	2102      	movs	r1, #2
 8002460:	430a      	orrs	r2, r1
 8002462:	635a      	str	r2, [r3, #52]	@ 0x34
	RCC->APBENR1	|=  ( 0x1UL <<  1U );
 8002464:	4b78      	ldr	r3, [pc, #480]	@ (8002648 <USER_TIM3_PWM_4CH_Init+0x1f4>)
 8002466:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8002468:	4b77      	ldr	r3, [pc, #476]	@ (8002648 <USER_TIM3_PWM_4CH_Init+0x1f4>)
 800246a:	2102      	movs	r1, #2
 800246c:	430a      	orrs	r2, r1
 800246e:	63da      	str	r2, [r3, #60]	@ 0x3c
	/* STEP 0.
	 * Configure TIM3_CH1 (PB4) to output the PWM signal */
	GPIOB->AFRL		&= ~( 0xEUL << 16U );
 8002470:	4b76      	ldr	r3, [pc, #472]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 8002472:	6a1a      	ldr	r2, [r3, #32]
 8002474:	4b75      	ldr	r3, [pc, #468]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 8002476:	4976      	ldr	r1, [pc, #472]	@ (8002650 <USER_TIM3_PWM_4CH_Init+0x1fc>)
 8002478:	400a      	ands	r2, r1
 800247a:	621a      	str	r2, [r3, #32]
	GPIOB->AFRL		|=  ( 0x1UL << 16U );
 800247c:	4b73      	ldr	r3, [pc, #460]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 800247e:	6a1a      	ldr	r2, [r3, #32]
 8002480:	4b72      	ldr	r3, [pc, #456]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 8002482:	2180      	movs	r1, #128	@ 0x80
 8002484:	0249      	lsls	r1, r1, #9
 8002486:	430a      	orrs	r2, r1
 8002488:	621a      	str	r2, [r3, #32]
	GPIOB->PUPDR  	&= ~( 0x3UL <<  8U );
 800248a:	4b70      	ldr	r3, [pc, #448]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 800248c:	68da      	ldr	r2, [r3, #12]
 800248e:	4b6f      	ldr	r3, [pc, #444]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 8002490:	4970      	ldr	r1, [pc, #448]	@ (8002654 <USER_TIM3_PWM_4CH_Init+0x200>)
 8002492:	400a      	ands	r2, r1
 8002494:	60da      	str	r2, [r3, #12]
	GPIOB->OTYPER	&= ~( 0x1UL <<  4U );
 8002496:	4b6d      	ldr	r3, [pc, #436]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 8002498:	685a      	ldr	r2, [r3, #4]
 800249a:	4b6c      	ldr	r3, [pc, #432]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 800249c:	2110      	movs	r1, #16
 800249e:	438a      	bics	r2, r1
 80024a0:	605a      	str	r2, [r3, #4]
	GPIOB->MODER  	&= ~( 0x1UL <<  8U );
 80024a2:	4b6a      	ldr	r3, [pc, #424]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 80024a4:	681a      	ldr	r2, [r3, #0]
 80024a6:	4b69      	ldr	r3, [pc, #420]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 80024a8:	496b      	ldr	r1, [pc, #428]	@ (8002658 <USER_TIM3_PWM_4CH_Init+0x204>)
 80024aa:	400a      	ands	r2, r1
 80024ac:	601a      	str	r2, [r3, #0]
	GPIOB->MODER  	|=  ( 0x2UL <<  8U );
 80024ae:	4b67      	ldr	r3, [pc, #412]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 80024b0:	681a      	ldr	r2, [r3, #0]
 80024b2:	4b66      	ldr	r3, [pc, #408]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 80024b4:	2180      	movs	r1, #128	@ 0x80
 80024b6:	0089      	lsls	r1, r1, #2
 80024b8:	430a      	orrs	r2, r1
 80024ba:	601a      	str	r2, [r3, #0]
	/* Configure TIM3_CH2 (PB5) to output the PWM signal */
	GPIOB->AFRL		&= ~( 0xEUL << 20U );
 80024bc:	4b63      	ldr	r3, [pc, #396]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 80024be:	6a1a      	ldr	r2, [r3, #32]
 80024c0:	4b62      	ldr	r3, [pc, #392]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 80024c2:	4966      	ldr	r1, [pc, #408]	@ (800265c <USER_TIM3_PWM_4CH_Init+0x208>)
 80024c4:	400a      	ands	r2, r1
 80024c6:	621a      	str	r2, [r3, #32]
	GPIOB->AFRL		|=  ( 0x1UL << 20U );
 80024c8:	4b60      	ldr	r3, [pc, #384]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 80024ca:	6a1a      	ldr	r2, [r3, #32]
 80024cc:	4b5f      	ldr	r3, [pc, #380]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 80024ce:	2180      	movs	r1, #128	@ 0x80
 80024d0:	0349      	lsls	r1, r1, #13
 80024d2:	430a      	orrs	r2, r1
 80024d4:	621a      	str	r2, [r3, #32]
	GPIOB->PUPDR  	&= ~( 0x3UL << 10U );
 80024d6:	4b5d      	ldr	r3, [pc, #372]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 80024d8:	68da      	ldr	r2, [r3, #12]
 80024da:	4b5c      	ldr	r3, [pc, #368]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 80024dc:	4960      	ldr	r1, [pc, #384]	@ (8002660 <USER_TIM3_PWM_4CH_Init+0x20c>)
 80024de:	400a      	ands	r2, r1
 80024e0:	60da      	str	r2, [r3, #12]
	GPIOB->OTYPER	&= ~( 0x1UL <<  5U );
 80024e2:	4b5a      	ldr	r3, [pc, #360]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 80024e4:	685a      	ldr	r2, [r3, #4]
 80024e6:	4b59      	ldr	r3, [pc, #356]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 80024e8:	2120      	movs	r1, #32
 80024ea:	438a      	bics	r2, r1
 80024ec:	605a      	str	r2, [r3, #4]
	GPIOB->MODER  	&= ~( 0x1UL << 10U );
 80024ee:	4b57      	ldr	r3, [pc, #348]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 80024f0:	681a      	ldr	r2, [r3, #0]
 80024f2:	4b56      	ldr	r3, [pc, #344]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 80024f4:	495b      	ldr	r1, [pc, #364]	@ (8002664 <USER_TIM3_PWM_4CH_Init+0x210>)
 80024f6:	400a      	ands	r2, r1
 80024f8:	601a      	str	r2, [r3, #0]
	GPIOB->MODER  	|=  ( 0x2UL << 10U );
 80024fa:	4b54      	ldr	r3, [pc, #336]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 80024fc:	681a      	ldr	r2, [r3, #0]
 80024fe:	4b53      	ldr	r3, [pc, #332]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 8002500:	2180      	movs	r1, #128	@ 0x80
 8002502:	0109      	lsls	r1, r1, #4
 8002504:	430a      	orrs	r2, r1
 8002506:	601a      	str	r2, [r3, #0]
	/* Configure TIM3_CH3 (PB0) to output the PWM signal */
	GPIOB->AFRL		&= ~( 0xEUL <<  0U );
 8002508:	4b50      	ldr	r3, [pc, #320]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 800250a:	6a1a      	ldr	r2, [r3, #32]
 800250c:	4b4f      	ldr	r3, [pc, #316]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 800250e:	210e      	movs	r1, #14
 8002510:	438a      	bics	r2, r1
 8002512:	621a      	str	r2, [r3, #32]
	GPIOB->AFRL		|=  ( 0x1UL <<  0U );
 8002514:	4b4d      	ldr	r3, [pc, #308]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 8002516:	6a1a      	ldr	r2, [r3, #32]
 8002518:	4b4c      	ldr	r3, [pc, #304]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 800251a:	2101      	movs	r1, #1
 800251c:	430a      	orrs	r2, r1
 800251e:	621a      	str	r2, [r3, #32]
	GPIOB->PUPDR  	&= ~( 0x3UL <<  0U );
 8002520:	4b4a      	ldr	r3, [pc, #296]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 8002522:	68da      	ldr	r2, [r3, #12]
 8002524:	4b49      	ldr	r3, [pc, #292]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 8002526:	2103      	movs	r1, #3
 8002528:	438a      	bics	r2, r1
 800252a:	60da      	str	r2, [r3, #12]
	GPIOB->OTYPER	&= ~( 0x1UL <<  0U );
 800252c:	4b47      	ldr	r3, [pc, #284]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 800252e:	685a      	ldr	r2, [r3, #4]
 8002530:	4b46      	ldr	r3, [pc, #280]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 8002532:	2101      	movs	r1, #1
 8002534:	438a      	bics	r2, r1
 8002536:	605a      	str	r2, [r3, #4]
	GPIOB->MODER  	&= ~( 0x1UL <<  0U );
 8002538:	4b44      	ldr	r3, [pc, #272]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 800253a:	681a      	ldr	r2, [r3, #0]
 800253c:	4b43      	ldr	r3, [pc, #268]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 800253e:	2101      	movs	r1, #1
 8002540:	438a      	bics	r2, r1
 8002542:	601a      	str	r2, [r3, #0]
	GPIOB->MODER  	|=  ( 0x2UL <<  0U );
 8002544:	4b41      	ldr	r3, [pc, #260]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 8002546:	681a      	ldr	r2, [r3, #0]
 8002548:	4b40      	ldr	r3, [pc, #256]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 800254a:	2102      	movs	r1, #2
 800254c:	430a      	orrs	r2, r1
 800254e:	601a      	str	r2, [r3, #0]
	/* Configure TIM3_CH4 (PB1) to output the PWM signal */
	GPIOB->AFRL		&= ~( 0xEUL <<  4U );
 8002550:	4b3e      	ldr	r3, [pc, #248]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 8002552:	6a1a      	ldr	r2, [r3, #32]
 8002554:	4b3d      	ldr	r3, [pc, #244]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 8002556:	21e0      	movs	r1, #224	@ 0xe0
 8002558:	438a      	bics	r2, r1
 800255a:	621a      	str	r2, [r3, #32]
	GPIOB->AFRL		|=  ( 0x1UL <<  4U );
 800255c:	4b3b      	ldr	r3, [pc, #236]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 800255e:	6a1a      	ldr	r2, [r3, #32]
 8002560:	4b3a      	ldr	r3, [pc, #232]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 8002562:	2110      	movs	r1, #16
 8002564:	430a      	orrs	r2, r1
 8002566:	621a      	str	r2, [r3, #32]
	GPIOB->PUPDR  	&= ~( 0x3UL <<  2U );
 8002568:	4b38      	ldr	r3, [pc, #224]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 800256a:	68da      	ldr	r2, [r3, #12]
 800256c:	4b37      	ldr	r3, [pc, #220]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 800256e:	210c      	movs	r1, #12
 8002570:	438a      	bics	r2, r1
 8002572:	60da      	str	r2, [r3, #12]
	GPIOB->OTYPER	&= ~( 0x1UL <<  1U );
 8002574:	4b35      	ldr	r3, [pc, #212]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 8002576:	685a      	ldr	r2, [r3, #4]
 8002578:	4b34      	ldr	r3, [pc, #208]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 800257a:	2102      	movs	r1, #2
 800257c:	438a      	bics	r2, r1
 800257e:	605a      	str	r2, [r3, #4]
	GPIOB->MODER  	&= ~( 0x1UL <<  2U );
 8002580:	4b32      	ldr	r3, [pc, #200]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 8002582:	681a      	ldr	r2, [r3, #0]
 8002584:	4b31      	ldr	r3, [pc, #196]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 8002586:	2104      	movs	r1, #4
 8002588:	438a      	bics	r2, r1
 800258a:	601a      	str	r2, [r3, #0]
	GPIOB->MODER  	|=  ( 0x2UL <<  2U );
 800258c:	4b2f      	ldr	r3, [pc, #188]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 800258e:	681a      	ldr	r2, [r3, #0]
 8002590:	4b2e      	ldr	r3, [pc, #184]	@ (800264c <USER_TIM3_PWM_4CH_Init+0x1f8>)
 8002592:	2108      	movs	r1, #8
 8002594:	430a      	orrs	r2, r1
 8002596:	601a      	str	r2, [r3, #0]
	/* STEP 1. Configure the clock source (internal) */
	TIM3->SMCR		&= ~( 0x1UL << 16U )
 8002598:	4b33      	ldr	r3, [pc, #204]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 800259a:	689a      	ldr	r2, [r3, #8]
 800259c:	4b32      	ldr	r3, [pc, #200]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 800259e:	4933      	ldr	r1, [pc, #204]	@ (800266c <USER_TIM3_PWM_4CH_Init+0x218>)
 80025a0:	400a      	ands	r2, r1
 80025a2:	609a      	str	r2, [r3, #8]
					&  ~( 0x7UL <<  0U );//		Prescaler is clocked directed by the internal clock
	/* STEP 2. Configure the counter mode, the auto-reload and the overflow UEV-event  */
	TIM3->CR1		&= ~( 0x3UL <<  5U ) //		Selects edge-aligned mode
 80025a4:	4b30      	ldr	r3, [pc, #192]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 80025a6:	681a      	ldr	r2, [r3, #0]
 80025a8:	4b2f      	ldr	r3, [pc, #188]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 80025aa:	2176      	movs	r1, #118	@ 0x76
 80025ac:	438a      	bics	r2, r1
 80025ae:	601a      	str	r2, [r3, #0]
					&  ~( 0x1UL <<  4U ) //		Counter used as upcounter
					&  ~( 0x1UL <<  2U ) //		UEV can be generated by software
					&  ~( 0x1UL <<  1U );//		Update Event (UEV) enabled
	TIM3->CR1		|=  ( 0x1UL <<  7U );//		Auto-reload register is buffered
 80025b0:	4b2d      	ldr	r3, [pc, #180]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 80025b2:	681a      	ldr	r2, [r3, #0]
 80025b4:	4b2c      	ldr	r3, [pc, #176]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 80025b6:	2180      	movs	r1, #128	@ 0x80
 80025b8:	430a      	orrs	r2, r1
 80025ba:	601a      	str	r2, [r3, #0]
	/* STEP 3. Configure the prescaler, the period and the duty cycle register values */
	TIM3->PSC		= 0U;
 80025bc:	4b2a      	ldr	r3, [pc, #168]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 80025be:	2200      	movs	r2, #0
 80025c0:	629a      	str	r2, [r3, #40]	@ 0x28
	TIM3->ARR		= 47999U;//					for 1 KHz frequency
 80025c2:	4b29      	ldr	r3, [pc, #164]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 80025c4:	4a2a      	ldr	r2, [pc, #168]	@ (8002670 <USER_TIM3_PWM_4CH_Init+0x21c>)
 80025c6:	62da      	str	r2, [r3, #44]	@ 0x2c
	TIM3->CCR1		= 0U;//						for 0% of duty cycle in CH1
 80025c8:	4b27      	ldr	r3, [pc, #156]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 80025ca:	2200      	movs	r2, #0
 80025cc:	635a      	str	r2, [r3, #52]	@ 0x34
	TIM3->CCR2		= 0U;//						for 0% of duty cycle in CH2
 80025ce:	4b26      	ldr	r3, [pc, #152]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 80025d0:	2200      	movs	r2, #0
 80025d2:	639a      	str	r2, [r3, #56]	@ 0x38
	TIM3->CCR3		= 0U;//						for 0% of duty cycle in CH3
 80025d4:	4b24      	ldr	r3, [pc, #144]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 80025d6:	2200      	movs	r2, #0
 80025d8:	63da      	str	r2, [r3, #60]	@ 0x3c
	TIM3->CCR4		= 0U;//						for 0% of duty cycle in CH4
 80025da:	4b23      	ldr	r3, [pc, #140]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 80025dc:	2200      	movs	r2, #0
 80025de:	641a      	str	r2, [r3, #64]	@ 0x40
	/* STEP 4. Configure the PWM mode, the compare register load and channel direction */
	TIM3->CCMR1		&= ~( 0x1UL << 24U )
 80025e0:	4b21      	ldr	r3, [pc, #132]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 80025e2:	699a      	ldr	r2, [r3, #24]
 80025e4:	4b20      	ldr	r3, [pc, #128]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 80025e6:	4923      	ldr	r1, [pc, #140]	@ (8002674 <USER_TIM3_PWM_4CH_Init+0x220>)
 80025e8:	400a      	ands	r2, r1
 80025ea:	619a      	str	r2, [r3, #24]
					&  ~( 0x1UL << 12U ) //		Selects PWM 1 mode for CH2
					&  ~( 0x1UL << 16U )
					&  ~( 0x1UL <<  4U ) //		Selects PWM 1 mode for CH1
					&  ~( 0x3UL <<  8U ) //		Selects CH2 as output
					&  ~( 0x3UL <<  0U );//		Selects CH1 as output
	TIM3->CCMR1		|=  ( 0x6UL << 12U ) //		Selects PWM 1 mode for CH2
 80025ec:	4b1e      	ldr	r3, [pc, #120]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 80025ee:	699a      	ldr	r2, [r3, #24]
 80025f0:	4b1d      	ldr	r3, [pc, #116]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 80025f2:	4921      	ldr	r1, [pc, #132]	@ (8002678 <USER_TIM3_PWM_4CH_Init+0x224>)
 80025f4:	430a      	orrs	r2, r1
 80025f6:	619a      	str	r2, [r3, #24]
					|   ( 0x1UL << 11U ) //		CCR2 loads on the UEV event
					|   ( 0x6UL <<  4U ) //		Selects PWM 1 mode for CH1
					|   ( 0x1UL <<  3U );//		CCR1 loads on the UEV event
	TIM3->CCMR2		&= ~( 0x1UL << 24U )
 80025f8:	4b1b      	ldr	r3, [pc, #108]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 80025fa:	69da      	ldr	r2, [r3, #28]
 80025fc:	4b1a      	ldr	r3, [pc, #104]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 80025fe:	491d      	ldr	r1, [pc, #116]	@ (8002674 <USER_TIM3_PWM_4CH_Init+0x220>)
 8002600:	400a      	ands	r2, r1
 8002602:	61da      	str	r2, [r3, #28]
					&  ~( 0x1UL << 12U ) //		Selects PWM 1 mode for CH4
					&  ~( 0x1UL << 16U )
					&  ~( 0x1UL <<  4U ) //		Selects PWM 1 mode for CH3
					&  ~( 0x3UL <<  8U ) //		Selects CH4 as output
					&  ~( 0x3UL <<  0U );//		Selects CH3 as output
	TIM3->CCMR2		|=  ( 0x6UL << 12U ) //		Selects PWM 1 mode for CH4
 8002604:	4b18      	ldr	r3, [pc, #96]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 8002606:	69da      	ldr	r2, [r3, #28]
 8002608:	4b17      	ldr	r3, [pc, #92]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 800260a:	491b      	ldr	r1, [pc, #108]	@ (8002678 <USER_TIM3_PWM_4CH_Init+0x224>)
 800260c:	430a      	orrs	r2, r1
 800260e:	61da      	str	r2, [r3, #28]
					|   ( 0x1UL << 11U ) //		CCR4 loads on the UEV event
					|   ( 0x6UL <<  4U ) //		Selects PWM 1 mode for CH3
					|   ( 0x1UL <<  3U );//		CCR3 loads on the UEV event
	/* STEP 5. Generate the UEV-event to load the registers */
	TIM3->EGR		|=  ( 0x1UL <<  0U );
 8002610:	4b15      	ldr	r3, [pc, #84]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 8002612:	695a      	ldr	r2, [r3, #20]
 8002614:	4b14      	ldr	r3, [pc, #80]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 8002616:	2101      	movs	r1, #1
 8002618:	430a      	orrs	r2, r1
 800261a:	615a      	str	r2, [r3, #20]
	/* STEP 6. Enable the PWM signal output and set the polarity */
	TIM3->CCER		&= ~( 0x1UL << 15U ) //		for CH4 output mode, this bit must be cleared
 800261c:	4b12      	ldr	r3, [pc, #72]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 800261e:	6a1a      	ldr	r2, [r3, #32]
 8002620:	4b11      	ldr	r3, [pc, #68]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 8002622:	4916      	ldr	r1, [pc, #88]	@ (800267c <USER_TIM3_PWM_4CH_Init+0x228>)
 8002624:	400a      	ands	r2, r1
 8002626:	621a      	str	r2, [r3, #32]
					&  ~( 0x1UL <<  9U ) //		OC3 active high
					&  ~( 0x1UL <<  7U ) //		for CH2 output mode, this bit must be cleared
					&  ~( 0x1UL <<  5U ) //		OC2 active high
					&  ~( 0x1UL <<  3U ) //		for CH1 output mode, this bit must be cleared
					&  ~( 0x1UL <<  1U );//		OC1 active high
	TIM3->CCER		|=  ( 0x1UL << 12U ) //		OC4 signal is output on the corresponding pin
 8002628:	4b0f      	ldr	r3, [pc, #60]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 800262a:	6a1a      	ldr	r2, [r3, #32]
 800262c:	4b0e      	ldr	r3, [pc, #56]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 800262e:	4914      	ldr	r1, [pc, #80]	@ (8002680 <USER_TIM3_PWM_4CH_Init+0x22c>)
 8002630:	430a      	orrs	r2, r1
 8002632:	621a      	str	r2, [r3, #32]
					|   ( 0x1UL <<  8U )//		OC3 signal is output on the corresponding pin
					|   ( 0x1UL <<  4U )//		OC2 signal is output on the corresponding pin
					|   ( 0x1UL <<  0U );//		OC1 signal is output on the corresponding pin
	/* STEP 7. Enable the Timer to start counting */
	TIM3->CR1		|=  ( 0x1UL <<  0U );
 8002634:	4b0c      	ldr	r3, [pc, #48]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 8002636:	681a      	ldr	r2, [r3, #0]
 8002638:	4b0b      	ldr	r3, [pc, #44]	@ (8002668 <USER_TIM3_PWM_4CH_Init+0x214>)
 800263a:	2101      	movs	r1, #1
 800263c:	430a      	orrs	r2, r1
 800263e:	601a      	str	r2, [r3, #0]
}
 8002640:	46c0      	nop			@ (mov r8, r8)
 8002642:	46bd      	mov	sp, r7
 8002644:	bd80      	pop	{r7, pc}
 8002646:	46c0      	nop			@ (mov r8, r8)
 8002648:	40021000 	.word	0x40021000
 800264c:	50000400 	.word	0x50000400
 8002650:	fff1ffff 	.word	0xfff1ffff
 8002654:	fffffcff 	.word	0xfffffcff
 8002658:	fffffeff 	.word	0xfffffeff
 800265c:	ff1fffff 	.word	0xff1fffff
 8002660:	fffff3ff 	.word	0xfffff3ff
 8002664:	fffffbff 	.word	0xfffffbff
 8002668:	40000400 	.word	0x40000400
 800266c:	fffefff8 	.word	0xfffefff8
 8002670:	0000bb7f 	.word	0x0000bb7f
 8002674:	fefeecec 	.word	0xfefeecec
 8002678:	00006868 	.word	0x00006868
 800267c:	ffff5555 	.word	0xffff5555
 8002680:	00001111 	.word	0x00001111

08002684 <update_cycle>:


void update_cycle(uint8_t duty){
 8002684:	b580      	push	{r7, lr}
 8002686:	b082      	sub	sp, #8
 8002688:	af00      	add	r7, sp, #0
 800268a:	0002      	movs	r2, r0
 800268c:	1dfb      	adds	r3, r7, #7
 800268e:	701a      	strb	r2, [r3, #0]
	TIM3->CCR1		 = USER_Duty_Cycle( duty );//	for 25% of duty cycle
 8002690:	1dfb      	adds	r3, r7, #7
 8002692:	781b      	ldrb	r3, [r3, #0]
 8002694:	0018      	movs	r0, r3
 8002696:	f000 f825 	bl	80026e4 <USER_Duty_Cycle>
 800269a:	0003      	movs	r3, r0
 800269c:	001a      	movs	r2, r3
 800269e:	4b10      	ldr	r3, [pc, #64]	@ (80026e0 <update_cycle+0x5c>)
 80026a0:	635a      	str	r2, [r3, #52]	@ 0x34
	TIM3->CCR2		 = USER_Duty_Cycle( duty );//	for 25% of duty cycle
 80026a2:	1dfb      	adds	r3, r7, #7
 80026a4:	781b      	ldrb	r3, [r3, #0]
 80026a6:	0018      	movs	r0, r3
 80026a8:	f000 f81c 	bl	80026e4 <USER_Duty_Cycle>
 80026ac:	0003      	movs	r3, r0
 80026ae:	001a      	movs	r2, r3
 80026b0:	4b0b      	ldr	r3, [pc, #44]	@ (80026e0 <update_cycle+0x5c>)
 80026b2:	639a      	str	r2, [r3, #56]	@ 0x38
	TIM3->CCR3		 = USER_Duty_Cycle( duty );//	for 25% of duty cycle
 80026b4:	1dfb      	adds	r3, r7, #7
 80026b6:	781b      	ldrb	r3, [r3, #0]
 80026b8:	0018      	movs	r0, r3
 80026ba:	f000 f813 	bl	80026e4 <USER_Duty_Cycle>
 80026be:	0003      	movs	r3, r0
 80026c0:	001a      	movs	r2, r3
 80026c2:	4b07      	ldr	r3, [pc, #28]	@ (80026e0 <update_cycle+0x5c>)
 80026c4:	63da      	str	r2, [r3, #60]	@ 0x3c
	TIM3->CCR4		 = USER_Duty_Cycle( duty );//	for 25% of duty cycle
 80026c6:	1dfb      	adds	r3, r7, #7
 80026c8:	781b      	ldrb	r3, [r3, #0]
 80026ca:	0018      	movs	r0, r3
 80026cc:	f000 f80a 	bl	80026e4 <USER_Duty_Cycle>
 80026d0:	0003      	movs	r3, r0
 80026d2:	001a      	movs	r2, r3
 80026d4:	4b02      	ldr	r3, [pc, #8]	@ (80026e0 <update_cycle+0x5c>)
 80026d6:	641a      	str	r2, [r3, #64]	@ 0x40

}
 80026d8:	46c0      	nop			@ (mov r8, r8)
 80026da:	46bd      	mov	sp, r7
 80026dc:	b002      	add	sp, #8
 80026de:	bd80      	pop	{r7, pc}
 80026e0:	40000400 	.word	0x40000400

080026e4 <USER_Duty_Cycle>:

uint16_t USER_Duty_Cycle( uint8_t duty ){
 80026e4:	b5b0      	push	{r4, r5, r7, lr}
 80026e6:	b082      	sub	sp, #8
 80026e8:	af00      	add	r7, sp, #0
 80026ea:	0002      	movs	r2, r0
 80026ec:	1dfb      	adds	r3, r7, #7
 80026ee:	701a      	strb	r2, [r3, #0]
	/* duty can be a value between 0% and 100% */
	if( duty <= 100 )
 80026f0:	1dfb      	adds	r3, r7, #7
 80026f2:	781b      	ldrb	r3, [r3, #0]
 80026f4:	2b64      	cmp	r3, #100	@ 0x64
 80026f6:	d821      	bhi.n	800273c <USER_Duty_Cycle+0x58>
		return (( duty / 100.0 )*( TIM3->ARR + 1));
 80026f8:	1dfb      	adds	r3, r7, #7
 80026fa:	781b      	ldrb	r3, [r3, #0]
 80026fc:	0018      	movs	r0, r3
 80026fe:	f7fe ffeb 	bl	80016d8 <__aeabi_i2d>
 8002702:	2200      	movs	r2, #0
 8002704:	4b10      	ldr	r3, [pc, #64]	@ (8002748 <USER_Duty_Cycle+0x64>)
 8002706:	f7fd fda3 	bl	8000250 <__aeabi_ddiv>
 800270a:	0002      	movs	r2, r0
 800270c:	000b      	movs	r3, r1
 800270e:	0014      	movs	r4, r2
 8002710:	001d      	movs	r5, r3
 8002712:	4b0e      	ldr	r3, [pc, #56]	@ (800274c <USER_Duty_Cycle+0x68>)
 8002714:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002716:	3301      	adds	r3, #1
 8002718:	0018      	movs	r0, r3
 800271a:	f7ff f80b 	bl	8001734 <__aeabi_ui2d>
 800271e:	0002      	movs	r2, r0
 8002720:	000b      	movs	r3, r1
 8002722:	0020      	movs	r0, r4
 8002724:	0029      	movs	r1, r5
 8002726:	f7fe f8ab 	bl	8000880 <__aeabi_dmul>
 800272a:	0002      	movs	r2, r0
 800272c:	000b      	movs	r3, r1
 800272e:	0010      	movs	r0, r2
 8002730:	0019      	movs	r1, r3
 8002732:	f7fd fd6f 	bl	8000214 <__aeabi_d2uiz>
 8002736:	0003      	movs	r3, r0
 8002738:	b29b      	uxth	r3, r3
 800273a:	e000      	b.n	800273e <USER_Duty_Cycle+0x5a>
	else
		return 0;
 800273c:	2300      	movs	r3, #0
}
 800273e:	0018      	movs	r0, r3
 8002740:	46bd      	mov	sp, r7
 8002742:	b002      	add	sp, #8
 8002744:	bdb0      	pop	{r4, r5, r7, pc}
 8002746:	46c0      	nop			@ (mov r8, r8)
 8002748:	40590000 	.word	0x40590000
 800274c:	40000400 	.word	0x40000400

08002750 <USER_TIM17_Init>:
	/* STEP 7. Disable the Timer to stop counting */
	TIM3->CR1 &= ~( 0x1UL << 0U );
}

void USER_TIM17_Init(void)
{
 8002750:	b580      	push	{r7, lr}
 8002752:	af00      	add	r7, sp, #0
    RCC->APBENR2 |= (0x1UL << 18U);
 8002754:	4b0c      	ldr	r3, [pc, #48]	@ (8002788 <USER_TIM17_Init+0x38>)
 8002756:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002758:	4b0b      	ldr	r3, [pc, #44]	@ (8002788 <USER_TIM17_Init+0x38>)
 800275a:	2180      	movs	r1, #128	@ 0x80
 800275c:	02c9      	lsls	r1, r1, #11
 800275e:	430a      	orrs	r2, r1
 8002760:	641a      	str	r2, [r3, #64]	@ 0x40
    TIM17->CR1 = 0;
 8002762:	4b0a      	ldr	r3, [pc, #40]	@ (800278c <USER_TIM17_Init+0x3c>)
 8002764:	2200      	movs	r2, #0
 8002766:	601a      	str	r2, [r3, #0]
    TIM17->PSC = 48 - 1;
 8002768:	4b08      	ldr	r3, [pc, #32]	@ (800278c <USER_TIM17_Init+0x3c>)
 800276a:	222f      	movs	r2, #47	@ 0x2f
 800276c:	629a      	str	r2, [r3, #40]	@ 0x28
    TIM17->ARR = 0xFFFF;
 800276e:	4b07      	ldr	r3, [pc, #28]	@ (800278c <USER_TIM17_Init+0x3c>)
 8002770:	4a07      	ldr	r2, [pc, #28]	@ (8002790 <USER_TIM17_Init+0x40>)
 8002772:	62da      	str	r2, [r3, #44]	@ 0x2c
    TIM17->CR1 |= (0x1UL << 0U);
 8002774:	4b05      	ldr	r3, [pc, #20]	@ (800278c <USER_TIM17_Init+0x3c>)
 8002776:	681a      	ldr	r2, [r3, #0]
 8002778:	4b04      	ldr	r3, [pc, #16]	@ (800278c <USER_TIM17_Init+0x3c>)
 800277a:	2101      	movs	r1, #1
 800277c:	430a      	orrs	r2, r1
 800277e:	601a      	str	r2, [r3, #0]
}
 8002780:	46c0      	nop			@ (mov r8, r8)
 8002782:	46bd      	mov	sp, r7
 8002784:	bd80      	pop	{r7, pc}
 8002786:	46c0      	nop			@ (mov r8, r8)
 8002788:	40021000 	.word	0x40021000
 800278c:	40014800 	.word	0x40014800
 8002790:	0000ffff 	.word	0x0000ffff

08002794 <TIM17_Delay_ms>:

void TIM17_Delay_ms(uint16_t delay_ms)
{
 8002794:	b580      	push	{r7, lr}
 8002796:	b084      	sub	sp, #16
 8002798:	af00      	add	r7, sp, #0
 800279a:	0002      	movs	r2, r0
 800279c:	1dbb      	adds	r3, r7, #6
 800279e:	801a      	strh	r2, [r3, #0]
    uint16_t start = TIM17->CNT;
 80027a0:	4b0f      	ldr	r3, [pc, #60]	@ (80027e0 <TIM17_Delay_ms+0x4c>)
 80027a2:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80027a4:	230e      	movs	r3, #14
 80027a6:	18fb      	adds	r3, r7, r3
 80027a8:	801a      	strh	r2, [r3, #0]
    uint16_t ticks = delay_ms * 1000;  // 1 ms = 1000 ticks (a 1 MHz)
 80027aa:	230c      	movs	r3, #12
 80027ac:	18fb      	adds	r3, r7, r3
 80027ae:	1dba      	adds	r2, r7, #6
 80027b0:	8812      	ldrh	r2, [r2, #0]
 80027b2:	21fa      	movs	r1, #250	@ 0xfa
 80027b4:	0089      	lsls	r1, r1, #2
 80027b6:	434a      	muls	r2, r1
 80027b8:	801a      	strh	r2, [r3, #0]

    while ((uint16_t)(TIM17->CNT - start) < ticks);
 80027ba:	46c0      	nop			@ (mov r8, r8)
 80027bc:	4b08      	ldr	r3, [pc, #32]	@ (80027e0 <TIM17_Delay_ms+0x4c>)
 80027be:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80027c0:	b29a      	uxth	r2, r3
 80027c2:	230e      	movs	r3, #14
 80027c4:	18fb      	adds	r3, r7, r3
 80027c6:	881b      	ldrh	r3, [r3, #0]
 80027c8:	1ad3      	subs	r3, r2, r3
 80027ca:	b29b      	uxth	r3, r3
 80027cc:	220c      	movs	r2, #12
 80027ce:	18ba      	adds	r2, r7, r2
 80027d0:	8812      	ldrh	r2, [r2, #0]
 80027d2:	429a      	cmp	r2, r3
 80027d4:	d8f2      	bhi.n	80027bc <TIM17_Delay_ms+0x28>
}
 80027d6:	46c0      	nop			@ (mov r8, r8)
 80027d8:	46c0      	nop			@ (mov r8, r8)
 80027da:	46bd      	mov	sp, r7
 80027dc:	b004      	add	sp, #16
 80027de:	bd80      	pop	{r7, pc}
 80027e0:	40014800 	.word	0x40014800

080027e4 <USER_UART1_Init>:
#include <stdint.h>
#include "main.h"
#include "user_uart.h"


void USER_UART1_Init( void ){ //uart initialization function
 80027e4:	b580      	push	{r7, lr}
 80027e6:	af00      	add	r7, sp, #0
  /* STEP 0. Enable the clock peripheral for the USART1 */
	RCC->IOPENR = RCC->IOPENR  | (0x1UL << 0U);
 80027e8:	4b4f      	ldr	r3, [pc, #316]	@ (8002928 <USER_UART1_Init+0x144>)
 80027ea:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80027ec:	4b4e      	ldr	r3, [pc, #312]	@ (8002928 <USER_UART1_Init+0x144>)
 80027ee:	2101      	movs	r1, #1
 80027f0:	430a      	orrs	r2, r1
 80027f2:	635a      	str	r2, [r3, #52]	@ 0x34
	RCC->APBENR2 = RCC->APBENR2 | (0x1UL << 14U);
 80027f4:	4b4c      	ldr	r3, [pc, #304]	@ (8002928 <USER_UART1_Init+0x144>)
 80027f6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80027f8:	4b4b      	ldr	r3, [pc, #300]	@ (8002928 <USER_UART1_Init+0x144>)
 80027fa:	2180      	movs	r1, #128	@ 0x80
 80027fc:	01c9      	lsls	r1, r1, #7
 80027fe:	430a      	orrs	r2, r1
 8002800:	641a      	str	r2, [r3, #64]	@ 0x40
  /* STEP 0. Configure the TX pin (PA9) as Alternate Function Push-Pull */
	GPIOA->AFRH = GPIOA->AFRH & ~(0xEUL << 4U);
 8002802:	23a0      	movs	r3, #160	@ 0xa0
 8002804:	05db      	lsls	r3, r3, #23
 8002806:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002808:	23a0      	movs	r3, #160	@ 0xa0
 800280a:	05db      	lsls	r3, r3, #23
 800280c:	21e0      	movs	r1, #224	@ 0xe0
 800280e:	438a      	bics	r2, r1
 8002810:	625a      	str	r2, [r3, #36]	@ 0x24
	GPIOA->AFRH = GPIOA->AFRH | (0x1UL << 4U);
 8002812:	23a0      	movs	r3, #160	@ 0xa0
 8002814:	05db      	lsls	r3, r3, #23
 8002816:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002818:	23a0      	movs	r3, #160	@ 0xa0
 800281a:	05db      	lsls	r3, r3, #23
 800281c:	2110      	movs	r1, #16
 800281e:	430a      	orrs	r2, r1
 8002820:	625a      	str	r2, [r3, #36]	@ 0x24
	GPIOA->PUPDR = GPIOA->PUPDR & ~(0x3UL << 18U);
 8002822:	23a0      	movs	r3, #160	@ 0xa0
 8002824:	05db      	lsls	r3, r3, #23
 8002826:	68da      	ldr	r2, [r3, #12]
 8002828:	23a0      	movs	r3, #160	@ 0xa0
 800282a:	05db      	lsls	r3, r3, #23
 800282c:	493f      	ldr	r1, [pc, #252]	@ (800292c <USER_UART1_Init+0x148>)
 800282e:	400a      	ands	r2, r1
 8002830:	60da      	str	r2, [r3, #12]
	GPIOA->OTYPER = GPIOA->OTYPER & ~(0x1UL << 9U);
 8002832:	23a0      	movs	r3, #160	@ 0xa0
 8002834:	05db      	lsls	r3, r3, #23
 8002836:	685a      	ldr	r2, [r3, #4]
 8002838:	23a0      	movs	r3, #160	@ 0xa0
 800283a:	05db      	lsls	r3, r3, #23
 800283c:	493c      	ldr	r1, [pc, #240]	@ (8002930 <USER_UART1_Init+0x14c>)
 800283e:	400a      	ands	r2, r1
 8002840:	605a      	str	r2, [r3, #4]
	GPIOA->MODER = GPIOA->MODER & ~(0x1UL << 18U);
 8002842:	23a0      	movs	r3, #160	@ 0xa0
 8002844:	05db      	lsls	r3, r3, #23
 8002846:	681a      	ldr	r2, [r3, #0]
 8002848:	23a0      	movs	r3, #160	@ 0xa0
 800284a:	05db      	lsls	r3, r3, #23
 800284c:	4939      	ldr	r1, [pc, #228]	@ (8002934 <USER_UART1_Init+0x150>)
 800284e:	400a      	ands	r2, r1
 8002850:	601a      	str	r2, [r3, #0]
	GPIOA->MODER = GPIOA->MODER | (0x2UL << 18U);
 8002852:	23a0      	movs	r3, #160	@ 0xa0
 8002854:	05db      	lsls	r3, r3, #23
 8002856:	681a      	ldr	r2, [r3, #0]
 8002858:	23a0      	movs	r3, #160	@ 0xa0
 800285a:	05db      	lsls	r3, r3, #23
 800285c:	2180      	movs	r1, #128	@ 0x80
 800285e:	0309      	lsls	r1, r1, #12
 8002860:	430a      	orrs	r2, r1
 8002862:	601a      	str	r2, [r3, #0]

  /* STEP 0.1 Configure the Rx pin (PA10) as Alternate Function Push-Pull */
	//MODE 10 OTYPE 0 PUPDR 00 Set as alternate function
	GPIOA->AFRH = GPIOA->AFRH & ~(0xEUL << 8U);
 8002864:	23a0      	movs	r3, #160	@ 0xa0
 8002866:	05db      	lsls	r3, r3, #23
 8002868:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800286a:	23a0      	movs	r3, #160	@ 0xa0
 800286c:	05db      	lsls	r3, r3, #23
 800286e:	4932      	ldr	r1, [pc, #200]	@ (8002938 <USER_UART1_Init+0x154>)
 8002870:	400a      	ands	r2, r1
 8002872:	625a      	str	r2, [r3, #36]	@ 0x24
	GPIOA->AFRH = GPIOA->AFRH | (0x1UL << 8U);
 8002874:	23a0      	movs	r3, #160	@ 0xa0
 8002876:	05db      	lsls	r3, r3, #23
 8002878:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800287a:	23a0      	movs	r3, #160	@ 0xa0
 800287c:	05db      	lsls	r3, r3, #23
 800287e:	2180      	movs	r1, #128	@ 0x80
 8002880:	0049      	lsls	r1, r1, #1
 8002882:	430a      	orrs	r2, r1
 8002884:	625a      	str	r2, [r3, #36]	@ 0x24
	GPIOA->PUPDR = GPIOA->PUPDR & ~(0x3UL << 20U);
 8002886:	23a0      	movs	r3, #160	@ 0xa0
 8002888:	05db      	lsls	r3, r3, #23
 800288a:	68da      	ldr	r2, [r3, #12]
 800288c:	23a0      	movs	r3, #160	@ 0xa0
 800288e:	05db      	lsls	r3, r3, #23
 8002890:	492a      	ldr	r1, [pc, #168]	@ (800293c <USER_UART1_Init+0x158>)
 8002892:	400a      	ands	r2, r1
 8002894:	60da      	str	r2, [r3, #12]
	GPIOA->OTYPER = GPIOA->OTYPER & ~(0x1UL << 10U);
 8002896:	23a0      	movs	r3, #160	@ 0xa0
 8002898:	05db      	lsls	r3, r3, #23
 800289a:	685a      	ldr	r2, [r3, #4]
 800289c:	23a0      	movs	r3, #160	@ 0xa0
 800289e:	05db      	lsls	r3, r3, #23
 80028a0:	4927      	ldr	r1, [pc, #156]	@ (8002940 <USER_UART1_Init+0x15c>)
 80028a2:	400a      	ands	r2, r1
 80028a4:	605a      	str	r2, [r3, #4]
	GPIOA->MODER = GPIOA->MODER & ~(0x1UL << 20U);
 80028a6:	23a0      	movs	r3, #160	@ 0xa0
 80028a8:	05db      	lsls	r3, r3, #23
 80028aa:	681a      	ldr	r2, [r3, #0]
 80028ac:	23a0      	movs	r3, #160	@ 0xa0
 80028ae:	05db      	lsls	r3, r3, #23
 80028b0:	4924      	ldr	r1, [pc, #144]	@ (8002944 <USER_UART1_Init+0x160>)
 80028b2:	400a      	ands	r2, r1
 80028b4:	601a      	str	r2, [r3, #0]
	GPIOA->MODER = GPIOA->MODER | (0x2UL << 20U);
 80028b6:	23a0      	movs	r3, #160	@ 0xa0
 80028b8:	05db      	lsls	r3, r3, #23
 80028ba:	681a      	ldr	r2, [r3, #0]
 80028bc:	23a0      	movs	r3, #160	@ 0xa0
 80028be:	05db      	lsls	r3, r3, #23
 80028c0:	2180      	movs	r1, #128	@ 0x80
 80028c2:	0389      	lsls	r1, r1, #14
 80028c4:	430a      	orrs	r2, r1
 80028c6:	601a      	str	r2, [r3, #0]



  /* STEP 1. Program the M bits in USART_CR1 to define the word length (8 bits) */
	USART1->CR1 = USART1->CR1 & ~(0x1UL << 28U);
 80028c8:	4b1f      	ldr	r3, [pc, #124]	@ (8002948 <USER_UART1_Init+0x164>)
 80028ca:	681a      	ldr	r2, [r3, #0]
 80028cc:	4b1e      	ldr	r3, [pc, #120]	@ (8002948 <USER_UART1_Init+0x164>)
 80028ce:	491f      	ldr	r1, [pc, #124]	@ (800294c <USER_UART1_Init+0x168>)
 80028d0:	400a      	ands	r2, r1
 80028d2:	601a      	str	r2, [r3, #0]
	USART1->CR1 = USART1->CR1 & ~(0x1UL << 12U);
 80028d4:	4b1c      	ldr	r3, [pc, #112]	@ (8002948 <USER_UART1_Init+0x164>)
 80028d6:	681a      	ldr	r2, [r3, #0]
 80028d8:	4b1b      	ldr	r3, [pc, #108]	@ (8002948 <USER_UART1_Init+0x164>)
 80028da:	491d      	ldr	r1, [pc, #116]	@ (8002950 <USER_UART1_Init+0x16c>)
 80028dc:	400a      	ands	r2, r1
 80028de:	601a      	str	r2, [r3, #0]
  /* STEP 2. Select the desired baud rate using the USART_BRR register */
	USART1->BRR = 5000;
 80028e0:	4b19      	ldr	r3, [pc, #100]	@ (8002948 <USER_UART1_Init+0x164>)
 80028e2:	4a1c      	ldr	r2, [pc, #112]	@ (8002954 <USER_UART1_Init+0x170>)
 80028e4:	60da      	str	r2, [r3, #12]
  /* STEP 3. Program the number of STOP bits in USART_CR2 (1 stop bit) */
	USART1->CR2 = USART1->CR2 & ~(0x3UL << 12U);
 80028e6:	4b18      	ldr	r3, [pc, #96]	@ (8002948 <USER_UART1_Init+0x164>)
 80028e8:	685a      	ldr	r2, [r3, #4]
 80028ea:	4b17      	ldr	r3, [pc, #92]	@ (8002948 <USER_UART1_Init+0x164>)
 80028ec:	491a      	ldr	r1, [pc, #104]	@ (8002958 <USER_UART1_Init+0x174>)
 80028ee:	400a      	ands	r2, r1
 80028f0:	605a      	str	r2, [r3, #4]

  /* STEP 4. Enable the USART by writting the UE bit in USART_CR1 register */
	USART1->CR1 = USART1->CR1 | (0x1UL << 0U);
 80028f2:	4b15      	ldr	r3, [pc, #84]	@ (8002948 <USER_UART1_Init+0x164>)
 80028f4:	681a      	ldr	r2, [r3, #0]
 80028f6:	4b14      	ldr	r3, [pc, #80]	@ (8002948 <USER_UART1_Init+0x164>)
 80028f8:	2101      	movs	r1, #1
 80028fa:	430a      	orrs	r2, r1
 80028fc:	601a      	str	r2, [r3, #0]


  /* STEP 6. Set the TE bit in USART_CR1 to send and idle frame as first transmission */
	USART1->CR1 = USART1->CR1 | (0x1UL << 3U);
 80028fe:	4b12      	ldr	r3, [pc, #72]	@ (8002948 <USER_UART1_Init+0x164>)
 8002900:	681a      	ldr	r2, [r3, #0]
 8002902:	4b11      	ldr	r3, [pc, #68]	@ (8002948 <USER_UART1_Init+0x164>)
 8002904:	2108      	movs	r1, #8
 8002906:	430a      	orrs	r2, r1
 8002908:	601a      	str	r2, [r3, #0]

	/* STEP 7 Set the RE bit in USART_CR1 to receive */
	USART1->CR1 = USART1->CR1 | (0x1UL << 2U);
 800290a:	4b0f      	ldr	r3, [pc, #60]	@ (8002948 <USER_UART1_Init+0x164>)
 800290c:	681a      	ldr	r2, [r3, #0]
 800290e:	4b0e      	ldr	r3, [pc, #56]	@ (8002948 <USER_UART1_Init+0x164>)
 8002910:	2104      	movs	r1, #4
 8002912:	430a      	orrs	r2, r1
 8002914:	601a      	str	r2, [r3, #0]

	USART1->CR1 = USART1->CR1 | (0x1UL << 5U);
 8002916:	4b0c      	ldr	r3, [pc, #48]	@ (8002948 <USER_UART1_Init+0x164>)
 8002918:	681a      	ldr	r2, [r3, #0]
 800291a:	4b0b      	ldr	r3, [pc, #44]	@ (8002948 <USER_UART1_Init+0x164>)
 800291c:	2120      	movs	r1, #32
 800291e:	430a      	orrs	r2, r1
 8002920:	601a      	str	r2, [r3, #0]


}
 8002922:	46c0      	nop			@ (mov r8, r8)
 8002924:	46bd      	mov	sp, r7
 8002926:	bd80      	pop	{r7, pc}
 8002928:	40021000 	.word	0x40021000
 800292c:	fff3ffff 	.word	0xfff3ffff
 8002930:	fffffdff 	.word	0xfffffdff
 8002934:	fffbffff 	.word	0xfffbffff
 8002938:	fffff1ff 	.word	0xfffff1ff
 800293c:	ffcfffff 	.word	0xffcfffff
 8002940:	fffffbff 	.word	0xfffffbff
 8002944:	ffefffff 	.word	0xffefffff
 8002948:	40013800 	.word	0x40013800
 800294c:	efffffff 	.word	0xefffffff
 8002950:	ffffefff 	.word	0xffffefff
 8002954:	00001388 	.word	0x00001388
 8002958:	ffffcfff 	.word	0xffffcfff

0800295c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800295c:	480d      	ldr	r0, [pc, #52]	@ (8002994 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800295e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8002960:	e000      	b.n	8002964 <Reset_Handler+0x8>
 8002962:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002964:	480c      	ldr	r0, [pc, #48]	@ (8002998 <LoopForever+0x6>)
  ldr r1, =_edata
 8002966:	490d      	ldr	r1, [pc, #52]	@ (800299c <LoopForever+0xa>)
  ldr r2, =_sidata
 8002968:	4a0d      	ldr	r2, [pc, #52]	@ (80029a0 <LoopForever+0xe>)
  movs r3, #0
 800296a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800296c:	e002      	b.n	8002974 <LoopCopyDataInit>

0800296e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800296e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002970:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002972:	3304      	adds	r3, #4

08002974 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002974:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002976:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002978:	d3f9      	bcc.n	800296e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800297a:	4a0a      	ldr	r2, [pc, #40]	@ (80029a4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800297c:	4c0a      	ldr	r4, [pc, #40]	@ (80029a8 <LoopForever+0x16>)
  movs r3, #0
 800297e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002980:	e001      	b.n	8002986 <LoopFillZerobss>

08002982 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002982:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002984:	3204      	adds	r2, #4

08002986 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002986:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002988:	d3fb      	bcc.n	8002982 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800298a:	f000 f8bb 	bl	8002b04 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800298e:	f7ff fc79 	bl	8002284 <main>

08002992 <LoopForever>:

LoopForever:
  b LoopForever
 8002992:	e7fe      	b.n	8002992 <LoopForever>
  ldr   r0, =_estack
 8002994:	20003000 	.word	0x20003000
  ldr r0, =_sdata
 8002998:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800299c:	20000050 	.word	0x20000050
  ldr r2, =_sidata
 80029a0:	08002cf0 	.word	0x08002cf0
  ldr r2, =_sbss
 80029a4:	20000050 	.word	0x20000050
  ldr r4, =_ebss
 80029a8:	200001cc 	.word	0x200001cc

080029ac <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80029ac:	e7fe      	b.n	80029ac <ADC_IRQHandler>

080029ae <atoi>:
 80029ae:	b510      	push	{r4, lr}
 80029b0:	220a      	movs	r2, #10
 80029b2:	2100      	movs	r1, #0
 80029b4:	f000 f88c 	bl	8002ad0 <strtol>
 80029b8:	bd10      	pop	{r4, pc}
	...

080029bc <_strtol_l.isra.0>:
 80029bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80029be:	b085      	sub	sp, #20
 80029c0:	0017      	movs	r7, r2
 80029c2:	001e      	movs	r6, r3
 80029c4:	9003      	str	r0, [sp, #12]
 80029c6:	9101      	str	r1, [sp, #4]
 80029c8:	2b24      	cmp	r3, #36	@ 0x24
 80029ca:	d823      	bhi.n	8002a14 <_strtol_l.isra.0+0x58>
 80029cc:	000c      	movs	r4, r1
 80029ce:	2b01      	cmp	r3, #1
 80029d0:	d020      	beq.n	8002a14 <_strtol_l.isra.0+0x58>
 80029d2:	4b3d      	ldr	r3, [pc, #244]	@ (8002ac8 <_strtol_l.isra.0+0x10c>)
 80029d4:	2208      	movs	r2, #8
 80029d6:	469c      	mov	ip, r3
 80029d8:	0023      	movs	r3, r4
 80029da:	4661      	mov	r1, ip
 80029dc:	781d      	ldrb	r5, [r3, #0]
 80029de:	3401      	adds	r4, #1
 80029e0:	5d48      	ldrb	r0, [r1, r5]
 80029e2:	0001      	movs	r1, r0
 80029e4:	4011      	ands	r1, r2
 80029e6:	4210      	tst	r0, r2
 80029e8:	d1f6      	bne.n	80029d8 <_strtol_l.isra.0+0x1c>
 80029ea:	2d2d      	cmp	r5, #45	@ 0x2d
 80029ec:	d119      	bne.n	8002a22 <_strtol_l.isra.0+0x66>
 80029ee:	7825      	ldrb	r5, [r4, #0]
 80029f0:	1c9c      	adds	r4, r3, #2
 80029f2:	2301      	movs	r3, #1
 80029f4:	9300      	str	r3, [sp, #0]
 80029f6:	2210      	movs	r2, #16
 80029f8:	0033      	movs	r3, r6
 80029fa:	4393      	bics	r3, r2
 80029fc:	d11d      	bne.n	8002a3a <_strtol_l.isra.0+0x7e>
 80029fe:	2d30      	cmp	r5, #48	@ 0x30
 8002a00:	d115      	bne.n	8002a2e <_strtol_l.isra.0+0x72>
 8002a02:	2120      	movs	r1, #32
 8002a04:	7823      	ldrb	r3, [r4, #0]
 8002a06:	438b      	bics	r3, r1
 8002a08:	2b58      	cmp	r3, #88	@ 0x58
 8002a0a:	d110      	bne.n	8002a2e <_strtol_l.isra.0+0x72>
 8002a0c:	7865      	ldrb	r5, [r4, #1]
 8002a0e:	3402      	adds	r4, #2
 8002a10:	2610      	movs	r6, #16
 8002a12:	e012      	b.n	8002a3a <_strtol_l.isra.0+0x7e>
 8002a14:	f000 f870 	bl	8002af8 <__errno>
 8002a18:	2316      	movs	r3, #22
 8002a1a:	6003      	str	r3, [r0, #0]
 8002a1c:	2000      	movs	r0, #0
 8002a1e:	b005      	add	sp, #20
 8002a20:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002a22:	9100      	str	r1, [sp, #0]
 8002a24:	2d2b      	cmp	r5, #43	@ 0x2b
 8002a26:	d1e6      	bne.n	80029f6 <_strtol_l.isra.0+0x3a>
 8002a28:	7825      	ldrb	r5, [r4, #0]
 8002a2a:	1c9c      	adds	r4, r3, #2
 8002a2c:	e7e3      	b.n	80029f6 <_strtol_l.isra.0+0x3a>
 8002a2e:	2e00      	cmp	r6, #0
 8002a30:	d1ee      	bne.n	8002a10 <_strtol_l.isra.0+0x54>
 8002a32:	360a      	adds	r6, #10
 8002a34:	2d30      	cmp	r5, #48	@ 0x30
 8002a36:	d100      	bne.n	8002a3a <_strtol_l.isra.0+0x7e>
 8002a38:	3e02      	subs	r6, #2
 8002a3a:	4a24      	ldr	r2, [pc, #144]	@ (8002acc <_strtol_l.isra.0+0x110>)
 8002a3c:	9b00      	ldr	r3, [sp, #0]
 8002a3e:	4694      	mov	ip, r2
 8002a40:	4463      	add	r3, ip
 8002a42:	0031      	movs	r1, r6
 8002a44:	0018      	movs	r0, r3
 8002a46:	9302      	str	r3, [sp, #8]
 8002a48:	f7fd fbde 	bl	8000208 <__aeabi_uidivmod>
 8002a4c:	2200      	movs	r2, #0
 8002a4e:	4684      	mov	ip, r0
 8002a50:	0010      	movs	r0, r2
 8002a52:	002b      	movs	r3, r5
 8002a54:	3b30      	subs	r3, #48	@ 0x30
 8002a56:	2b09      	cmp	r3, #9
 8002a58:	d811      	bhi.n	8002a7e <_strtol_l.isra.0+0xc2>
 8002a5a:	001d      	movs	r5, r3
 8002a5c:	42ae      	cmp	r6, r5
 8002a5e:	dd1d      	ble.n	8002a9c <_strtol_l.isra.0+0xe0>
 8002a60:	1c53      	adds	r3, r2, #1
 8002a62:	d009      	beq.n	8002a78 <_strtol_l.isra.0+0xbc>
 8002a64:	2201      	movs	r2, #1
 8002a66:	4252      	negs	r2, r2
 8002a68:	4584      	cmp	ip, r0
 8002a6a:	d305      	bcc.n	8002a78 <_strtol_l.isra.0+0xbc>
 8002a6c:	d101      	bne.n	8002a72 <_strtol_l.isra.0+0xb6>
 8002a6e:	42a9      	cmp	r1, r5
 8002a70:	db11      	blt.n	8002a96 <_strtol_l.isra.0+0xda>
 8002a72:	2201      	movs	r2, #1
 8002a74:	4370      	muls	r0, r6
 8002a76:	1828      	adds	r0, r5, r0
 8002a78:	7825      	ldrb	r5, [r4, #0]
 8002a7a:	3401      	adds	r4, #1
 8002a7c:	e7e9      	b.n	8002a52 <_strtol_l.isra.0+0x96>
 8002a7e:	002b      	movs	r3, r5
 8002a80:	3b41      	subs	r3, #65	@ 0x41
 8002a82:	2b19      	cmp	r3, #25
 8002a84:	d801      	bhi.n	8002a8a <_strtol_l.isra.0+0xce>
 8002a86:	3d37      	subs	r5, #55	@ 0x37
 8002a88:	e7e8      	b.n	8002a5c <_strtol_l.isra.0+0xa0>
 8002a8a:	002b      	movs	r3, r5
 8002a8c:	3b61      	subs	r3, #97	@ 0x61
 8002a8e:	2b19      	cmp	r3, #25
 8002a90:	d804      	bhi.n	8002a9c <_strtol_l.isra.0+0xe0>
 8002a92:	3d57      	subs	r5, #87	@ 0x57
 8002a94:	e7e2      	b.n	8002a5c <_strtol_l.isra.0+0xa0>
 8002a96:	2201      	movs	r2, #1
 8002a98:	4252      	negs	r2, r2
 8002a9a:	e7ed      	b.n	8002a78 <_strtol_l.isra.0+0xbc>
 8002a9c:	1c53      	adds	r3, r2, #1
 8002a9e:	d108      	bne.n	8002ab2 <_strtol_l.isra.0+0xf6>
 8002aa0:	2322      	movs	r3, #34	@ 0x22
 8002aa2:	9a03      	ldr	r2, [sp, #12]
 8002aa4:	9802      	ldr	r0, [sp, #8]
 8002aa6:	6013      	str	r3, [r2, #0]
 8002aa8:	2f00      	cmp	r7, #0
 8002aaa:	d0b8      	beq.n	8002a1e <_strtol_l.isra.0+0x62>
 8002aac:	1e63      	subs	r3, r4, #1
 8002aae:	9301      	str	r3, [sp, #4]
 8002ab0:	e007      	b.n	8002ac2 <_strtol_l.isra.0+0x106>
 8002ab2:	9b00      	ldr	r3, [sp, #0]
 8002ab4:	2b00      	cmp	r3, #0
 8002ab6:	d000      	beq.n	8002aba <_strtol_l.isra.0+0xfe>
 8002ab8:	4240      	negs	r0, r0
 8002aba:	2f00      	cmp	r7, #0
 8002abc:	d0af      	beq.n	8002a1e <_strtol_l.isra.0+0x62>
 8002abe:	2a00      	cmp	r2, #0
 8002ac0:	d1f4      	bne.n	8002aac <_strtol_l.isra.0+0xf0>
 8002ac2:	9b01      	ldr	r3, [sp, #4]
 8002ac4:	603b      	str	r3, [r7, #0]
 8002ac6:	e7aa      	b.n	8002a1e <_strtol_l.isra.0+0x62>
 8002ac8:	08002be5 	.word	0x08002be5
 8002acc:	7fffffff 	.word	0x7fffffff

08002ad0 <strtol>:
 8002ad0:	b510      	push	{r4, lr}
 8002ad2:	4c04      	ldr	r4, [pc, #16]	@ (8002ae4 <strtol+0x14>)
 8002ad4:	0013      	movs	r3, r2
 8002ad6:	000a      	movs	r2, r1
 8002ad8:	0001      	movs	r1, r0
 8002ada:	6820      	ldr	r0, [r4, #0]
 8002adc:	f7ff ff6e 	bl	80029bc <_strtol_l.isra.0>
 8002ae0:	bd10      	pop	{r4, pc}
 8002ae2:	46c0      	nop			@ (mov r8, r8)
 8002ae4:	20000000 	.word	0x20000000

08002ae8 <memset>:
 8002ae8:	0003      	movs	r3, r0
 8002aea:	1882      	adds	r2, r0, r2
 8002aec:	4293      	cmp	r3, r2
 8002aee:	d100      	bne.n	8002af2 <memset+0xa>
 8002af0:	4770      	bx	lr
 8002af2:	7019      	strb	r1, [r3, #0]
 8002af4:	3301      	adds	r3, #1
 8002af6:	e7f9      	b.n	8002aec <memset+0x4>

08002af8 <__errno>:
 8002af8:	4b01      	ldr	r3, [pc, #4]	@ (8002b00 <__errno+0x8>)
 8002afa:	6818      	ldr	r0, [r3, #0]
 8002afc:	4770      	bx	lr
 8002afe:	46c0      	nop			@ (mov r8, r8)
 8002b00:	20000000 	.word	0x20000000

08002b04 <__libc_init_array>:
 8002b04:	b570      	push	{r4, r5, r6, lr}
 8002b06:	2600      	movs	r6, #0
 8002b08:	4c0c      	ldr	r4, [pc, #48]	@ (8002b3c <__libc_init_array+0x38>)
 8002b0a:	4d0d      	ldr	r5, [pc, #52]	@ (8002b40 <__libc_init_array+0x3c>)
 8002b0c:	1b64      	subs	r4, r4, r5
 8002b0e:	10a4      	asrs	r4, r4, #2
 8002b10:	42a6      	cmp	r6, r4
 8002b12:	d109      	bne.n	8002b28 <__libc_init_array+0x24>
 8002b14:	2600      	movs	r6, #0
 8002b16:	f000 f819 	bl	8002b4c <_init>
 8002b1a:	4c0a      	ldr	r4, [pc, #40]	@ (8002b44 <__libc_init_array+0x40>)
 8002b1c:	4d0a      	ldr	r5, [pc, #40]	@ (8002b48 <__libc_init_array+0x44>)
 8002b1e:	1b64      	subs	r4, r4, r5
 8002b20:	10a4      	asrs	r4, r4, #2
 8002b22:	42a6      	cmp	r6, r4
 8002b24:	d105      	bne.n	8002b32 <__libc_init_array+0x2e>
 8002b26:	bd70      	pop	{r4, r5, r6, pc}
 8002b28:	00b3      	lsls	r3, r6, #2
 8002b2a:	58eb      	ldr	r3, [r5, r3]
 8002b2c:	4798      	blx	r3
 8002b2e:	3601      	adds	r6, #1
 8002b30:	e7ee      	b.n	8002b10 <__libc_init_array+0xc>
 8002b32:	00b3      	lsls	r3, r6, #2
 8002b34:	58eb      	ldr	r3, [r5, r3]
 8002b36:	4798      	blx	r3
 8002b38:	3601      	adds	r6, #1
 8002b3a:	e7f2      	b.n	8002b22 <__libc_init_array+0x1e>
 8002b3c:	08002ce8 	.word	0x08002ce8
 8002b40:	08002ce8 	.word	0x08002ce8
 8002b44:	08002cec 	.word	0x08002cec
 8002b48:	08002ce8 	.word	0x08002ce8

08002b4c <_init>:
 8002b4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002b4e:	46c0      	nop			@ (mov r8, r8)
 8002b50:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002b52:	bc08      	pop	{r3}
 8002b54:	469e      	mov	lr, r3
 8002b56:	4770      	bx	lr

08002b58 <_fini>:
 8002b58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002b5a:	46c0      	nop			@ (mov r8, r8)
 8002b5c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002b5e:	bc08      	pop	{r3}
 8002b60:	469e      	mov	lr, r3
 8002b62:	4770      	bx	lr
