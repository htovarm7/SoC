
Entrega2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000b4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003a48  080000b4  080000b4  000010b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001e8  08003afc  08003afc  00004afc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003ce4  08003ce4  0000505c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08003ce4  08003ce4  0000505c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08003ce4  08003ce4  0000505c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003ce4  08003ce4  00004ce4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08003ce8  08003ce8  00004ce8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08003cec  00005000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000198  2000005c  08003d48  0000505c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001f4  08003d48  000051f4  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0000505c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000022e3  00000000  00000000  00005084  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000ad3  00000000  00000000  00007367  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000278  00000000  00000000  00007e40  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000001cf  00000000  00000000  000080b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000032dc  00000000  00000000  00008287  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00003927  00000000  00000000  0000b563  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000a310  00000000  00000000  0000ee8a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0001919a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000010e4  00000000  00000000  000191e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000054  00000000  00000000  0001a2c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000b4 <__do_global_dtors_aux>:
 80000b4:	b510      	push	{r4, lr}
 80000b6:	4c06      	ldr	r4, [pc, #24]	@ (80000d0 <__do_global_dtors_aux+0x1c>)
 80000b8:	7823      	ldrb	r3, [r4, #0]
 80000ba:	2b00      	cmp	r3, #0
 80000bc:	d107      	bne.n	80000ce <__do_global_dtors_aux+0x1a>
 80000be:	4b05      	ldr	r3, [pc, #20]	@ (80000d4 <__do_global_dtors_aux+0x20>)
 80000c0:	2b00      	cmp	r3, #0
 80000c2:	d002      	beq.n	80000ca <__do_global_dtors_aux+0x16>
 80000c4:	4804      	ldr	r0, [pc, #16]	@ (80000d8 <__do_global_dtors_aux+0x24>)
 80000c6:	e000      	b.n	80000ca <__do_global_dtors_aux+0x16>
 80000c8:	bf00      	nop
 80000ca:	2301      	movs	r3, #1
 80000cc:	7023      	strb	r3, [r4, #0]
 80000ce:	bd10      	pop	{r4, pc}
 80000d0:	2000005c 	.word	0x2000005c
 80000d4:	00000000 	.word	0x00000000
 80000d8:	08003ae4 	.word	0x08003ae4

080000dc <frame_dummy>:
 80000dc:	4b04      	ldr	r3, [pc, #16]	@ (80000f0 <frame_dummy+0x14>)
 80000de:	b510      	push	{r4, lr}
 80000e0:	2b00      	cmp	r3, #0
 80000e2:	d003      	beq.n	80000ec <frame_dummy+0x10>
 80000e4:	4903      	ldr	r1, [pc, #12]	@ (80000f4 <frame_dummy+0x18>)
 80000e6:	4804      	ldr	r0, [pc, #16]	@ (80000f8 <frame_dummy+0x1c>)
 80000e8:	e000      	b.n	80000ec <frame_dummy+0x10>
 80000ea:	bf00      	nop
 80000ec:	bd10      	pop	{r4, pc}
 80000ee:	46c0      	nop			@ (mov r8, r8)
 80000f0:	00000000 	.word	0x00000000
 80000f4:	20000060 	.word	0x20000060
 80000f8:	08003ae4 	.word	0x08003ae4

080000fc <__gnu_thumb1_case_shi>:
 80000fc:	b403      	push	{r0, r1}
 80000fe:	4671      	mov	r1, lr
 8000100:	0849      	lsrs	r1, r1, #1
 8000102:	0040      	lsls	r0, r0, #1
 8000104:	0049      	lsls	r1, r1, #1
 8000106:	5e09      	ldrsh	r1, [r1, r0]
 8000108:	0049      	lsls	r1, r1, #1
 800010a:	448e      	add	lr, r1
 800010c:	bc03      	pop	{r0, r1}
 800010e:	4770      	bx	lr

08000110 <__udivsi3>:
 8000110:	2200      	movs	r2, #0
 8000112:	0843      	lsrs	r3, r0, #1
 8000114:	428b      	cmp	r3, r1
 8000116:	d374      	bcc.n	8000202 <__udivsi3+0xf2>
 8000118:	0903      	lsrs	r3, r0, #4
 800011a:	428b      	cmp	r3, r1
 800011c:	d35f      	bcc.n	80001de <__udivsi3+0xce>
 800011e:	0a03      	lsrs	r3, r0, #8
 8000120:	428b      	cmp	r3, r1
 8000122:	d344      	bcc.n	80001ae <__udivsi3+0x9e>
 8000124:	0b03      	lsrs	r3, r0, #12
 8000126:	428b      	cmp	r3, r1
 8000128:	d328      	bcc.n	800017c <__udivsi3+0x6c>
 800012a:	0c03      	lsrs	r3, r0, #16
 800012c:	428b      	cmp	r3, r1
 800012e:	d30d      	bcc.n	800014c <__udivsi3+0x3c>
 8000130:	22ff      	movs	r2, #255	@ 0xff
 8000132:	0209      	lsls	r1, r1, #8
 8000134:	ba12      	rev	r2, r2
 8000136:	0c03      	lsrs	r3, r0, #16
 8000138:	428b      	cmp	r3, r1
 800013a:	d302      	bcc.n	8000142 <__udivsi3+0x32>
 800013c:	1212      	asrs	r2, r2, #8
 800013e:	0209      	lsls	r1, r1, #8
 8000140:	d065      	beq.n	800020e <__udivsi3+0xfe>
 8000142:	0b03      	lsrs	r3, r0, #12
 8000144:	428b      	cmp	r3, r1
 8000146:	d319      	bcc.n	800017c <__udivsi3+0x6c>
 8000148:	e000      	b.n	800014c <__udivsi3+0x3c>
 800014a:	0a09      	lsrs	r1, r1, #8
 800014c:	0bc3      	lsrs	r3, r0, #15
 800014e:	428b      	cmp	r3, r1
 8000150:	d301      	bcc.n	8000156 <__udivsi3+0x46>
 8000152:	03cb      	lsls	r3, r1, #15
 8000154:	1ac0      	subs	r0, r0, r3
 8000156:	4152      	adcs	r2, r2
 8000158:	0b83      	lsrs	r3, r0, #14
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x52>
 800015e:	038b      	lsls	r3, r1, #14
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b43      	lsrs	r3, r0, #13
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x5e>
 800016a:	034b      	lsls	r3, r1, #13
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b03      	lsrs	r3, r0, #12
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x6a>
 8000176:	030b      	lsls	r3, r1, #12
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0ac3      	lsrs	r3, r0, #11
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x76>
 8000182:	02cb      	lsls	r3, r1, #11
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0a83      	lsrs	r3, r0, #10
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x82>
 800018e:	028b      	lsls	r3, r1, #10
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a43      	lsrs	r3, r0, #9
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x8e>
 800019a:	024b      	lsls	r3, r1, #9
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a03      	lsrs	r3, r0, #8
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x9a>
 80001a6:	020b      	lsls	r3, r1, #8
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	d2cd      	bcs.n	800014a <__udivsi3+0x3a>
 80001ae:	09c3      	lsrs	r3, r0, #7
 80001b0:	428b      	cmp	r3, r1
 80001b2:	d301      	bcc.n	80001b8 <__udivsi3+0xa8>
 80001b4:	01cb      	lsls	r3, r1, #7
 80001b6:	1ac0      	subs	r0, r0, r3
 80001b8:	4152      	adcs	r2, r2
 80001ba:	0983      	lsrs	r3, r0, #6
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xb4>
 80001c0:	018b      	lsls	r3, r1, #6
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0943      	lsrs	r3, r0, #5
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xc0>
 80001cc:	014b      	lsls	r3, r1, #5
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0903      	lsrs	r3, r0, #4
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xcc>
 80001d8:	010b      	lsls	r3, r1, #4
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	08c3      	lsrs	r3, r0, #3
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xd8>
 80001e4:	00cb      	lsls	r3, r1, #3
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0883      	lsrs	r3, r0, #2
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xe4>
 80001f0:	008b      	lsls	r3, r1, #2
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0843      	lsrs	r3, r0, #1
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xf0>
 80001fc:	004b      	lsls	r3, r1, #1
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	1a41      	subs	r1, r0, r1
 8000204:	d200      	bcs.n	8000208 <__udivsi3+0xf8>
 8000206:	4601      	mov	r1, r0
 8000208:	4152      	adcs	r2, r2
 800020a:	4610      	mov	r0, r2
 800020c:	4770      	bx	lr
 800020e:	e7ff      	b.n	8000210 <__udivsi3+0x100>
 8000210:	b501      	push	{r0, lr}
 8000212:	2000      	movs	r0, #0
 8000214:	f000 f806 	bl	8000224 <__aeabi_idiv0>
 8000218:	bd02      	pop	{r1, pc}
 800021a:	46c0      	nop			@ (mov r8, r8)

0800021c <__aeabi_uidivmod>:
 800021c:	2900      	cmp	r1, #0
 800021e:	d0f7      	beq.n	8000210 <__udivsi3+0x100>
 8000220:	e776      	b.n	8000110 <__udivsi3>
 8000222:	4770      	bx	lr

08000224 <__aeabi_idiv0>:
 8000224:	4770      	bx	lr
 8000226:	46c0      	nop			@ (mov r8, r8)

08000228 <__aeabi_d2uiz>:
 8000228:	b570      	push	{r4, r5, r6, lr}
 800022a:	2200      	movs	r2, #0
 800022c:	4b0c      	ldr	r3, [pc, #48]	@ (8000260 <__aeabi_d2uiz+0x38>)
 800022e:	0004      	movs	r4, r0
 8000230:	000d      	movs	r5, r1
 8000232:	f001 fae1 	bl	80017f8 <__aeabi_dcmpge>
 8000236:	2800      	cmp	r0, #0
 8000238:	d104      	bne.n	8000244 <__aeabi_d2uiz+0x1c>
 800023a:	0020      	movs	r0, r4
 800023c:	0029      	movs	r1, r5
 800023e:	f001 fa19 	bl	8001674 <__aeabi_d2iz>
 8000242:	bd70      	pop	{r4, r5, r6, pc}
 8000244:	4b06      	ldr	r3, [pc, #24]	@ (8000260 <__aeabi_d2uiz+0x38>)
 8000246:	2200      	movs	r2, #0
 8000248:	0020      	movs	r0, r4
 800024a:	0029      	movs	r1, r5
 800024c:	f000 fe08 	bl	8000e60 <__aeabi_dsub>
 8000250:	f001 fa10 	bl	8001674 <__aeabi_d2iz>
 8000254:	2380      	movs	r3, #128	@ 0x80
 8000256:	061b      	lsls	r3, r3, #24
 8000258:	469c      	mov	ip, r3
 800025a:	4460      	add	r0, ip
 800025c:	e7f1      	b.n	8000242 <__aeabi_d2uiz+0x1a>
 800025e:	46c0      	nop			@ (mov r8, r8)
 8000260:	41e00000 	.word	0x41e00000

08000264 <__aeabi_ddiv>:
 8000264:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000266:	46de      	mov	lr, fp
 8000268:	4645      	mov	r5, r8
 800026a:	4657      	mov	r7, sl
 800026c:	464e      	mov	r6, r9
 800026e:	b5e0      	push	{r5, r6, r7, lr}
 8000270:	b087      	sub	sp, #28
 8000272:	9200      	str	r2, [sp, #0]
 8000274:	9301      	str	r3, [sp, #4]
 8000276:	030b      	lsls	r3, r1, #12
 8000278:	0b1b      	lsrs	r3, r3, #12
 800027a:	469b      	mov	fp, r3
 800027c:	0fca      	lsrs	r2, r1, #31
 800027e:	004b      	lsls	r3, r1, #1
 8000280:	0004      	movs	r4, r0
 8000282:	4680      	mov	r8, r0
 8000284:	0d5b      	lsrs	r3, r3, #21
 8000286:	9202      	str	r2, [sp, #8]
 8000288:	d100      	bne.n	800028c <__aeabi_ddiv+0x28>
 800028a:	e098      	b.n	80003be <__aeabi_ddiv+0x15a>
 800028c:	4a7c      	ldr	r2, [pc, #496]	@ (8000480 <__aeabi_ddiv+0x21c>)
 800028e:	4293      	cmp	r3, r2
 8000290:	d037      	beq.n	8000302 <__aeabi_ddiv+0x9e>
 8000292:	4659      	mov	r1, fp
 8000294:	0f42      	lsrs	r2, r0, #29
 8000296:	00c9      	lsls	r1, r1, #3
 8000298:	430a      	orrs	r2, r1
 800029a:	2180      	movs	r1, #128	@ 0x80
 800029c:	0409      	lsls	r1, r1, #16
 800029e:	4311      	orrs	r1, r2
 80002a0:	00c2      	lsls	r2, r0, #3
 80002a2:	4690      	mov	r8, r2
 80002a4:	4a77      	ldr	r2, [pc, #476]	@ (8000484 <__aeabi_ddiv+0x220>)
 80002a6:	4689      	mov	r9, r1
 80002a8:	4692      	mov	sl, r2
 80002aa:	449a      	add	sl, r3
 80002ac:	2300      	movs	r3, #0
 80002ae:	2400      	movs	r4, #0
 80002b0:	9303      	str	r3, [sp, #12]
 80002b2:	9e00      	ldr	r6, [sp, #0]
 80002b4:	9f01      	ldr	r7, [sp, #4]
 80002b6:	033b      	lsls	r3, r7, #12
 80002b8:	0b1b      	lsrs	r3, r3, #12
 80002ba:	469b      	mov	fp, r3
 80002bc:	007b      	lsls	r3, r7, #1
 80002be:	0030      	movs	r0, r6
 80002c0:	0d5b      	lsrs	r3, r3, #21
 80002c2:	0ffd      	lsrs	r5, r7, #31
 80002c4:	2b00      	cmp	r3, #0
 80002c6:	d059      	beq.n	800037c <__aeabi_ddiv+0x118>
 80002c8:	4a6d      	ldr	r2, [pc, #436]	@ (8000480 <__aeabi_ddiv+0x21c>)
 80002ca:	4293      	cmp	r3, r2
 80002cc:	d048      	beq.n	8000360 <__aeabi_ddiv+0xfc>
 80002ce:	4659      	mov	r1, fp
 80002d0:	0f72      	lsrs	r2, r6, #29
 80002d2:	00c9      	lsls	r1, r1, #3
 80002d4:	430a      	orrs	r2, r1
 80002d6:	2180      	movs	r1, #128	@ 0x80
 80002d8:	0409      	lsls	r1, r1, #16
 80002da:	4311      	orrs	r1, r2
 80002dc:	468b      	mov	fp, r1
 80002de:	4969      	ldr	r1, [pc, #420]	@ (8000484 <__aeabi_ddiv+0x220>)
 80002e0:	00f2      	lsls	r2, r6, #3
 80002e2:	468c      	mov	ip, r1
 80002e4:	4651      	mov	r1, sl
 80002e6:	4463      	add	r3, ip
 80002e8:	1acb      	subs	r3, r1, r3
 80002ea:	469a      	mov	sl, r3
 80002ec:	2100      	movs	r1, #0
 80002ee:	9e02      	ldr	r6, [sp, #8]
 80002f0:	406e      	eors	r6, r5
 80002f2:	b2f6      	uxtb	r6, r6
 80002f4:	2c0f      	cmp	r4, #15
 80002f6:	d900      	bls.n	80002fa <__aeabi_ddiv+0x96>
 80002f8:	e0ce      	b.n	8000498 <__aeabi_ddiv+0x234>
 80002fa:	4b63      	ldr	r3, [pc, #396]	@ (8000488 <__aeabi_ddiv+0x224>)
 80002fc:	00a4      	lsls	r4, r4, #2
 80002fe:	591b      	ldr	r3, [r3, r4]
 8000300:	469f      	mov	pc, r3
 8000302:	465a      	mov	r2, fp
 8000304:	4302      	orrs	r2, r0
 8000306:	4691      	mov	r9, r2
 8000308:	d000      	beq.n	800030c <__aeabi_ddiv+0xa8>
 800030a:	e090      	b.n	800042e <__aeabi_ddiv+0x1ca>
 800030c:	469a      	mov	sl, r3
 800030e:	2302      	movs	r3, #2
 8000310:	4690      	mov	r8, r2
 8000312:	2408      	movs	r4, #8
 8000314:	9303      	str	r3, [sp, #12]
 8000316:	e7cc      	b.n	80002b2 <__aeabi_ddiv+0x4e>
 8000318:	46cb      	mov	fp, r9
 800031a:	4642      	mov	r2, r8
 800031c:	9d02      	ldr	r5, [sp, #8]
 800031e:	9903      	ldr	r1, [sp, #12]
 8000320:	2902      	cmp	r1, #2
 8000322:	d100      	bne.n	8000326 <__aeabi_ddiv+0xc2>
 8000324:	e1de      	b.n	80006e4 <__aeabi_ddiv+0x480>
 8000326:	2903      	cmp	r1, #3
 8000328:	d100      	bne.n	800032c <__aeabi_ddiv+0xc8>
 800032a:	e08d      	b.n	8000448 <__aeabi_ddiv+0x1e4>
 800032c:	2901      	cmp	r1, #1
 800032e:	d000      	beq.n	8000332 <__aeabi_ddiv+0xce>
 8000330:	e179      	b.n	8000626 <__aeabi_ddiv+0x3c2>
 8000332:	002e      	movs	r6, r5
 8000334:	2200      	movs	r2, #0
 8000336:	2300      	movs	r3, #0
 8000338:	2400      	movs	r4, #0
 800033a:	4690      	mov	r8, r2
 800033c:	051b      	lsls	r3, r3, #20
 800033e:	4323      	orrs	r3, r4
 8000340:	07f6      	lsls	r6, r6, #31
 8000342:	4333      	orrs	r3, r6
 8000344:	4640      	mov	r0, r8
 8000346:	0019      	movs	r1, r3
 8000348:	b007      	add	sp, #28
 800034a:	bcf0      	pop	{r4, r5, r6, r7}
 800034c:	46bb      	mov	fp, r7
 800034e:	46b2      	mov	sl, r6
 8000350:	46a9      	mov	r9, r5
 8000352:	46a0      	mov	r8, r4
 8000354:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000356:	2200      	movs	r2, #0
 8000358:	2400      	movs	r4, #0
 800035a:	4690      	mov	r8, r2
 800035c:	4b48      	ldr	r3, [pc, #288]	@ (8000480 <__aeabi_ddiv+0x21c>)
 800035e:	e7ed      	b.n	800033c <__aeabi_ddiv+0xd8>
 8000360:	465a      	mov	r2, fp
 8000362:	9b00      	ldr	r3, [sp, #0]
 8000364:	431a      	orrs	r2, r3
 8000366:	4b49      	ldr	r3, [pc, #292]	@ (800048c <__aeabi_ddiv+0x228>)
 8000368:	469c      	mov	ip, r3
 800036a:	44e2      	add	sl, ip
 800036c:	2a00      	cmp	r2, #0
 800036e:	d159      	bne.n	8000424 <__aeabi_ddiv+0x1c0>
 8000370:	2302      	movs	r3, #2
 8000372:	431c      	orrs	r4, r3
 8000374:	2300      	movs	r3, #0
 8000376:	2102      	movs	r1, #2
 8000378:	469b      	mov	fp, r3
 800037a:	e7b8      	b.n	80002ee <__aeabi_ddiv+0x8a>
 800037c:	465a      	mov	r2, fp
 800037e:	9b00      	ldr	r3, [sp, #0]
 8000380:	431a      	orrs	r2, r3
 8000382:	d049      	beq.n	8000418 <__aeabi_ddiv+0x1b4>
 8000384:	465b      	mov	r3, fp
 8000386:	2b00      	cmp	r3, #0
 8000388:	d100      	bne.n	800038c <__aeabi_ddiv+0x128>
 800038a:	e19c      	b.n	80006c6 <__aeabi_ddiv+0x462>
 800038c:	4658      	mov	r0, fp
 800038e:	f001 fa3d 	bl	800180c <__clzsi2>
 8000392:	0002      	movs	r2, r0
 8000394:	0003      	movs	r3, r0
 8000396:	3a0b      	subs	r2, #11
 8000398:	271d      	movs	r7, #29
 800039a:	9e00      	ldr	r6, [sp, #0]
 800039c:	1aba      	subs	r2, r7, r2
 800039e:	0019      	movs	r1, r3
 80003a0:	4658      	mov	r0, fp
 80003a2:	40d6      	lsrs	r6, r2
 80003a4:	3908      	subs	r1, #8
 80003a6:	4088      	lsls	r0, r1
 80003a8:	0032      	movs	r2, r6
 80003aa:	4302      	orrs	r2, r0
 80003ac:	4693      	mov	fp, r2
 80003ae:	9a00      	ldr	r2, [sp, #0]
 80003b0:	408a      	lsls	r2, r1
 80003b2:	4937      	ldr	r1, [pc, #220]	@ (8000490 <__aeabi_ddiv+0x22c>)
 80003b4:	4453      	add	r3, sl
 80003b6:	468a      	mov	sl, r1
 80003b8:	2100      	movs	r1, #0
 80003ba:	449a      	add	sl, r3
 80003bc:	e797      	b.n	80002ee <__aeabi_ddiv+0x8a>
 80003be:	465b      	mov	r3, fp
 80003c0:	4303      	orrs	r3, r0
 80003c2:	4699      	mov	r9, r3
 80003c4:	d021      	beq.n	800040a <__aeabi_ddiv+0x1a6>
 80003c6:	465b      	mov	r3, fp
 80003c8:	2b00      	cmp	r3, #0
 80003ca:	d100      	bne.n	80003ce <__aeabi_ddiv+0x16a>
 80003cc:	e169      	b.n	80006a2 <__aeabi_ddiv+0x43e>
 80003ce:	4658      	mov	r0, fp
 80003d0:	f001 fa1c 	bl	800180c <__clzsi2>
 80003d4:	230b      	movs	r3, #11
 80003d6:	425b      	negs	r3, r3
 80003d8:	469c      	mov	ip, r3
 80003da:	0002      	movs	r2, r0
 80003dc:	4484      	add	ip, r0
 80003de:	4666      	mov	r6, ip
 80003e0:	231d      	movs	r3, #29
 80003e2:	1b9b      	subs	r3, r3, r6
 80003e4:	0026      	movs	r6, r4
 80003e6:	0011      	movs	r1, r2
 80003e8:	4658      	mov	r0, fp
 80003ea:	40de      	lsrs	r6, r3
 80003ec:	3908      	subs	r1, #8
 80003ee:	4088      	lsls	r0, r1
 80003f0:	0033      	movs	r3, r6
 80003f2:	4303      	orrs	r3, r0
 80003f4:	4699      	mov	r9, r3
 80003f6:	0023      	movs	r3, r4
 80003f8:	408b      	lsls	r3, r1
 80003fa:	4698      	mov	r8, r3
 80003fc:	4b25      	ldr	r3, [pc, #148]	@ (8000494 <__aeabi_ddiv+0x230>)
 80003fe:	2400      	movs	r4, #0
 8000400:	1a9b      	subs	r3, r3, r2
 8000402:	469a      	mov	sl, r3
 8000404:	2300      	movs	r3, #0
 8000406:	9303      	str	r3, [sp, #12]
 8000408:	e753      	b.n	80002b2 <__aeabi_ddiv+0x4e>
 800040a:	2300      	movs	r3, #0
 800040c:	4698      	mov	r8, r3
 800040e:	469a      	mov	sl, r3
 8000410:	3301      	adds	r3, #1
 8000412:	2404      	movs	r4, #4
 8000414:	9303      	str	r3, [sp, #12]
 8000416:	e74c      	b.n	80002b2 <__aeabi_ddiv+0x4e>
 8000418:	2301      	movs	r3, #1
 800041a:	431c      	orrs	r4, r3
 800041c:	2300      	movs	r3, #0
 800041e:	2101      	movs	r1, #1
 8000420:	469b      	mov	fp, r3
 8000422:	e764      	b.n	80002ee <__aeabi_ddiv+0x8a>
 8000424:	2303      	movs	r3, #3
 8000426:	0032      	movs	r2, r6
 8000428:	2103      	movs	r1, #3
 800042a:	431c      	orrs	r4, r3
 800042c:	e75f      	b.n	80002ee <__aeabi_ddiv+0x8a>
 800042e:	469a      	mov	sl, r3
 8000430:	2303      	movs	r3, #3
 8000432:	46d9      	mov	r9, fp
 8000434:	240c      	movs	r4, #12
 8000436:	9303      	str	r3, [sp, #12]
 8000438:	e73b      	b.n	80002b2 <__aeabi_ddiv+0x4e>
 800043a:	2300      	movs	r3, #0
 800043c:	2480      	movs	r4, #128	@ 0x80
 800043e:	4698      	mov	r8, r3
 8000440:	2600      	movs	r6, #0
 8000442:	4b0f      	ldr	r3, [pc, #60]	@ (8000480 <__aeabi_ddiv+0x21c>)
 8000444:	0324      	lsls	r4, r4, #12
 8000446:	e779      	b.n	800033c <__aeabi_ddiv+0xd8>
 8000448:	2480      	movs	r4, #128	@ 0x80
 800044a:	465b      	mov	r3, fp
 800044c:	0324      	lsls	r4, r4, #12
 800044e:	431c      	orrs	r4, r3
 8000450:	0324      	lsls	r4, r4, #12
 8000452:	002e      	movs	r6, r5
 8000454:	4690      	mov	r8, r2
 8000456:	4b0a      	ldr	r3, [pc, #40]	@ (8000480 <__aeabi_ddiv+0x21c>)
 8000458:	0b24      	lsrs	r4, r4, #12
 800045a:	e76f      	b.n	800033c <__aeabi_ddiv+0xd8>
 800045c:	2480      	movs	r4, #128	@ 0x80
 800045e:	464b      	mov	r3, r9
 8000460:	0324      	lsls	r4, r4, #12
 8000462:	4223      	tst	r3, r4
 8000464:	d002      	beq.n	800046c <__aeabi_ddiv+0x208>
 8000466:	465b      	mov	r3, fp
 8000468:	4223      	tst	r3, r4
 800046a:	d0f0      	beq.n	800044e <__aeabi_ddiv+0x1ea>
 800046c:	2480      	movs	r4, #128	@ 0x80
 800046e:	464b      	mov	r3, r9
 8000470:	0324      	lsls	r4, r4, #12
 8000472:	431c      	orrs	r4, r3
 8000474:	0324      	lsls	r4, r4, #12
 8000476:	9e02      	ldr	r6, [sp, #8]
 8000478:	4b01      	ldr	r3, [pc, #4]	@ (8000480 <__aeabi_ddiv+0x21c>)
 800047a:	0b24      	lsrs	r4, r4, #12
 800047c:	e75e      	b.n	800033c <__aeabi_ddiv+0xd8>
 800047e:	46c0      	nop			@ (mov r8, r8)
 8000480:	000007ff 	.word	0x000007ff
 8000484:	fffffc01 	.word	0xfffffc01
 8000488:	08003b30 	.word	0x08003b30
 800048c:	fffff801 	.word	0xfffff801
 8000490:	000003f3 	.word	0x000003f3
 8000494:	fffffc0d 	.word	0xfffffc0d
 8000498:	45cb      	cmp	fp, r9
 800049a:	d200      	bcs.n	800049e <__aeabi_ddiv+0x23a>
 800049c:	e0f8      	b.n	8000690 <__aeabi_ddiv+0x42c>
 800049e:	d100      	bne.n	80004a2 <__aeabi_ddiv+0x23e>
 80004a0:	e0f3      	b.n	800068a <__aeabi_ddiv+0x426>
 80004a2:	2301      	movs	r3, #1
 80004a4:	425b      	negs	r3, r3
 80004a6:	469c      	mov	ip, r3
 80004a8:	4644      	mov	r4, r8
 80004aa:	4648      	mov	r0, r9
 80004ac:	2500      	movs	r5, #0
 80004ae:	44e2      	add	sl, ip
 80004b0:	465b      	mov	r3, fp
 80004b2:	0e17      	lsrs	r7, r2, #24
 80004b4:	021b      	lsls	r3, r3, #8
 80004b6:	431f      	orrs	r7, r3
 80004b8:	0c19      	lsrs	r1, r3, #16
 80004ba:	043b      	lsls	r3, r7, #16
 80004bc:	0212      	lsls	r2, r2, #8
 80004be:	9700      	str	r7, [sp, #0]
 80004c0:	0c1f      	lsrs	r7, r3, #16
 80004c2:	4691      	mov	r9, r2
 80004c4:	9102      	str	r1, [sp, #8]
 80004c6:	9703      	str	r7, [sp, #12]
 80004c8:	f7ff fea8 	bl	800021c <__aeabi_uidivmod>
 80004cc:	0002      	movs	r2, r0
 80004ce:	437a      	muls	r2, r7
 80004d0:	040b      	lsls	r3, r1, #16
 80004d2:	0c21      	lsrs	r1, r4, #16
 80004d4:	4680      	mov	r8, r0
 80004d6:	4319      	orrs	r1, r3
 80004d8:	428a      	cmp	r2, r1
 80004da:	d909      	bls.n	80004f0 <__aeabi_ddiv+0x28c>
 80004dc:	9f00      	ldr	r7, [sp, #0]
 80004de:	2301      	movs	r3, #1
 80004e0:	46bc      	mov	ip, r7
 80004e2:	425b      	negs	r3, r3
 80004e4:	4461      	add	r1, ip
 80004e6:	469c      	mov	ip, r3
 80004e8:	44e0      	add	r8, ip
 80004ea:	428f      	cmp	r7, r1
 80004ec:	d800      	bhi.n	80004f0 <__aeabi_ddiv+0x28c>
 80004ee:	e15c      	b.n	80007aa <__aeabi_ddiv+0x546>
 80004f0:	1a88      	subs	r0, r1, r2
 80004f2:	9902      	ldr	r1, [sp, #8]
 80004f4:	f7ff fe92 	bl	800021c <__aeabi_uidivmod>
 80004f8:	9a03      	ldr	r2, [sp, #12]
 80004fa:	0424      	lsls	r4, r4, #16
 80004fc:	4342      	muls	r2, r0
 80004fe:	0409      	lsls	r1, r1, #16
 8000500:	0c24      	lsrs	r4, r4, #16
 8000502:	0003      	movs	r3, r0
 8000504:	430c      	orrs	r4, r1
 8000506:	42a2      	cmp	r2, r4
 8000508:	d906      	bls.n	8000518 <__aeabi_ddiv+0x2b4>
 800050a:	9900      	ldr	r1, [sp, #0]
 800050c:	3b01      	subs	r3, #1
 800050e:	468c      	mov	ip, r1
 8000510:	4464      	add	r4, ip
 8000512:	42a1      	cmp	r1, r4
 8000514:	d800      	bhi.n	8000518 <__aeabi_ddiv+0x2b4>
 8000516:	e142      	b.n	800079e <__aeabi_ddiv+0x53a>
 8000518:	1aa0      	subs	r0, r4, r2
 800051a:	4642      	mov	r2, r8
 800051c:	0412      	lsls	r2, r2, #16
 800051e:	431a      	orrs	r2, r3
 8000520:	4693      	mov	fp, r2
 8000522:	464b      	mov	r3, r9
 8000524:	4659      	mov	r1, fp
 8000526:	0c1b      	lsrs	r3, r3, #16
 8000528:	001f      	movs	r7, r3
 800052a:	9304      	str	r3, [sp, #16]
 800052c:	040b      	lsls	r3, r1, #16
 800052e:	4649      	mov	r1, r9
 8000530:	0409      	lsls	r1, r1, #16
 8000532:	0c09      	lsrs	r1, r1, #16
 8000534:	000c      	movs	r4, r1
 8000536:	0c1b      	lsrs	r3, r3, #16
 8000538:	435c      	muls	r4, r3
 800053a:	0c12      	lsrs	r2, r2, #16
 800053c:	437b      	muls	r3, r7
 800053e:	4688      	mov	r8, r1
 8000540:	4351      	muls	r1, r2
 8000542:	437a      	muls	r2, r7
 8000544:	0c27      	lsrs	r7, r4, #16
 8000546:	46bc      	mov	ip, r7
 8000548:	185b      	adds	r3, r3, r1
 800054a:	4463      	add	r3, ip
 800054c:	4299      	cmp	r1, r3
 800054e:	d903      	bls.n	8000558 <__aeabi_ddiv+0x2f4>
 8000550:	2180      	movs	r1, #128	@ 0x80
 8000552:	0249      	lsls	r1, r1, #9
 8000554:	468c      	mov	ip, r1
 8000556:	4462      	add	r2, ip
 8000558:	0c19      	lsrs	r1, r3, #16
 800055a:	0424      	lsls	r4, r4, #16
 800055c:	041b      	lsls	r3, r3, #16
 800055e:	0c24      	lsrs	r4, r4, #16
 8000560:	188a      	adds	r2, r1, r2
 8000562:	191c      	adds	r4, r3, r4
 8000564:	4290      	cmp	r0, r2
 8000566:	d302      	bcc.n	800056e <__aeabi_ddiv+0x30a>
 8000568:	d116      	bne.n	8000598 <__aeabi_ddiv+0x334>
 800056a:	42a5      	cmp	r5, r4
 800056c:	d214      	bcs.n	8000598 <__aeabi_ddiv+0x334>
 800056e:	465b      	mov	r3, fp
 8000570:	9f00      	ldr	r7, [sp, #0]
 8000572:	3b01      	subs	r3, #1
 8000574:	444d      	add	r5, r9
 8000576:	9305      	str	r3, [sp, #20]
 8000578:	454d      	cmp	r5, r9
 800057a:	419b      	sbcs	r3, r3
 800057c:	46bc      	mov	ip, r7
 800057e:	425b      	negs	r3, r3
 8000580:	4463      	add	r3, ip
 8000582:	18c0      	adds	r0, r0, r3
 8000584:	4287      	cmp	r7, r0
 8000586:	d300      	bcc.n	800058a <__aeabi_ddiv+0x326>
 8000588:	e102      	b.n	8000790 <__aeabi_ddiv+0x52c>
 800058a:	4282      	cmp	r2, r0
 800058c:	d900      	bls.n	8000590 <__aeabi_ddiv+0x32c>
 800058e:	e129      	b.n	80007e4 <__aeabi_ddiv+0x580>
 8000590:	d100      	bne.n	8000594 <__aeabi_ddiv+0x330>
 8000592:	e124      	b.n	80007de <__aeabi_ddiv+0x57a>
 8000594:	9b05      	ldr	r3, [sp, #20]
 8000596:	469b      	mov	fp, r3
 8000598:	1b2c      	subs	r4, r5, r4
 800059a:	42a5      	cmp	r5, r4
 800059c:	41ad      	sbcs	r5, r5
 800059e:	9b00      	ldr	r3, [sp, #0]
 80005a0:	1a80      	subs	r0, r0, r2
 80005a2:	426d      	negs	r5, r5
 80005a4:	1b40      	subs	r0, r0, r5
 80005a6:	4283      	cmp	r3, r0
 80005a8:	d100      	bne.n	80005ac <__aeabi_ddiv+0x348>
 80005aa:	e10f      	b.n	80007cc <__aeabi_ddiv+0x568>
 80005ac:	9902      	ldr	r1, [sp, #8]
 80005ae:	f7ff fe35 	bl	800021c <__aeabi_uidivmod>
 80005b2:	9a03      	ldr	r2, [sp, #12]
 80005b4:	040b      	lsls	r3, r1, #16
 80005b6:	4342      	muls	r2, r0
 80005b8:	0c21      	lsrs	r1, r4, #16
 80005ba:	0005      	movs	r5, r0
 80005bc:	4319      	orrs	r1, r3
 80005be:	428a      	cmp	r2, r1
 80005c0:	d900      	bls.n	80005c4 <__aeabi_ddiv+0x360>
 80005c2:	e0cb      	b.n	800075c <__aeabi_ddiv+0x4f8>
 80005c4:	1a88      	subs	r0, r1, r2
 80005c6:	9902      	ldr	r1, [sp, #8]
 80005c8:	f7ff fe28 	bl	800021c <__aeabi_uidivmod>
 80005cc:	9a03      	ldr	r2, [sp, #12]
 80005ce:	0424      	lsls	r4, r4, #16
 80005d0:	4342      	muls	r2, r0
 80005d2:	0409      	lsls	r1, r1, #16
 80005d4:	0c24      	lsrs	r4, r4, #16
 80005d6:	0003      	movs	r3, r0
 80005d8:	430c      	orrs	r4, r1
 80005da:	42a2      	cmp	r2, r4
 80005dc:	d900      	bls.n	80005e0 <__aeabi_ddiv+0x37c>
 80005de:	e0ca      	b.n	8000776 <__aeabi_ddiv+0x512>
 80005e0:	4641      	mov	r1, r8
 80005e2:	1aa4      	subs	r4, r4, r2
 80005e4:	042a      	lsls	r2, r5, #16
 80005e6:	431a      	orrs	r2, r3
 80005e8:	9f04      	ldr	r7, [sp, #16]
 80005ea:	0413      	lsls	r3, r2, #16
 80005ec:	0c1b      	lsrs	r3, r3, #16
 80005ee:	4359      	muls	r1, r3
 80005f0:	4640      	mov	r0, r8
 80005f2:	437b      	muls	r3, r7
 80005f4:	469c      	mov	ip, r3
 80005f6:	0c15      	lsrs	r5, r2, #16
 80005f8:	4368      	muls	r0, r5
 80005fa:	0c0b      	lsrs	r3, r1, #16
 80005fc:	4484      	add	ip, r0
 80005fe:	4463      	add	r3, ip
 8000600:	437d      	muls	r5, r7
 8000602:	4298      	cmp	r0, r3
 8000604:	d903      	bls.n	800060e <__aeabi_ddiv+0x3aa>
 8000606:	2080      	movs	r0, #128	@ 0x80
 8000608:	0240      	lsls	r0, r0, #9
 800060a:	4684      	mov	ip, r0
 800060c:	4465      	add	r5, ip
 800060e:	0c18      	lsrs	r0, r3, #16
 8000610:	0409      	lsls	r1, r1, #16
 8000612:	041b      	lsls	r3, r3, #16
 8000614:	0c09      	lsrs	r1, r1, #16
 8000616:	1940      	adds	r0, r0, r5
 8000618:	185b      	adds	r3, r3, r1
 800061a:	4284      	cmp	r4, r0
 800061c:	d327      	bcc.n	800066e <__aeabi_ddiv+0x40a>
 800061e:	d023      	beq.n	8000668 <__aeabi_ddiv+0x404>
 8000620:	2301      	movs	r3, #1
 8000622:	0035      	movs	r5, r6
 8000624:	431a      	orrs	r2, r3
 8000626:	4b94      	ldr	r3, [pc, #592]	@ (8000878 <__aeabi_ddiv+0x614>)
 8000628:	4453      	add	r3, sl
 800062a:	2b00      	cmp	r3, #0
 800062c:	dd60      	ble.n	80006f0 <__aeabi_ddiv+0x48c>
 800062e:	0751      	lsls	r1, r2, #29
 8000630:	d000      	beq.n	8000634 <__aeabi_ddiv+0x3d0>
 8000632:	e086      	b.n	8000742 <__aeabi_ddiv+0x4de>
 8000634:	002e      	movs	r6, r5
 8000636:	08d1      	lsrs	r1, r2, #3
 8000638:	465a      	mov	r2, fp
 800063a:	01d2      	lsls	r2, r2, #7
 800063c:	d506      	bpl.n	800064c <__aeabi_ddiv+0x3e8>
 800063e:	465a      	mov	r2, fp
 8000640:	4b8e      	ldr	r3, [pc, #568]	@ (800087c <__aeabi_ddiv+0x618>)
 8000642:	401a      	ands	r2, r3
 8000644:	2380      	movs	r3, #128	@ 0x80
 8000646:	4693      	mov	fp, r2
 8000648:	00db      	lsls	r3, r3, #3
 800064a:	4453      	add	r3, sl
 800064c:	4a8c      	ldr	r2, [pc, #560]	@ (8000880 <__aeabi_ddiv+0x61c>)
 800064e:	4293      	cmp	r3, r2
 8000650:	dd00      	ble.n	8000654 <__aeabi_ddiv+0x3f0>
 8000652:	e680      	b.n	8000356 <__aeabi_ddiv+0xf2>
 8000654:	465a      	mov	r2, fp
 8000656:	0752      	lsls	r2, r2, #29
 8000658:	430a      	orrs	r2, r1
 800065a:	4690      	mov	r8, r2
 800065c:	465a      	mov	r2, fp
 800065e:	055b      	lsls	r3, r3, #21
 8000660:	0254      	lsls	r4, r2, #9
 8000662:	0b24      	lsrs	r4, r4, #12
 8000664:	0d5b      	lsrs	r3, r3, #21
 8000666:	e669      	b.n	800033c <__aeabi_ddiv+0xd8>
 8000668:	0035      	movs	r5, r6
 800066a:	2b00      	cmp	r3, #0
 800066c:	d0db      	beq.n	8000626 <__aeabi_ddiv+0x3c2>
 800066e:	9d00      	ldr	r5, [sp, #0]
 8000670:	1e51      	subs	r1, r2, #1
 8000672:	46ac      	mov	ip, r5
 8000674:	4464      	add	r4, ip
 8000676:	42ac      	cmp	r4, r5
 8000678:	d200      	bcs.n	800067c <__aeabi_ddiv+0x418>
 800067a:	e09e      	b.n	80007ba <__aeabi_ddiv+0x556>
 800067c:	4284      	cmp	r4, r0
 800067e:	d200      	bcs.n	8000682 <__aeabi_ddiv+0x41e>
 8000680:	e0e1      	b.n	8000846 <__aeabi_ddiv+0x5e2>
 8000682:	d100      	bne.n	8000686 <__aeabi_ddiv+0x422>
 8000684:	e0ee      	b.n	8000864 <__aeabi_ddiv+0x600>
 8000686:	000a      	movs	r2, r1
 8000688:	e7ca      	b.n	8000620 <__aeabi_ddiv+0x3bc>
 800068a:	4542      	cmp	r2, r8
 800068c:	d900      	bls.n	8000690 <__aeabi_ddiv+0x42c>
 800068e:	e708      	b.n	80004a2 <__aeabi_ddiv+0x23e>
 8000690:	464b      	mov	r3, r9
 8000692:	07dc      	lsls	r4, r3, #31
 8000694:	0858      	lsrs	r0, r3, #1
 8000696:	4643      	mov	r3, r8
 8000698:	085b      	lsrs	r3, r3, #1
 800069a:	431c      	orrs	r4, r3
 800069c:	4643      	mov	r3, r8
 800069e:	07dd      	lsls	r5, r3, #31
 80006a0:	e706      	b.n	80004b0 <__aeabi_ddiv+0x24c>
 80006a2:	f001 f8b3 	bl	800180c <__clzsi2>
 80006a6:	2315      	movs	r3, #21
 80006a8:	469c      	mov	ip, r3
 80006aa:	4484      	add	ip, r0
 80006ac:	0002      	movs	r2, r0
 80006ae:	4663      	mov	r3, ip
 80006b0:	3220      	adds	r2, #32
 80006b2:	2b1c      	cmp	r3, #28
 80006b4:	dc00      	bgt.n	80006b8 <__aeabi_ddiv+0x454>
 80006b6:	e692      	b.n	80003de <__aeabi_ddiv+0x17a>
 80006b8:	0023      	movs	r3, r4
 80006ba:	3808      	subs	r0, #8
 80006bc:	4083      	lsls	r3, r0
 80006be:	4699      	mov	r9, r3
 80006c0:	2300      	movs	r3, #0
 80006c2:	4698      	mov	r8, r3
 80006c4:	e69a      	b.n	80003fc <__aeabi_ddiv+0x198>
 80006c6:	f001 f8a1 	bl	800180c <__clzsi2>
 80006ca:	0002      	movs	r2, r0
 80006cc:	0003      	movs	r3, r0
 80006ce:	3215      	adds	r2, #21
 80006d0:	3320      	adds	r3, #32
 80006d2:	2a1c      	cmp	r2, #28
 80006d4:	dc00      	bgt.n	80006d8 <__aeabi_ddiv+0x474>
 80006d6:	e65f      	b.n	8000398 <__aeabi_ddiv+0x134>
 80006d8:	9900      	ldr	r1, [sp, #0]
 80006da:	3808      	subs	r0, #8
 80006dc:	4081      	lsls	r1, r0
 80006de:	2200      	movs	r2, #0
 80006e0:	468b      	mov	fp, r1
 80006e2:	e666      	b.n	80003b2 <__aeabi_ddiv+0x14e>
 80006e4:	2200      	movs	r2, #0
 80006e6:	002e      	movs	r6, r5
 80006e8:	2400      	movs	r4, #0
 80006ea:	4690      	mov	r8, r2
 80006ec:	4b65      	ldr	r3, [pc, #404]	@ (8000884 <__aeabi_ddiv+0x620>)
 80006ee:	e625      	b.n	800033c <__aeabi_ddiv+0xd8>
 80006f0:	002e      	movs	r6, r5
 80006f2:	2101      	movs	r1, #1
 80006f4:	1ac9      	subs	r1, r1, r3
 80006f6:	2938      	cmp	r1, #56	@ 0x38
 80006f8:	dd00      	ble.n	80006fc <__aeabi_ddiv+0x498>
 80006fa:	e61b      	b.n	8000334 <__aeabi_ddiv+0xd0>
 80006fc:	291f      	cmp	r1, #31
 80006fe:	dc7e      	bgt.n	80007fe <__aeabi_ddiv+0x59a>
 8000700:	4861      	ldr	r0, [pc, #388]	@ (8000888 <__aeabi_ddiv+0x624>)
 8000702:	0014      	movs	r4, r2
 8000704:	4450      	add	r0, sl
 8000706:	465b      	mov	r3, fp
 8000708:	4082      	lsls	r2, r0
 800070a:	4083      	lsls	r3, r0
 800070c:	40cc      	lsrs	r4, r1
 800070e:	1e50      	subs	r0, r2, #1
 8000710:	4182      	sbcs	r2, r0
 8000712:	4323      	orrs	r3, r4
 8000714:	431a      	orrs	r2, r3
 8000716:	465b      	mov	r3, fp
 8000718:	40cb      	lsrs	r3, r1
 800071a:	0751      	lsls	r1, r2, #29
 800071c:	d009      	beq.n	8000732 <__aeabi_ddiv+0x4ce>
 800071e:	210f      	movs	r1, #15
 8000720:	4011      	ands	r1, r2
 8000722:	2904      	cmp	r1, #4
 8000724:	d005      	beq.n	8000732 <__aeabi_ddiv+0x4ce>
 8000726:	1d11      	adds	r1, r2, #4
 8000728:	4291      	cmp	r1, r2
 800072a:	4192      	sbcs	r2, r2
 800072c:	4252      	negs	r2, r2
 800072e:	189b      	adds	r3, r3, r2
 8000730:	000a      	movs	r2, r1
 8000732:	0219      	lsls	r1, r3, #8
 8000734:	d400      	bmi.n	8000738 <__aeabi_ddiv+0x4d4>
 8000736:	e09b      	b.n	8000870 <__aeabi_ddiv+0x60c>
 8000738:	2200      	movs	r2, #0
 800073a:	2301      	movs	r3, #1
 800073c:	2400      	movs	r4, #0
 800073e:	4690      	mov	r8, r2
 8000740:	e5fc      	b.n	800033c <__aeabi_ddiv+0xd8>
 8000742:	210f      	movs	r1, #15
 8000744:	4011      	ands	r1, r2
 8000746:	2904      	cmp	r1, #4
 8000748:	d100      	bne.n	800074c <__aeabi_ddiv+0x4e8>
 800074a:	e773      	b.n	8000634 <__aeabi_ddiv+0x3d0>
 800074c:	1d11      	adds	r1, r2, #4
 800074e:	4291      	cmp	r1, r2
 8000750:	4192      	sbcs	r2, r2
 8000752:	4252      	negs	r2, r2
 8000754:	002e      	movs	r6, r5
 8000756:	08c9      	lsrs	r1, r1, #3
 8000758:	4493      	add	fp, r2
 800075a:	e76d      	b.n	8000638 <__aeabi_ddiv+0x3d4>
 800075c:	9b00      	ldr	r3, [sp, #0]
 800075e:	3d01      	subs	r5, #1
 8000760:	469c      	mov	ip, r3
 8000762:	4461      	add	r1, ip
 8000764:	428b      	cmp	r3, r1
 8000766:	d900      	bls.n	800076a <__aeabi_ddiv+0x506>
 8000768:	e72c      	b.n	80005c4 <__aeabi_ddiv+0x360>
 800076a:	428a      	cmp	r2, r1
 800076c:	d800      	bhi.n	8000770 <__aeabi_ddiv+0x50c>
 800076e:	e729      	b.n	80005c4 <__aeabi_ddiv+0x360>
 8000770:	1e85      	subs	r5, r0, #2
 8000772:	4461      	add	r1, ip
 8000774:	e726      	b.n	80005c4 <__aeabi_ddiv+0x360>
 8000776:	9900      	ldr	r1, [sp, #0]
 8000778:	3b01      	subs	r3, #1
 800077a:	468c      	mov	ip, r1
 800077c:	4464      	add	r4, ip
 800077e:	42a1      	cmp	r1, r4
 8000780:	d900      	bls.n	8000784 <__aeabi_ddiv+0x520>
 8000782:	e72d      	b.n	80005e0 <__aeabi_ddiv+0x37c>
 8000784:	42a2      	cmp	r2, r4
 8000786:	d800      	bhi.n	800078a <__aeabi_ddiv+0x526>
 8000788:	e72a      	b.n	80005e0 <__aeabi_ddiv+0x37c>
 800078a:	1e83      	subs	r3, r0, #2
 800078c:	4464      	add	r4, ip
 800078e:	e727      	b.n	80005e0 <__aeabi_ddiv+0x37c>
 8000790:	4287      	cmp	r7, r0
 8000792:	d000      	beq.n	8000796 <__aeabi_ddiv+0x532>
 8000794:	e6fe      	b.n	8000594 <__aeabi_ddiv+0x330>
 8000796:	45a9      	cmp	r9, r5
 8000798:	d900      	bls.n	800079c <__aeabi_ddiv+0x538>
 800079a:	e6fb      	b.n	8000594 <__aeabi_ddiv+0x330>
 800079c:	e6f5      	b.n	800058a <__aeabi_ddiv+0x326>
 800079e:	42a2      	cmp	r2, r4
 80007a0:	d800      	bhi.n	80007a4 <__aeabi_ddiv+0x540>
 80007a2:	e6b9      	b.n	8000518 <__aeabi_ddiv+0x2b4>
 80007a4:	1e83      	subs	r3, r0, #2
 80007a6:	4464      	add	r4, ip
 80007a8:	e6b6      	b.n	8000518 <__aeabi_ddiv+0x2b4>
 80007aa:	428a      	cmp	r2, r1
 80007ac:	d800      	bhi.n	80007b0 <__aeabi_ddiv+0x54c>
 80007ae:	e69f      	b.n	80004f0 <__aeabi_ddiv+0x28c>
 80007b0:	46bc      	mov	ip, r7
 80007b2:	1e83      	subs	r3, r0, #2
 80007b4:	4698      	mov	r8, r3
 80007b6:	4461      	add	r1, ip
 80007b8:	e69a      	b.n	80004f0 <__aeabi_ddiv+0x28c>
 80007ba:	000a      	movs	r2, r1
 80007bc:	4284      	cmp	r4, r0
 80007be:	d000      	beq.n	80007c2 <__aeabi_ddiv+0x55e>
 80007c0:	e72e      	b.n	8000620 <__aeabi_ddiv+0x3bc>
 80007c2:	454b      	cmp	r3, r9
 80007c4:	d000      	beq.n	80007c8 <__aeabi_ddiv+0x564>
 80007c6:	e72b      	b.n	8000620 <__aeabi_ddiv+0x3bc>
 80007c8:	0035      	movs	r5, r6
 80007ca:	e72c      	b.n	8000626 <__aeabi_ddiv+0x3c2>
 80007cc:	4b2a      	ldr	r3, [pc, #168]	@ (8000878 <__aeabi_ddiv+0x614>)
 80007ce:	4a2f      	ldr	r2, [pc, #188]	@ (800088c <__aeabi_ddiv+0x628>)
 80007d0:	4453      	add	r3, sl
 80007d2:	4592      	cmp	sl, r2
 80007d4:	db43      	blt.n	800085e <__aeabi_ddiv+0x5fa>
 80007d6:	2201      	movs	r2, #1
 80007d8:	2100      	movs	r1, #0
 80007da:	4493      	add	fp, r2
 80007dc:	e72c      	b.n	8000638 <__aeabi_ddiv+0x3d4>
 80007de:	42ac      	cmp	r4, r5
 80007e0:	d800      	bhi.n	80007e4 <__aeabi_ddiv+0x580>
 80007e2:	e6d7      	b.n	8000594 <__aeabi_ddiv+0x330>
 80007e4:	2302      	movs	r3, #2
 80007e6:	425b      	negs	r3, r3
 80007e8:	469c      	mov	ip, r3
 80007ea:	9900      	ldr	r1, [sp, #0]
 80007ec:	444d      	add	r5, r9
 80007ee:	454d      	cmp	r5, r9
 80007f0:	419b      	sbcs	r3, r3
 80007f2:	44e3      	add	fp, ip
 80007f4:	468c      	mov	ip, r1
 80007f6:	425b      	negs	r3, r3
 80007f8:	4463      	add	r3, ip
 80007fa:	18c0      	adds	r0, r0, r3
 80007fc:	e6cc      	b.n	8000598 <__aeabi_ddiv+0x334>
 80007fe:	201f      	movs	r0, #31
 8000800:	4240      	negs	r0, r0
 8000802:	1ac3      	subs	r3, r0, r3
 8000804:	4658      	mov	r0, fp
 8000806:	40d8      	lsrs	r0, r3
 8000808:	2920      	cmp	r1, #32
 800080a:	d004      	beq.n	8000816 <__aeabi_ddiv+0x5b2>
 800080c:	4659      	mov	r1, fp
 800080e:	4b20      	ldr	r3, [pc, #128]	@ (8000890 <__aeabi_ddiv+0x62c>)
 8000810:	4453      	add	r3, sl
 8000812:	4099      	lsls	r1, r3
 8000814:	430a      	orrs	r2, r1
 8000816:	1e53      	subs	r3, r2, #1
 8000818:	419a      	sbcs	r2, r3
 800081a:	2307      	movs	r3, #7
 800081c:	0019      	movs	r1, r3
 800081e:	4302      	orrs	r2, r0
 8000820:	2400      	movs	r4, #0
 8000822:	4011      	ands	r1, r2
 8000824:	4213      	tst	r3, r2
 8000826:	d009      	beq.n	800083c <__aeabi_ddiv+0x5d8>
 8000828:	3308      	adds	r3, #8
 800082a:	4013      	ands	r3, r2
 800082c:	2b04      	cmp	r3, #4
 800082e:	d01d      	beq.n	800086c <__aeabi_ddiv+0x608>
 8000830:	1d13      	adds	r3, r2, #4
 8000832:	4293      	cmp	r3, r2
 8000834:	4189      	sbcs	r1, r1
 8000836:	001a      	movs	r2, r3
 8000838:	4249      	negs	r1, r1
 800083a:	0749      	lsls	r1, r1, #29
 800083c:	08d2      	lsrs	r2, r2, #3
 800083e:	430a      	orrs	r2, r1
 8000840:	4690      	mov	r8, r2
 8000842:	2300      	movs	r3, #0
 8000844:	e57a      	b.n	800033c <__aeabi_ddiv+0xd8>
 8000846:	4649      	mov	r1, r9
 8000848:	9f00      	ldr	r7, [sp, #0]
 800084a:	004d      	lsls	r5, r1, #1
 800084c:	454d      	cmp	r5, r9
 800084e:	4189      	sbcs	r1, r1
 8000850:	46bc      	mov	ip, r7
 8000852:	4249      	negs	r1, r1
 8000854:	4461      	add	r1, ip
 8000856:	46a9      	mov	r9, r5
 8000858:	3a02      	subs	r2, #2
 800085a:	1864      	adds	r4, r4, r1
 800085c:	e7ae      	b.n	80007bc <__aeabi_ddiv+0x558>
 800085e:	2201      	movs	r2, #1
 8000860:	4252      	negs	r2, r2
 8000862:	e746      	b.n	80006f2 <__aeabi_ddiv+0x48e>
 8000864:	4599      	cmp	r9, r3
 8000866:	d3ee      	bcc.n	8000846 <__aeabi_ddiv+0x5e2>
 8000868:	000a      	movs	r2, r1
 800086a:	e7aa      	b.n	80007c2 <__aeabi_ddiv+0x55e>
 800086c:	2100      	movs	r1, #0
 800086e:	e7e5      	b.n	800083c <__aeabi_ddiv+0x5d8>
 8000870:	0759      	lsls	r1, r3, #29
 8000872:	025b      	lsls	r3, r3, #9
 8000874:	0b1c      	lsrs	r4, r3, #12
 8000876:	e7e1      	b.n	800083c <__aeabi_ddiv+0x5d8>
 8000878:	000003ff 	.word	0x000003ff
 800087c:	feffffff 	.word	0xfeffffff
 8000880:	000007fe 	.word	0x000007fe
 8000884:	000007ff 	.word	0x000007ff
 8000888:	0000041e 	.word	0x0000041e
 800088c:	fffffc02 	.word	0xfffffc02
 8000890:	0000043e 	.word	0x0000043e

08000894 <__aeabi_dmul>:
 8000894:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000896:	4657      	mov	r7, sl
 8000898:	464e      	mov	r6, r9
 800089a:	46de      	mov	lr, fp
 800089c:	4645      	mov	r5, r8
 800089e:	b5e0      	push	{r5, r6, r7, lr}
 80008a0:	001f      	movs	r7, r3
 80008a2:	030b      	lsls	r3, r1, #12
 80008a4:	0b1b      	lsrs	r3, r3, #12
 80008a6:	0016      	movs	r6, r2
 80008a8:	469a      	mov	sl, r3
 80008aa:	0fca      	lsrs	r2, r1, #31
 80008ac:	004b      	lsls	r3, r1, #1
 80008ae:	0004      	movs	r4, r0
 80008b0:	4691      	mov	r9, r2
 80008b2:	b085      	sub	sp, #20
 80008b4:	0d5b      	lsrs	r3, r3, #21
 80008b6:	d100      	bne.n	80008ba <__aeabi_dmul+0x26>
 80008b8:	e1cf      	b.n	8000c5a <__aeabi_dmul+0x3c6>
 80008ba:	4acd      	ldr	r2, [pc, #820]	@ (8000bf0 <__aeabi_dmul+0x35c>)
 80008bc:	4293      	cmp	r3, r2
 80008be:	d055      	beq.n	800096c <__aeabi_dmul+0xd8>
 80008c0:	4651      	mov	r1, sl
 80008c2:	0f42      	lsrs	r2, r0, #29
 80008c4:	00c9      	lsls	r1, r1, #3
 80008c6:	430a      	orrs	r2, r1
 80008c8:	2180      	movs	r1, #128	@ 0x80
 80008ca:	0409      	lsls	r1, r1, #16
 80008cc:	4311      	orrs	r1, r2
 80008ce:	00c2      	lsls	r2, r0, #3
 80008d0:	4690      	mov	r8, r2
 80008d2:	4ac8      	ldr	r2, [pc, #800]	@ (8000bf4 <__aeabi_dmul+0x360>)
 80008d4:	468a      	mov	sl, r1
 80008d6:	4693      	mov	fp, r2
 80008d8:	449b      	add	fp, r3
 80008da:	2300      	movs	r3, #0
 80008dc:	2500      	movs	r5, #0
 80008de:	9302      	str	r3, [sp, #8]
 80008e0:	033c      	lsls	r4, r7, #12
 80008e2:	007b      	lsls	r3, r7, #1
 80008e4:	0ffa      	lsrs	r2, r7, #31
 80008e6:	9601      	str	r6, [sp, #4]
 80008e8:	0b24      	lsrs	r4, r4, #12
 80008ea:	0d5b      	lsrs	r3, r3, #21
 80008ec:	9200      	str	r2, [sp, #0]
 80008ee:	d100      	bne.n	80008f2 <__aeabi_dmul+0x5e>
 80008f0:	e188      	b.n	8000c04 <__aeabi_dmul+0x370>
 80008f2:	4abf      	ldr	r2, [pc, #764]	@ (8000bf0 <__aeabi_dmul+0x35c>)
 80008f4:	4293      	cmp	r3, r2
 80008f6:	d100      	bne.n	80008fa <__aeabi_dmul+0x66>
 80008f8:	e092      	b.n	8000a20 <__aeabi_dmul+0x18c>
 80008fa:	4abe      	ldr	r2, [pc, #760]	@ (8000bf4 <__aeabi_dmul+0x360>)
 80008fc:	4694      	mov	ip, r2
 80008fe:	4463      	add	r3, ip
 8000900:	449b      	add	fp, r3
 8000902:	2d0a      	cmp	r5, #10
 8000904:	dc42      	bgt.n	800098c <__aeabi_dmul+0xf8>
 8000906:	00e4      	lsls	r4, r4, #3
 8000908:	0f73      	lsrs	r3, r6, #29
 800090a:	4323      	orrs	r3, r4
 800090c:	2480      	movs	r4, #128	@ 0x80
 800090e:	4649      	mov	r1, r9
 8000910:	0424      	lsls	r4, r4, #16
 8000912:	431c      	orrs	r4, r3
 8000914:	00f3      	lsls	r3, r6, #3
 8000916:	9301      	str	r3, [sp, #4]
 8000918:	9b00      	ldr	r3, [sp, #0]
 800091a:	2000      	movs	r0, #0
 800091c:	4059      	eors	r1, r3
 800091e:	b2cb      	uxtb	r3, r1
 8000920:	9303      	str	r3, [sp, #12]
 8000922:	2d02      	cmp	r5, #2
 8000924:	dc00      	bgt.n	8000928 <__aeabi_dmul+0x94>
 8000926:	e094      	b.n	8000a52 <__aeabi_dmul+0x1be>
 8000928:	2301      	movs	r3, #1
 800092a:	40ab      	lsls	r3, r5
 800092c:	001d      	movs	r5, r3
 800092e:	23a6      	movs	r3, #166	@ 0xa6
 8000930:	002a      	movs	r2, r5
 8000932:	00db      	lsls	r3, r3, #3
 8000934:	401a      	ands	r2, r3
 8000936:	421d      	tst	r5, r3
 8000938:	d000      	beq.n	800093c <__aeabi_dmul+0xa8>
 800093a:	e229      	b.n	8000d90 <__aeabi_dmul+0x4fc>
 800093c:	2390      	movs	r3, #144	@ 0x90
 800093e:	009b      	lsls	r3, r3, #2
 8000940:	421d      	tst	r5, r3
 8000942:	d100      	bne.n	8000946 <__aeabi_dmul+0xb2>
 8000944:	e24d      	b.n	8000de2 <__aeabi_dmul+0x54e>
 8000946:	2300      	movs	r3, #0
 8000948:	2480      	movs	r4, #128	@ 0x80
 800094a:	4699      	mov	r9, r3
 800094c:	0324      	lsls	r4, r4, #12
 800094e:	4ba8      	ldr	r3, [pc, #672]	@ (8000bf0 <__aeabi_dmul+0x35c>)
 8000950:	0010      	movs	r0, r2
 8000952:	464a      	mov	r2, r9
 8000954:	051b      	lsls	r3, r3, #20
 8000956:	4323      	orrs	r3, r4
 8000958:	07d2      	lsls	r2, r2, #31
 800095a:	4313      	orrs	r3, r2
 800095c:	0019      	movs	r1, r3
 800095e:	b005      	add	sp, #20
 8000960:	bcf0      	pop	{r4, r5, r6, r7}
 8000962:	46bb      	mov	fp, r7
 8000964:	46b2      	mov	sl, r6
 8000966:	46a9      	mov	r9, r5
 8000968:	46a0      	mov	r8, r4
 800096a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800096c:	4652      	mov	r2, sl
 800096e:	4302      	orrs	r2, r0
 8000970:	4690      	mov	r8, r2
 8000972:	d000      	beq.n	8000976 <__aeabi_dmul+0xe2>
 8000974:	e1ac      	b.n	8000cd0 <__aeabi_dmul+0x43c>
 8000976:	469b      	mov	fp, r3
 8000978:	2302      	movs	r3, #2
 800097a:	4692      	mov	sl, r2
 800097c:	2508      	movs	r5, #8
 800097e:	9302      	str	r3, [sp, #8]
 8000980:	e7ae      	b.n	80008e0 <__aeabi_dmul+0x4c>
 8000982:	9b00      	ldr	r3, [sp, #0]
 8000984:	46a2      	mov	sl, r4
 8000986:	4699      	mov	r9, r3
 8000988:	9b01      	ldr	r3, [sp, #4]
 800098a:	4698      	mov	r8, r3
 800098c:	9b02      	ldr	r3, [sp, #8]
 800098e:	2b02      	cmp	r3, #2
 8000990:	d100      	bne.n	8000994 <__aeabi_dmul+0x100>
 8000992:	e1ca      	b.n	8000d2a <__aeabi_dmul+0x496>
 8000994:	2b03      	cmp	r3, #3
 8000996:	d100      	bne.n	800099a <__aeabi_dmul+0x106>
 8000998:	e192      	b.n	8000cc0 <__aeabi_dmul+0x42c>
 800099a:	2b01      	cmp	r3, #1
 800099c:	d110      	bne.n	80009c0 <__aeabi_dmul+0x12c>
 800099e:	2300      	movs	r3, #0
 80009a0:	2400      	movs	r4, #0
 80009a2:	2200      	movs	r2, #0
 80009a4:	e7d4      	b.n	8000950 <__aeabi_dmul+0xbc>
 80009a6:	2201      	movs	r2, #1
 80009a8:	087b      	lsrs	r3, r7, #1
 80009aa:	403a      	ands	r2, r7
 80009ac:	4313      	orrs	r3, r2
 80009ae:	4652      	mov	r2, sl
 80009b0:	07d2      	lsls	r2, r2, #31
 80009b2:	4313      	orrs	r3, r2
 80009b4:	4698      	mov	r8, r3
 80009b6:	4653      	mov	r3, sl
 80009b8:	085b      	lsrs	r3, r3, #1
 80009ba:	469a      	mov	sl, r3
 80009bc:	9b03      	ldr	r3, [sp, #12]
 80009be:	4699      	mov	r9, r3
 80009c0:	465b      	mov	r3, fp
 80009c2:	1c58      	adds	r0, r3, #1
 80009c4:	2380      	movs	r3, #128	@ 0x80
 80009c6:	00db      	lsls	r3, r3, #3
 80009c8:	445b      	add	r3, fp
 80009ca:	2b00      	cmp	r3, #0
 80009cc:	dc00      	bgt.n	80009d0 <__aeabi_dmul+0x13c>
 80009ce:	e1b1      	b.n	8000d34 <__aeabi_dmul+0x4a0>
 80009d0:	4642      	mov	r2, r8
 80009d2:	0752      	lsls	r2, r2, #29
 80009d4:	d00b      	beq.n	80009ee <__aeabi_dmul+0x15a>
 80009d6:	220f      	movs	r2, #15
 80009d8:	4641      	mov	r1, r8
 80009da:	400a      	ands	r2, r1
 80009dc:	2a04      	cmp	r2, #4
 80009de:	d006      	beq.n	80009ee <__aeabi_dmul+0x15a>
 80009e0:	4642      	mov	r2, r8
 80009e2:	1d11      	adds	r1, r2, #4
 80009e4:	4541      	cmp	r1, r8
 80009e6:	4192      	sbcs	r2, r2
 80009e8:	4688      	mov	r8, r1
 80009ea:	4252      	negs	r2, r2
 80009ec:	4492      	add	sl, r2
 80009ee:	4652      	mov	r2, sl
 80009f0:	01d2      	lsls	r2, r2, #7
 80009f2:	d506      	bpl.n	8000a02 <__aeabi_dmul+0x16e>
 80009f4:	4652      	mov	r2, sl
 80009f6:	4b80      	ldr	r3, [pc, #512]	@ (8000bf8 <__aeabi_dmul+0x364>)
 80009f8:	401a      	ands	r2, r3
 80009fa:	2380      	movs	r3, #128	@ 0x80
 80009fc:	4692      	mov	sl, r2
 80009fe:	00db      	lsls	r3, r3, #3
 8000a00:	18c3      	adds	r3, r0, r3
 8000a02:	4a7e      	ldr	r2, [pc, #504]	@ (8000bfc <__aeabi_dmul+0x368>)
 8000a04:	4293      	cmp	r3, r2
 8000a06:	dd00      	ble.n	8000a0a <__aeabi_dmul+0x176>
 8000a08:	e18f      	b.n	8000d2a <__aeabi_dmul+0x496>
 8000a0a:	4642      	mov	r2, r8
 8000a0c:	08d1      	lsrs	r1, r2, #3
 8000a0e:	4652      	mov	r2, sl
 8000a10:	0752      	lsls	r2, r2, #29
 8000a12:	430a      	orrs	r2, r1
 8000a14:	4651      	mov	r1, sl
 8000a16:	055b      	lsls	r3, r3, #21
 8000a18:	024c      	lsls	r4, r1, #9
 8000a1a:	0b24      	lsrs	r4, r4, #12
 8000a1c:	0d5b      	lsrs	r3, r3, #21
 8000a1e:	e797      	b.n	8000950 <__aeabi_dmul+0xbc>
 8000a20:	4b73      	ldr	r3, [pc, #460]	@ (8000bf0 <__aeabi_dmul+0x35c>)
 8000a22:	4326      	orrs	r6, r4
 8000a24:	469c      	mov	ip, r3
 8000a26:	44e3      	add	fp, ip
 8000a28:	2e00      	cmp	r6, #0
 8000a2a:	d100      	bne.n	8000a2e <__aeabi_dmul+0x19a>
 8000a2c:	e16f      	b.n	8000d0e <__aeabi_dmul+0x47a>
 8000a2e:	2303      	movs	r3, #3
 8000a30:	4649      	mov	r1, r9
 8000a32:	431d      	orrs	r5, r3
 8000a34:	9b00      	ldr	r3, [sp, #0]
 8000a36:	4059      	eors	r1, r3
 8000a38:	b2cb      	uxtb	r3, r1
 8000a3a:	9303      	str	r3, [sp, #12]
 8000a3c:	2d0a      	cmp	r5, #10
 8000a3e:	dd00      	ble.n	8000a42 <__aeabi_dmul+0x1ae>
 8000a40:	e133      	b.n	8000caa <__aeabi_dmul+0x416>
 8000a42:	2301      	movs	r3, #1
 8000a44:	40ab      	lsls	r3, r5
 8000a46:	001d      	movs	r5, r3
 8000a48:	2303      	movs	r3, #3
 8000a4a:	9302      	str	r3, [sp, #8]
 8000a4c:	2288      	movs	r2, #136	@ 0x88
 8000a4e:	422a      	tst	r2, r5
 8000a50:	d197      	bne.n	8000982 <__aeabi_dmul+0xee>
 8000a52:	4642      	mov	r2, r8
 8000a54:	4643      	mov	r3, r8
 8000a56:	0412      	lsls	r2, r2, #16
 8000a58:	0c12      	lsrs	r2, r2, #16
 8000a5a:	0016      	movs	r6, r2
 8000a5c:	9801      	ldr	r0, [sp, #4]
 8000a5e:	0c1d      	lsrs	r5, r3, #16
 8000a60:	0c03      	lsrs	r3, r0, #16
 8000a62:	0400      	lsls	r0, r0, #16
 8000a64:	0c00      	lsrs	r0, r0, #16
 8000a66:	4346      	muls	r6, r0
 8000a68:	46b4      	mov	ip, r6
 8000a6a:	001e      	movs	r6, r3
 8000a6c:	436e      	muls	r6, r5
 8000a6e:	9600      	str	r6, [sp, #0]
 8000a70:	0016      	movs	r6, r2
 8000a72:	0007      	movs	r7, r0
 8000a74:	435e      	muls	r6, r3
 8000a76:	4661      	mov	r1, ip
 8000a78:	46b0      	mov	r8, r6
 8000a7a:	436f      	muls	r7, r5
 8000a7c:	0c0e      	lsrs	r6, r1, #16
 8000a7e:	44b8      	add	r8, r7
 8000a80:	4446      	add	r6, r8
 8000a82:	42b7      	cmp	r7, r6
 8000a84:	d905      	bls.n	8000a92 <__aeabi_dmul+0x1fe>
 8000a86:	2180      	movs	r1, #128	@ 0x80
 8000a88:	0249      	lsls	r1, r1, #9
 8000a8a:	4688      	mov	r8, r1
 8000a8c:	9f00      	ldr	r7, [sp, #0]
 8000a8e:	4447      	add	r7, r8
 8000a90:	9700      	str	r7, [sp, #0]
 8000a92:	4661      	mov	r1, ip
 8000a94:	0409      	lsls	r1, r1, #16
 8000a96:	0c09      	lsrs	r1, r1, #16
 8000a98:	0c37      	lsrs	r7, r6, #16
 8000a9a:	0436      	lsls	r6, r6, #16
 8000a9c:	468c      	mov	ip, r1
 8000a9e:	0031      	movs	r1, r6
 8000aa0:	4461      	add	r1, ip
 8000aa2:	9101      	str	r1, [sp, #4]
 8000aa4:	0011      	movs	r1, r2
 8000aa6:	0c26      	lsrs	r6, r4, #16
 8000aa8:	0424      	lsls	r4, r4, #16
 8000aaa:	0c24      	lsrs	r4, r4, #16
 8000aac:	4361      	muls	r1, r4
 8000aae:	468c      	mov	ip, r1
 8000ab0:	0021      	movs	r1, r4
 8000ab2:	4369      	muls	r1, r5
 8000ab4:	4689      	mov	r9, r1
 8000ab6:	4661      	mov	r1, ip
 8000ab8:	0c09      	lsrs	r1, r1, #16
 8000aba:	4688      	mov	r8, r1
 8000abc:	4372      	muls	r2, r6
 8000abe:	444a      	add	r2, r9
 8000ac0:	4442      	add	r2, r8
 8000ac2:	4375      	muls	r5, r6
 8000ac4:	4591      	cmp	r9, r2
 8000ac6:	d903      	bls.n	8000ad0 <__aeabi_dmul+0x23c>
 8000ac8:	2180      	movs	r1, #128	@ 0x80
 8000aca:	0249      	lsls	r1, r1, #9
 8000acc:	4688      	mov	r8, r1
 8000ace:	4445      	add	r5, r8
 8000ad0:	0c11      	lsrs	r1, r2, #16
 8000ad2:	4688      	mov	r8, r1
 8000ad4:	4661      	mov	r1, ip
 8000ad6:	0409      	lsls	r1, r1, #16
 8000ad8:	0c09      	lsrs	r1, r1, #16
 8000ada:	468c      	mov	ip, r1
 8000adc:	0412      	lsls	r2, r2, #16
 8000ade:	4462      	add	r2, ip
 8000ae0:	18b9      	adds	r1, r7, r2
 8000ae2:	9102      	str	r1, [sp, #8]
 8000ae4:	4651      	mov	r1, sl
 8000ae6:	0c09      	lsrs	r1, r1, #16
 8000ae8:	468c      	mov	ip, r1
 8000aea:	4651      	mov	r1, sl
 8000aec:	040f      	lsls	r7, r1, #16
 8000aee:	0c3f      	lsrs	r7, r7, #16
 8000af0:	0039      	movs	r1, r7
 8000af2:	4341      	muls	r1, r0
 8000af4:	4445      	add	r5, r8
 8000af6:	4688      	mov	r8, r1
 8000af8:	4661      	mov	r1, ip
 8000afa:	4341      	muls	r1, r0
 8000afc:	468a      	mov	sl, r1
 8000afe:	4641      	mov	r1, r8
 8000b00:	4660      	mov	r0, ip
 8000b02:	0c09      	lsrs	r1, r1, #16
 8000b04:	4689      	mov	r9, r1
 8000b06:	4358      	muls	r0, r3
 8000b08:	437b      	muls	r3, r7
 8000b0a:	4453      	add	r3, sl
 8000b0c:	444b      	add	r3, r9
 8000b0e:	459a      	cmp	sl, r3
 8000b10:	d903      	bls.n	8000b1a <__aeabi_dmul+0x286>
 8000b12:	2180      	movs	r1, #128	@ 0x80
 8000b14:	0249      	lsls	r1, r1, #9
 8000b16:	4689      	mov	r9, r1
 8000b18:	4448      	add	r0, r9
 8000b1a:	0c19      	lsrs	r1, r3, #16
 8000b1c:	4689      	mov	r9, r1
 8000b1e:	4641      	mov	r1, r8
 8000b20:	0409      	lsls	r1, r1, #16
 8000b22:	0c09      	lsrs	r1, r1, #16
 8000b24:	4688      	mov	r8, r1
 8000b26:	0039      	movs	r1, r7
 8000b28:	4361      	muls	r1, r4
 8000b2a:	041b      	lsls	r3, r3, #16
 8000b2c:	4443      	add	r3, r8
 8000b2e:	4688      	mov	r8, r1
 8000b30:	4661      	mov	r1, ip
 8000b32:	434c      	muls	r4, r1
 8000b34:	4371      	muls	r1, r6
 8000b36:	468c      	mov	ip, r1
 8000b38:	4641      	mov	r1, r8
 8000b3a:	4377      	muls	r7, r6
 8000b3c:	0c0e      	lsrs	r6, r1, #16
 8000b3e:	193f      	adds	r7, r7, r4
 8000b40:	19f6      	adds	r6, r6, r7
 8000b42:	4448      	add	r0, r9
 8000b44:	42b4      	cmp	r4, r6
 8000b46:	d903      	bls.n	8000b50 <__aeabi_dmul+0x2bc>
 8000b48:	2180      	movs	r1, #128	@ 0x80
 8000b4a:	0249      	lsls	r1, r1, #9
 8000b4c:	4689      	mov	r9, r1
 8000b4e:	44cc      	add	ip, r9
 8000b50:	9902      	ldr	r1, [sp, #8]
 8000b52:	9f00      	ldr	r7, [sp, #0]
 8000b54:	4689      	mov	r9, r1
 8000b56:	0431      	lsls	r1, r6, #16
 8000b58:	444f      	add	r7, r9
 8000b5a:	4689      	mov	r9, r1
 8000b5c:	4641      	mov	r1, r8
 8000b5e:	4297      	cmp	r7, r2
 8000b60:	4192      	sbcs	r2, r2
 8000b62:	040c      	lsls	r4, r1, #16
 8000b64:	0c24      	lsrs	r4, r4, #16
 8000b66:	444c      	add	r4, r9
 8000b68:	18ff      	adds	r7, r7, r3
 8000b6a:	4252      	negs	r2, r2
 8000b6c:	1964      	adds	r4, r4, r5
 8000b6e:	18a1      	adds	r1, r4, r2
 8000b70:	429f      	cmp	r7, r3
 8000b72:	419b      	sbcs	r3, r3
 8000b74:	4688      	mov	r8, r1
 8000b76:	4682      	mov	sl, r0
 8000b78:	425b      	negs	r3, r3
 8000b7a:	4699      	mov	r9, r3
 8000b7c:	4590      	cmp	r8, r2
 8000b7e:	4192      	sbcs	r2, r2
 8000b80:	42ac      	cmp	r4, r5
 8000b82:	41a4      	sbcs	r4, r4
 8000b84:	44c2      	add	sl, r8
 8000b86:	44d1      	add	r9, sl
 8000b88:	4252      	negs	r2, r2
 8000b8a:	4264      	negs	r4, r4
 8000b8c:	4314      	orrs	r4, r2
 8000b8e:	4599      	cmp	r9, r3
 8000b90:	419b      	sbcs	r3, r3
 8000b92:	4582      	cmp	sl, r0
 8000b94:	4192      	sbcs	r2, r2
 8000b96:	425b      	negs	r3, r3
 8000b98:	4252      	negs	r2, r2
 8000b9a:	4313      	orrs	r3, r2
 8000b9c:	464a      	mov	r2, r9
 8000b9e:	0c36      	lsrs	r6, r6, #16
 8000ba0:	19a4      	adds	r4, r4, r6
 8000ba2:	18e3      	adds	r3, r4, r3
 8000ba4:	4463      	add	r3, ip
 8000ba6:	025b      	lsls	r3, r3, #9
 8000ba8:	0dd2      	lsrs	r2, r2, #23
 8000baa:	431a      	orrs	r2, r3
 8000bac:	9901      	ldr	r1, [sp, #4]
 8000bae:	4692      	mov	sl, r2
 8000bb0:	027a      	lsls	r2, r7, #9
 8000bb2:	430a      	orrs	r2, r1
 8000bb4:	1e50      	subs	r0, r2, #1
 8000bb6:	4182      	sbcs	r2, r0
 8000bb8:	0dff      	lsrs	r7, r7, #23
 8000bba:	4317      	orrs	r7, r2
 8000bbc:	464a      	mov	r2, r9
 8000bbe:	0252      	lsls	r2, r2, #9
 8000bc0:	4317      	orrs	r7, r2
 8000bc2:	46b8      	mov	r8, r7
 8000bc4:	01db      	lsls	r3, r3, #7
 8000bc6:	d500      	bpl.n	8000bca <__aeabi_dmul+0x336>
 8000bc8:	e6ed      	b.n	80009a6 <__aeabi_dmul+0x112>
 8000bca:	4b0d      	ldr	r3, [pc, #52]	@ (8000c00 <__aeabi_dmul+0x36c>)
 8000bcc:	9a03      	ldr	r2, [sp, #12]
 8000bce:	445b      	add	r3, fp
 8000bd0:	4691      	mov	r9, r2
 8000bd2:	2b00      	cmp	r3, #0
 8000bd4:	dc00      	bgt.n	8000bd8 <__aeabi_dmul+0x344>
 8000bd6:	e0ac      	b.n	8000d32 <__aeabi_dmul+0x49e>
 8000bd8:	003a      	movs	r2, r7
 8000bda:	0752      	lsls	r2, r2, #29
 8000bdc:	d100      	bne.n	8000be0 <__aeabi_dmul+0x34c>
 8000bde:	e710      	b.n	8000a02 <__aeabi_dmul+0x16e>
 8000be0:	220f      	movs	r2, #15
 8000be2:	4658      	mov	r0, fp
 8000be4:	403a      	ands	r2, r7
 8000be6:	2a04      	cmp	r2, #4
 8000be8:	d000      	beq.n	8000bec <__aeabi_dmul+0x358>
 8000bea:	e6f9      	b.n	80009e0 <__aeabi_dmul+0x14c>
 8000bec:	e709      	b.n	8000a02 <__aeabi_dmul+0x16e>
 8000bee:	46c0      	nop			@ (mov r8, r8)
 8000bf0:	000007ff 	.word	0x000007ff
 8000bf4:	fffffc01 	.word	0xfffffc01
 8000bf8:	feffffff 	.word	0xfeffffff
 8000bfc:	000007fe 	.word	0x000007fe
 8000c00:	000003ff 	.word	0x000003ff
 8000c04:	0022      	movs	r2, r4
 8000c06:	4332      	orrs	r2, r6
 8000c08:	d06f      	beq.n	8000cea <__aeabi_dmul+0x456>
 8000c0a:	2c00      	cmp	r4, #0
 8000c0c:	d100      	bne.n	8000c10 <__aeabi_dmul+0x37c>
 8000c0e:	e0c2      	b.n	8000d96 <__aeabi_dmul+0x502>
 8000c10:	0020      	movs	r0, r4
 8000c12:	f000 fdfb 	bl	800180c <__clzsi2>
 8000c16:	0002      	movs	r2, r0
 8000c18:	0003      	movs	r3, r0
 8000c1a:	3a0b      	subs	r2, #11
 8000c1c:	201d      	movs	r0, #29
 8000c1e:	1a82      	subs	r2, r0, r2
 8000c20:	0030      	movs	r0, r6
 8000c22:	0019      	movs	r1, r3
 8000c24:	40d0      	lsrs	r0, r2
 8000c26:	3908      	subs	r1, #8
 8000c28:	408c      	lsls	r4, r1
 8000c2a:	0002      	movs	r2, r0
 8000c2c:	4322      	orrs	r2, r4
 8000c2e:	0034      	movs	r4, r6
 8000c30:	408c      	lsls	r4, r1
 8000c32:	4659      	mov	r1, fp
 8000c34:	1acb      	subs	r3, r1, r3
 8000c36:	4986      	ldr	r1, [pc, #536]	@ (8000e50 <__aeabi_dmul+0x5bc>)
 8000c38:	468b      	mov	fp, r1
 8000c3a:	449b      	add	fp, r3
 8000c3c:	2d0a      	cmp	r5, #10
 8000c3e:	dd00      	ble.n	8000c42 <__aeabi_dmul+0x3ae>
 8000c40:	e6a4      	b.n	800098c <__aeabi_dmul+0xf8>
 8000c42:	4649      	mov	r1, r9
 8000c44:	9b00      	ldr	r3, [sp, #0]
 8000c46:	9401      	str	r4, [sp, #4]
 8000c48:	4059      	eors	r1, r3
 8000c4a:	b2cb      	uxtb	r3, r1
 8000c4c:	0014      	movs	r4, r2
 8000c4e:	2000      	movs	r0, #0
 8000c50:	9303      	str	r3, [sp, #12]
 8000c52:	2d02      	cmp	r5, #2
 8000c54:	dd00      	ble.n	8000c58 <__aeabi_dmul+0x3c4>
 8000c56:	e667      	b.n	8000928 <__aeabi_dmul+0x94>
 8000c58:	e6fb      	b.n	8000a52 <__aeabi_dmul+0x1be>
 8000c5a:	4653      	mov	r3, sl
 8000c5c:	4303      	orrs	r3, r0
 8000c5e:	4698      	mov	r8, r3
 8000c60:	d03c      	beq.n	8000cdc <__aeabi_dmul+0x448>
 8000c62:	4653      	mov	r3, sl
 8000c64:	2b00      	cmp	r3, #0
 8000c66:	d100      	bne.n	8000c6a <__aeabi_dmul+0x3d6>
 8000c68:	e0a3      	b.n	8000db2 <__aeabi_dmul+0x51e>
 8000c6a:	4650      	mov	r0, sl
 8000c6c:	f000 fdce 	bl	800180c <__clzsi2>
 8000c70:	230b      	movs	r3, #11
 8000c72:	425b      	negs	r3, r3
 8000c74:	469c      	mov	ip, r3
 8000c76:	0002      	movs	r2, r0
 8000c78:	4484      	add	ip, r0
 8000c7a:	0011      	movs	r1, r2
 8000c7c:	4650      	mov	r0, sl
 8000c7e:	3908      	subs	r1, #8
 8000c80:	4088      	lsls	r0, r1
 8000c82:	231d      	movs	r3, #29
 8000c84:	4680      	mov	r8, r0
 8000c86:	4660      	mov	r0, ip
 8000c88:	1a1b      	subs	r3, r3, r0
 8000c8a:	0020      	movs	r0, r4
 8000c8c:	40d8      	lsrs	r0, r3
 8000c8e:	0003      	movs	r3, r0
 8000c90:	4640      	mov	r0, r8
 8000c92:	4303      	orrs	r3, r0
 8000c94:	469a      	mov	sl, r3
 8000c96:	0023      	movs	r3, r4
 8000c98:	408b      	lsls	r3, r1
 8000c9a:	4698      	mov	r8, r3
 8000c9c:	4b6c      	ldr	r3, [pc, #432]	@ (8000e50 <__aeabi_dmul+0x5bc>)
 8000c9e:	2500      	movs	r5, #0
 8000ca0:	1a9b      	subs	r3, r3, r2
 8000ca2:	469b      	mov	fp, r3
 8000ca4:	2300      	movs	r3, #0
 8000ca6:	9302      	str	r3, [sp, #8]
 8000ca8:	e61a      	b.n	80008e0 <__aeabi_dmul+0x4c>
 8000caa:	2d0f      	cmp	r5, #15
 8000cac:	d000      	beq.n	8000cb0 <__aeabi_dmul+0x41c>
 8000cae:	e0c9      	b.n	8000e44 <__aeabi_dmul+0x5b0>
 8000cb0:	2380      	movs	r3, #128	@ 0x80
 8000cb2:	4652      	mov	r2, sl
 8000cb4:	031b      	lsls	r3, r3, #12
 8000cb6:	421a      	tst	r2, r3
 8000cb8:	d002      	beq.n	8000cc0 <__aeabi_dmul+0x42c>
 8000cba:	421c      	tst	r4, r3
 8000cbc:	d100      	bne.n	8000cc0 <__aeabi_dmul+0x42c>
 8000cbe:	e092      	b.n	8000de6 <__aeabi_dmul+0x552>
 8000cc0:	2480      	movs	r4, #128	@ 0x80
 8000cc2:	4653      	mov	r3, sl
 8000cc4:	0324      	lsls	r4, r4, #12
 8000cc6:	431c      	orrs	r4, r3
 8000cc8:	0324      	lsls	r4, r4, #12
 8000cca:	4642      	mov	r2, r8
 8000ccc:	0b24      	lsrs	r4, r4, #12
 8000cce:	e63e      	b.n	800094e <__aeabi_dmul+0xba>
 8000cd0:	469b      	mov	fp, r3
 8000cd2:	2303      	movs	r3, #3
 8000cd4:	4680      	mov	r8, r0
 8000cd6:	250c      	movs	r5, #12
 8000cd8:	9302      	str	r3, [sp, #8]
 8000cda:	e601      	b.n	80008e0 <__aeabi_dmul+0x4c>
 8000cdc:	2300      	movs	r3, #0
 8000cde:	469a      	mov	sl, r3
 8000ce0:	469b      	mov	fp, r3
 8000ce2:	3301      	adds	r3, #1
 8000ce4:	2504      	movs	r5, #4
 8000ce6:	9302      	str	r3, [sp, #8]
 8000ce8:	e5fa      	b.n	80008e0 <__aeabi_dmul+0x4c>
 8000cea:	2101      	movs	r1, #1
 8000cec:	430d      	orrs	r5, r1
 8000cee:	2d0a      	cmp	r5, #10
 8000cf0:	dd00      	ble.n	8000cf4 <__aeabi_dmul+0x460>
 8000cf2:	e64b      	b.n	800098c <__aeabi_dmul+0xf8>
 8000cf4:	4649      	mov	r1, r9
 8000cf6:	9800      	ldr	r0, [sp, #0]
 8000cf8:	4041      	eors	r1, r0
 8000cfa:	b2c9      	uxtb	r1, r1
 8000cfc:	9103      	str	r1, [sp, #12]
 8000cfe:	2d02      	cmp	r5, #2
 8000d00:	dc00      	bgt.n	8000d04 <__aeabi_dmul+0x470>
 8000d02:	e096      	b.n	8000e32 <__aeabi_dmul+0x59e>
 8000d04:	2300      	movs	r3, #0
 8000d06:	2400      	movs	r4, #0
 8000d08:	2001      	movs	r0, #1
 8000d0a:	9301      	str	r3, [sp, #4]
 8000d0c:	e60c      	b.n	8000928 <__aeabi_dmul+0x94>
 8000d0e:	4649      	mov	r1, r9
 8000d10:	2302      	movs	r3, #2
 8000d12:	9a00      	ldr	r2, [sp, #0]
 8000d14:	432b      	orrs	r3, r5
 8000d16:	4051      	eors	r1, r2
 8000d18:	b2ca      	uxtb	r2, r1
 8000d1a:	9203      	str	r2, [sp, #12]
 8000d1c:	2b0a      	cmp	r3, #10
 8000d1e:	dd00      	ble.n	8000d22 <__aeabi_dmul+0x48e>
 8000d20:	e634      	b.n	800098c <__aeabi_dmul+0xf8>
 8000d22:	2d00      	cmp	r5, #0
 8000d24:	d157      	bne.n	8000dd6 <__aeabi_dmul+0x542>
 8000d26:	9b03      	ldr	r3, [sp, #12]
 8000d28:	4699      	mov	r9, r3
 8000d2a:	2400      	movs	r4, #0
 8000d2c:	2200      	movs	r2, #0
 8000d2e:	4b49      	ldr	r3, [pc, #292]	@ (8000e54 <__aeabi_dmul+0x5c0>)
 8000d30:	e60e      	b.n	8000950 <__aeabi_dmul+0xbc>
 8000d32:	4658      	mov	r0, fp
 8000d34:	2101      	movs	r1, #1
 8000d36:	1ac9      	subs	r1, r1, r3
 8000d38:	2938      	cmp	r1, #56	@ 0x38
 8000d3a:	dd00      	ble.n	8000d3e <__aeabi_dmul+0x4aa>
 8000d3c:	e62f      	b.n	800099e <__aeabi_dmul+0x10a>
 8000d3e:	291f      	cmp	r1, #31
 8000d40:	dd56      	ble.n	8000df0 <__aeabi_dmul+0x55c>
 8000d42:	221f      	movs	r2, #31
 8000d44:	4654      	mov	r4, sl
 8000d46:	4252      	negs	r2, r2
 8000d48:	1ad3      	subs	r3, r2, r3
 8000d4a:	40dc      	lsrs	r4, r3
 8000d4c:	2920      	cmp	r1, #32
 8000d4e:	d007      	beq.n	8000d60 <__aeabi_dmul+0x4cc>
 8000d50:	4b41      	ldr	r3, [pc, #260]	@ (8000e58 <__aeabi_dmul+0x5c4>)
 8000d52:	4642      	mov	r2, r8
 8000d54:	469c      	mov	ip, r3
 8000d56:	4653      	mov	r3, sl
 8000d58:	4460      	add	r0, ip
 8000d5a:	4083      	lsls	r3, r0
 8000d5c:	431a      	orrs	r2, r3
 8000d5e:	4690      	mov	r8, r2
 8000d60:	4642      	mov	r2, r8
 8000d62:	2107      	movs	r1, #7
 8000d64:	1e53      	subs	r3, r2, #1
 8000d66:	419a      	sbcs	r2, r3
 8000d68:	000b      	movs	r3, r1
 8000d6a:	4322      	orrs	r2, r4
 8000d6c:	4013      	ands	r3, r2
 8000d6e:	2400      	movs	r4, #0
 8000d70:	4211      	tst	r1, r2
 8000d72:	d009      	beq.n	8000d88 <__aeabi_dmul+0x4f4>
 8000d74:	230f      	movs	r3, #15
 8000d76:	4013      	ands	r3, r2
 8000d78:	2b04      	cmp	r3, #4
 8000d7a:	d05d      	beq.n	8000e38 <__aeabi_dmul+0x5a4>
 8000d7c:	1d11      	adds	r1, r2, #4
 8000d7e:	4291      	cmp	r1, r2
 8000d80:	419b      	sbcs	r3, r3
 8000d82:	000a      	movs	r2, r1
 8000d84:	425b      	negs	r3, r3
 8000d86:	075b      	lsls	r3, r3, #29
 8000d88:	08d2      	lsrs	r2, r2, #3
 8000d8a:	431a      	orrs	r2, r3
 8000d8c:	2300      	movs	r3, #0
 8000d8e:	e5df      	b.n	8000950 <__aeabi_dmul+0xbc>
 8000d90:	9b03      	ldr	r3, [sp, #12]
 8000d92:	4699      	mov	r9, r3
 8000d94:	e5fa      	b.n	800098c <__aeabi_dmul+0xf8>
 8000d96:	9801      	ldr	r0, [sp, #4]
 8000d98:	f000 fd38 	bl	800180c <__clzsi2>
 8000d9c:	0002      	movs	r2, r0
 8000d9e:	0003      	movs	r3, r0
 8000da0:	3215      	adds	r2, #21
 8000da2:	3320      	adds	r3, #32
 8000da4:	2a1c      	cmp	r2, #28
 8000da6:	dc00      	bgt.n	8000daa <__aeabi_dmul+0x516>
 8000da8:	e738      	b.n	8000c1c <__aeabi_dmul+0x388>
 8000daa:	9a01      	ldr	r2, [sp, #4]
 8000dac:	3808      	subs	r0, #8
 8000dae:	4082      	lsls	r2, r0
 8000db0:	e73f      	b.n	8000c32 <__aeabi_dmul+0x39e>
 8000db2:	f000 fd2b 	bl	800180c <__clzsi2>
 8000db6:	2315      	movs	r3, #21
 8000db8:	469c      	mov	ip, r3
 8000dba:	4484      	add	ip, r0
 8000dbc:	0002      	movs	r2, r0
 8000dbe:	4663      	mov	r3, ip
 8000dc0:	3220      	adds	r2, #32
 8000dc2:	2b1c      	cmp	r3, #28
 8000dc4:	dc00      	bgt.n	8000dc8 <__aeabi_dmul+0x534>
 8000dc6:	e758      	b.n	8000c7a <__aeabi_dmul+0x3e6>
 8000dc8:	2300      	movs	r3, #0
 8000dca:	4698      	mov	r8, r3
 8000dcc:	0023      	movs	r3, r4
 8000dce:	3808      	subs	r0, #8
 8000dd0:	4083      	lsls	r3, r0
 8000dd2:	469a      	mov	sl, r3
 8000dd4:	e762      	b.n	8000c9c <__aeabi_dmul+0x408>
 8000dd6:	001d      	movs	r5, r3
 8000dd8:	2300      	movs	r3, #0
 8000dda:	2400      	movs	r4, #0
 8000ddc:	2002      	movs	r0, #2
 8000dde:	9301      	str	r3, [sp, #4]
 8000de0:	e5a2      	b.n	8000928 <__aeabi_dmul+0x94>
 8000de2:	9002      	str	r0, [sp, #8]
 8000de4:	e632      	b.n	8000a4c <__aeabi_dmul+0x1b8>
 8000de6:	431c      	orrs	r4, r3
 8000de8:	9b00      	ldr	r3, [sp, #0]
 8000dea:	9a01      	ldr	r2, [sp, #4]
 8000dec:	4699      	mov	r9, r3
 8000dee:	e5ae      	b.n	800094e <__aeabi_dmul+0xba>
 8000df0:	4b1a      	ldr	r3, [pc, #104]	@ (8000e5c <__aeabi_dmul+0x5c8>)
 8000df2:	4652      	mov	r2, sl
 8000df4:	18c3      	adds	r3, r0, r3
 8000df6:	4640      	mov	r0, r8
 8000df8:	409a      	lsls	r2, r3
 8000dfa:	40c8      	lsrs	r0, r1
 8000dfc:	4302      	orrs	r2, r0
 8000dfe:	4640      	mov	r0, r8
 8000e00:	4098      	lsls	r0, r3
 8000e02:	0003      	movs	r3, r0
 8000e04:	1e58      	subs	r0, r3, #1
 8000e06:	4183      	sbcs	r3, r0
 8000e08:	4654      	mov	r4, sl
 8000e0a:	431a      	orrs	r2, r3
 8000e0c:	40cc      	lsrs	r4, r1
 8000e0e:	0753      	lsls	r3, r2, #29
 8000e10:	d009      	beq.n	8000e26 <__aeabi_dmul+0x592>
 8000e12:	230f      	movs	r3, #15
 8000e14:	4013      	ands	r3, r2
 8000e16:	2b04      	cmp	r3, #4
 8000e18:	d005      	beq.n	8000e26 <__aeabi_dmul+0x592>
 8000e1a:	1d13      	adds	r3, r2, #4
 8000e1c:	4293      	cmp	r3, r2
 8000e1e:	4192      	sbcs	r2, r2
 8000e20:	4252      	negs	r2, r2
 8000e22:	18a4      	adds	r4, r4, r2
 8000e24:	001a      	movs	r2, r3
 8000e26:	0223      	lsls	r3, r4, #8
 8000e28:	d508      	bpl.n	8000e3c <__aeabi_dmul+0x5a8>
 8000e2a:	2301      	movs	r3, #1
 8000e2c:	2400      	movs	r4, #0
 8000e2e:	2200      	movs	r2, #0
 8000e30:	e58e      	b.n	8000950 <__aeabi_dmul+0xbc>
 8000e32:	4689      	mov	r9, r1
 8000e34:	2400      	movs	r4, #0
 8000e36:	e58b      	b.n	8000950 <__aeabi_dmul+0xbc>
 8000e38:	2300      	movs	r3, #0
 8000e3a:	e7a5      	b.n	8000d88 <__aeabi_dmul+0x4f4>
 8000e3c:	0763      	lsls	r3, r4, #29
 8000e3e:	0264      	lsls	r4, r4, #9
 8000e40:	0b24      	lsrs	r4, r4, #12
 8000e42:	e7a1      	b.n	8000d88 <__aeabi_dmul+0x4f4>
 8000e44:	9b00      	ldr	r3, [sp, #0]
 8000e46:	46a2      	mov	sl, r4
 8000e48:	4699      	mov	r9, r3
 8000e4a:	9b01      	ldr	r3, [sp, #4]
 8000e4c:	4698      	mov	r8, r3
 8000e4e:	e737      	b.n	8000cc0 <__aeabi_dmul+0x42c>
 8000e50:	fffffc0d 	.word	0xfffffc0d
 8000e54:	000007ff 	.word	0x000007ff
 8000e58:	0000043e 	.word	0x0000043e
 8000e5c:	0000041e 	.word	0x0000041e

08000e60 <__aeabi_dsub>:
 8000e60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e62:	4657      	mov	r7, sl
 8000e64:	464e      	mov	r6, r9
 8000e66:	4645      	mov	r5, r8
 8000e68:	46de      	mov	lr, fp
 8000e6a:	b5e0      	push	{r5, r6, r7, lr}
 8000e6c:	b083      	sub	sp, #12
 8000e6e:	9000      	str	r0, [sp, #0]
 8000e70:	9101      	str	r1, [sp, #4]
 8000e72:	030c      	lsls	r4, r1, #12
 8000e74:	004d      	lsls	r5, r1, #1
 8000e76:	0fce      	lsrs	r6, r1, #31
 8000e78:	0a61      	lsrs	r1, r4, #9
 8000e7a:	9c00      	ldr	r4, [sp, #0]
 8000e7c:	005f      	lsls	r7, r3, #1
 8000e7e:	0f64      	lsrs	r4, r4, #29
 8000e80:	430c      	orrs	r4, r1
 8000e82:	9900      	ldr	r1, [sp, #0]
 8000e84:	9200      	str	r2, [sp, #0]
 8000e86:	9301      	str	r3, [sp, #4]
 8000e88:	00c8      	lsls	r0, r1, #3
 8000e8a:	0319      	lsls	r1, r3, #12
 8000e8c:	0d7b      	lsrs	r3, r7, #21
 8000e8e:	4699      	mov	r9, r3
 8000e90:	9b01      	ldr	r3, [sp, #4]
 8000e92:	4fcc      	ldr	r7, [pc, #816]	@ (80011c4 <__aeabi_dsub+0x364>)
 8000e94:	0fdb      	lsrs	r3, r3, #31
 8000e96:	469c      	mov	ip, r3
 8000e98:	0a4b      	lsrs	r3, r1, #9
 8000e9a:	9900      	ldr	r1, [sp, #0]
 8000e9c:	4680      	mov	r8, r0
 8000e9e:	0f49      	lsrs	r1, r1, #29
 8000ea0:	4319      	orrs	r1, r3
 8000ea2:	9b00      	ldr	r3, [sp, #0]
 8000ea4:	468b      	mov	fp, r1
 8000ea6:	00da      	lsls	r2, r3, #3
 8000ea8:	4692      	mov	sl, r2
 8000eaa:	0d6d      	lsrs	r5, r5, #21
 8000eac:	45b9      	cmp	r9, r7
 8000eae:	d100      	bne.n	8000eb2 <__aeabi_dsub+0x52>
 8000eb0:	e0bf      	b.n	8001032 <__aeabi_dsub+0x1d2>
 8000eb2:	2301      	movs	r3, #1
 8000eb4:	4661      	mov	r1, ip
 8000eb6:	4059      	eors	r1, r3
 8000eb8:	464b      	mov	r3, r9
 8000eba:	468c      	mov	ip, r1
 8000ebc:	1aeb      	subs	r3, r5, r3
 8000ebe:	428e      	cmp	r6, r1
 8000ec0:	d075      	beq.n	8000fae <__aeabi_dsub+0x14e>
 8000ec2:	2b00      	cmp	r3, #0
 8000ec4:	dc00      	bgt.n	8000ec8 <__aeabi_dsub+0x68>
 8000ec6:	e2a3      	b.n	8001410 <__aeabi_dsub+0x5b0>
 8000ec8:	4649      	mov	r1, r9
 8000eca:	2900      	cmp	r1, #0
 8000ecc:	d100      	bne.n	8000ed0 <__aeabi_dsub+0x70>
 8000ece:	e0ce      	b.n	800106e <__aeabi_dsub+0x20e>
 8000ed0:	42bd      	cmp	r5, r7
 8000ed2:	d100      	bne.n	8000ed6 <__aeabi_dsub+0x76>
 8000ed4:	e200      	b.n	80012d8 <__aeabi_dsub+0x478>
 8000ed6:	2701      	movs	r7, #1
 8000ed8:	2b38      	cmp	r3, #56	@ 0x38
 8000eda:	dc19      	bgt.n	8000f10 <__aeabi_dsub+0xb0>
 8000edc:	2780      	movs	r7, #128	@ 0x80
 8000ede:	4659      	mov	r1, fp
 8000ee0:	043f      	lsls	r7, r7, #16
 8000ee2:	4339      	orrs	r1, r7
 8000ee4:	468b      	mov	fp, r1
 8000ee6:	2b1f      	cmp	r3, #31
 8000ee8:	dd00      	ble.n	8000eec <__aeabi_dsub+0x8c>
 8000eea:	e1fa      	b.n	80012e2 <__aeabi_dsub+0x482>
 8000eec:	2720      	movs	r7, #32
 8000eee:	1af9      	subs	r1, r7, r3
 8000ef0:	468c      	mov	ip, r1
 8000ef2:	4659      	mov	r1, fp
 8000ef4:	4667      	mov	r7, ip
 8000ef6:	40b9      	lsls	r1, r7
 8000ef8:	000f      	movs	r7, r1
 8000efa:	0011      	movs	r1, r2
 8000efc:	40d9      	lsrs	r1, r3
 8000efe:	430f      	orrs	r7, r1
 8000f00:	4661      	mov	r1, ip
 8000f02:	408a      	lsls	r2, r1
 8000f04:	1e51      	subs	r1, r2, #1
 8000f06:	418a      	sbcs	r2, r1
 8000f08:	4659      	mov	r1, fp
 8000f0a:	40d9      	lsrs	r1, r3
 8000f0c:	4317      	orrs	r7, r2
 8000f0e:	1a64      	subs	r4, r4, r1
 8000f10:	1bc7      	subs	r7, r0, r7
 8000f12:	42b8      	cmp	r0, r7
 8000f14:	4180      	sbcs	r0, r0
 8000f16:	4240      	negs	r0, r0
 8000f18:	1a24      	subs	r4, r4, r0
 8000f1a:	0223      	lsls	r3, r4, #8
 8000f1c:	d400      	bmi.n	8000f20 <__aeabi_dsub+0xc0>
 8000f1e:	e140      	b.n	80011a2 <__aeabi_dsub+0x342>
 8000f20:	0264      	lsls	r4, r4, #9
 8000f22:	0a64      	lsrs	r4, r4, #9
 8000f24:	2c00      	cmp	r4, #0
 8000f26:	d100      	bne.n	8000f2a <__aeabi_dsub+0xca>
 8000f28:	e154      	b.n	80011d4 <__aeabi_dsub+0x374>
 8000f2a:	0020      	movs	r0, r4
 8000f2c:	f000 fc6e 	bl	800180c <__clzsi2>
 8000f30:	0003      	movs	r3, r0
 8000f32:	3b08      	subs	r3, #8
 8000f34:	2120      	movs	r1, #32
 8000f36:	0038      	movs	r0, r7
 8000f38:	1aca      	subs	r2, r1, r3
 8000f3a:	40d0      	lsrs	r0, r2
 8000f3c:	409c      	lsls	r4, r3
 8000f3e:	0002      	movs	r2, r0
 8000f40:	409f      	lsls	r7, r3
 8000f42:	4322      	orrs	r2, r4
 8000f44:	429d      	cmp	r5, r3
 8000f46:	dd00      	ble.n	8000f4a <__aeabi_dsub+0xea>
 8000f48:	e1a6      	b.n	8001298 <__aeabi_dsub+0x438>
 8000f4a:	1b58      	subs	r0, r3, r5
 8000f4c:	3001      	adds	r0, #1
 8000f4e:	1a09      	subs	r1, r1, r0
 8000f50:	003c      	movs	r4, r7
 8000f52:	408f      	lsls	r7, r1
 8000f54:	40c4      	lsrs	r4, r0
 8000f56:	1e7b      	subs	r3, r7, #1
 8000f58:	419f      	sbcs	r7, r3
 8000f5a:	0013      	movs	r3, r2
 8000f5c:	408b      	lsls	r3, r1
 8000f5e:	4327      	orrs	r7, r4
 8000f60:	431f      	orrs	r7, r3
 8000f62:	40c2      	lsrs	r2, r0
 8000f64:	003b      	movs	r3, r7
 8000f66:	0014      	movs	r4, r2
 8000f68:	2500      	movs	r5, #0
 8000f6a:	4313      	orrs	r3, r2
 8000f6c:	d100      	bne.n	8000f70 <__aeabi_dsub+0x110>
 8000f6e:	e1f7      	b.n	8001360 <__aeabi_dsub+0x500>
 8000f70:	077b      	lsls	r3, r7, #29
 8000f72:	d100      	bne.n	8000f76 <__aeabi_dsub+0x116>
 8000f74:	e377      	b.n	8001666 <__aeabi_dsub+0x806>
 8000f76:	230f      	movs	r3, #15
 8000f78:	0038      	movs	r0, r7
 8000f7a:	403b      	ands	r3, r7
 8000f7c:	2b04      	cmp	r3, #4
 8000f7e:	d004      	beq.n	8000f8a <__aeabi_dsub+0x12a>
 8000f80:	1d38      	adds	r0, r7, #4
 8000f82:	42b8      	cmp	r0, r7
 8000f84:	41bf      	sbcs	r7, r7
 8000f86:	427f      	negs	r7, r7
 8000f88:	19e4      	adds	r4, r4, r7
 8000f8a:	0223      	lsls	r3, r4, #8
 8000f8c:	d400      	bmi.n	8000f90 <__aeabi_dsub+0x130>
 8000f8e:	e368      	b.n	8001662 <__aeabi_dsub+0x802>
 8000f90:	4b8c      	ldr	r3, [pc, #560]	@ (80011c4 <__aeabi_dsub+0x364>)
 8000f92:	3501      	adds	r5, #1
 8000f94:	429d      	cmp	r5, r3
 8000f96:	d100      	bne.n	8000f9a <__aeabi_dsub+0x13a>
 8000f98:	e0f4      	b.n	8001184 <__aeabi_dsub+0x324>
 8000f9a:	4b8b      	ldr	r3, [pc, #556]	@ (80011c8 <__aeabi_dsub+0x368>)
 8000f9c:	056d      	lsls	r5, r5, #21
 8000f9e:	401c      	ands	r4, r3
 8000fa0:	0d6d      	lsrs	r5, r5, #21
 8000fa2:	0767      	lsls	r7, r4, #29
 8000fa4:	08c0      	lsrs	r0, r0, #3
 8000fa6:	0264      	lsls	r4, r4, #9
 8000fa8:	4307      	orrs	r7, r0
 8000faa:	0b24      	lsrs	r4, r4, #12
 8000fac:	e0ec      	b.n	8001188 <__aeabi_dsub+0x328>
 8000fae:	2b00      	cmp	r3, #0
 8000fb0:	dc00      	bgt.n	8000fb4 <__aeabi_dsub+0x154>
 8000fb2:	e329      	b.n	8001608 <__aeabi_dsub+0x7a8>
 8000fb4:	4649      	mov	r1, r9
 8000fb6:	2900      	cmp	r1, #0
 8000fb8:	d000      	beq.n	8000fbc <__aeabi_dsub+0x15c>
 8000fba:	e0d6      	b.n	800116a <__aeabi_dsub+0x30a>
 8000fbc:	4659      	mov	r1, fp
 8000fbe:	4311      	orrs	r1, r2
 8000fc0:	d100      	bne.n	8000fc4 <__aeabi_dsub+0x164>
 8000fc2:	e12e      	b.n	8001222 <__aeabi_dsub+0x3c2>
 8000fc4:	1e59      	subs	r1, r3, #1
 8000fc6:	2b01      	cmp	r3, #1
 8000fc8:	d100      	bne.n	8000fcc <__aeabi_dsub+0x16c>
 8000fca:	e1e6      	b.n	800139a <__aeabi_dsub+0x53a>
 8000fcc:	42bb      	cmp	r3, r7
 8000fce:	d100      	bne.n	8000fd2 <__aeabi_dsub+0x172>
 8000fd0:	e182      	b.n	80012d8 <__aeabi_dsub+0x478>
 8000fd2:	2701      	movs	r7, #1
 8000fd4:	000b      	movs	r3, r1
 8000fd6:	2938      	cmp	r1, #56	@ 0x38
 8000fd8:	dc14      	bgt.n	8001004 <__aeabi_dsub+0x1a4>
 8000fda:	2b1f      	cmp	r3, #31
 8000fdc:	dd00      	ble.n	8000fe0 <__aeabi_dsub+0x180>
 8000fde:	e23c      	b.n	800145a <__aeabi_dsub+0x5fa>
 8000fe0:	2720      	movs	r7, #32
 8000fe2:	1af9      	subs	r1, r7, r3
 8000fe4:	468c      	mov	ip, r1
 8000fe6:	4659      	mov	r1, fp
 8000fe8:	4667      	mov	r7, ip
 8000fea:	40b9      	lsls	r1, r7
 8000fec:	000f      	movs	r7, r1
 8000fee:	0011      	movs	r1, r2
 8000ff0:	40d9      	lsrs	r1, r3
 8000ff2:	430f      	orrs	r7, r1
 8000ff4:	4661      	mov	r1, ip
 8000ff6:	408a      	lsls	r2, r1
 8000ff8:	1e51      	subs	r1, r2, #1
 8000ffa:	418a      	sbcs	r2, r1
 8000ffc:	4659      	mov	r1, fp
 8000ffe:	40d9      	lsrs	r1, r3
 8001000:	4317      	orrs	r7, r2
 8001002:	1864      	adds	r4, r4, r1
 8001004:	183f      	adds	r7, r7, r0
 8001006:	4287      	cmp	r7, r0
 8001008:	4180      	sbcs	r0, r0
 800100a:	4240      	negs	r0, r0
 800100c:	1824      	adds	r4, r4, r0
 800100e:	0223      	lsls	r3, r4, #8
 8001010:	d400      	bmi.n	8001014 <__aeabi_dsub+0x1b4>
 8001012:	e0c6      	b.n	80011a2 <__aeabi_dsub+0x342>
 8001014:	4b6b      	ldr	r3, [pc, #428]	@ (80011c4 <__aeabi_dsub+0x364>)
 8001016:	3501      	adds	r5, #1
 8001018:	429d      	cmp	r5, r3
 800101a:	d100      	bne.n	800101e <__aeabi_dsub+0x1be>
 800101c:	e0b2      	b.n	8001184 <__aeabi_dsub+0x324>
 800101e:	2101      	movs	r1, #1
 8001020:	4b69      	ldr	r3, [pc, #420]	@ (80011c8 <__aeabi_dsub+0x368>)
 8001022:	087a      	lsrs	r2, r7, #1
 8001024:	401c      	ands	r4, r3
 8001026:	4039      	ands	r1, r7
 8001028:	430a      	orrs	r2, r1
 800102a:	07e7      	lsls	r7, r4, #31
 800102c:	4317      	orrs	r7, r2
 800102e:	0864      	lsrs	r4, r4, #1
 8001030:	e79e      	b.n	8000f70 <__aeabi_dsub+0x110>
 8001032:	4b66      	ldr	r3, [pc, #408]	@ (80011cc <__aeabi_dsub+0x36c>)
 8001034:	4311      	orrs	r1, r2
 8001036:	468a      	mov	sl, r1
 8001038:	18eb      	adds	r3, r5, r3
 800103a:	2900      	cmp	r1, #0
 800103c:	d028      	beq.n	8001090 <__aeabi_dsub+0x230>
 800103e:	4566      	cmp	r6, ip
 8001040:	d02c      	beq.n	800109c <__aeabi_dsub+0x23c>
 8001042:	2b00      	cmp	r3, #0
 8001044:	d05b      	beq.n	80010fe <__aeabi_dsub+0x29e>
 8001046:	2d00      	cmp	r5, #0
 8001048:	d100      	bne.n	800104c <__aeabi_dsub+0x1ec>
 800104a:	e12c      	b.n	80012a6 <__aeabi_dsub+0x446>
 800104c:	465b      	mov	r3, fp
 800104e:	4666      	mov	r6, ip
 8001050:	075f      	lsls	r7, r3, #29
 8001052:	08d2      	lsrs	r2, r2, #3
 8001054:	4317      	orrs	r7, r2
 8001056:	08dd      	lsrs	r5, r3, #3
 8001058:	003b      	movs	r3, r7
 800105a:	432b      	orrs	r3, r5
 800105c:	d100      	bne.n	8001060 <__aeabi_dsub+0x200>
 800105e:	e0e2      	b.n	8001226 <__aeabi_dsub+0x3c6>
 8001060:	2480      	movs	r4, #128	@ 0x80
 8001062:	0324      	lsls	r4, r4, #12
 8001064:	432c      	orrs	r4, r5
 8001066:	0324      	lsls	r4, r4, #12
 8001068:	4d56      	ldr	r5, [pc, #344]	@ (80011c4 <__aeabi_dsub+0x364>)
 800106a:	0b24      	lsrs	r4, r4, #12
 800106c:	e08c      	b.n	8001188 <__aeabi_dsub+0x328>
 800106e:	4659      	mov	r1, fp
 8001070:	4311      	orrs	r1, r2
 8001072:	d100      	bne.n	8001076 <__aeabi_dsub+0x216>
 8001074:	e0d5      	b.n	8001222 <__aeabi_dsub+0x3c2>
 8001076:	1e59      	subs	r1, r3, #1
 8001078:	2b01      	cmp	r3, #1
 800107a:	d100      	bne.n	800107e <__aeabi_dsub+0x21e>
 800107c:	e1b9      	b.n	80013f2 <__aeabi_dsub+0x592>
 800107e:	42bb      	cmp	r3, r7
 8001080:	d100      	bne.n	8001084 <__aeabi_dsub+0x224>
 8001082:	e1b1      	b.n	80013e8 <__aeabi_dsub+0x588>
 8001084:	2701      	movs	r7, #1
 8001086:	000b      	movs	r3, r1
 8001088:	2938      	cmp	r1, #56	@ 0x38
 800108a:	dd00      	ble.n	800108e <__aeabi_dsub+0x22e>
 800108c:	e740      	b.n	8000f10 <__aeabi_dsub+0xb0>
 800108e:	e72a      	b.n	8000ee6 <__aeabi_dsub+0x86>
 8001090:	4661      	mov	r1, ip
 8001092:	2701      	movs	r7, #1
 8001094:	4079      	eors	r1, r7
 8001096:	468c      	mov	ip, r1
 8001098:	4566      	cmp	r6, ip
 800109a:	d1d2      	bne.n	8001042 <__aeabi_dsub+0x1e2>
 800109c:	2b00      	cmp	r3, #0
 800109e:	d100      	bne.n	80010a2 <__aeabi_dsub+0x242>
 80010a0:	e0c5      	b.n	800122e <__aeabi_dsub+0x3ce>
 80010a2:	2d00      	cmp	r5, #0
 80010a4:	d000      	beq.n	80010a8 <__aeabi_dsub+0x248>
 80010a6:	e155      	b.n	8001354 <__aeabi_dsub+0x4f4>
 80010a8:	464b      	mov	r3, r9
 80010aa:	0025      	movs	r5, r4
 80010ac:	4305      	orrs	r5, r0
 80010ae:	d100      	bne.n	80010b2 <__aeabi_dsub+0x252>
 80010b0:	e212      	b.n	80014d8 <__aeabi_dsub+0x678>
 80010b2:	1e59      	subs	r1, r3, #1
 80010b4:	468c      	mov	ip, r1
 80010b6:	2b01      	cmp	r3, #1
 80010b8:	d100      	bne.n	80010bc <__aeabi_dsub+0x25c>
 80010ba:	e249      	b.n	8001550 <__aeabi_dsub+0x6f0>
 80010bc:	4d41      	ldr	r5, [pc, #260]	@ (80011c4 <__aeabi_dsub+0x364>)
 80010be:	42ab      	cmp	r3, r5
 80010c0:	d100      	bne.n	80010c4 <__aeabi_dsub+0x264>
 80010c2:	e28f      	b.n	80015e4 <__aeabi_dsub+0x784>
 80010c4:	2701      	movs	r7, #1
 80010c6:	2938      	cmp	r1, #56	@ 0x38
 80010c8:	dc11      	bgt.n	80010ee <__aeabi_dsub+0x28e>
 80010ca:	4663      	mov	r3, ip
 80010cc:	2b1f      	cmp	r3, #31
 80010ce:	dd00      	ble.n	80010d2 <__aeabi_dsub+0x272>
 80010d0:	e25b      	b.n	800158a <__aeabi_dsub+0x72a>
 80010d2:	4661      	mov	r1, ip
 80010d4:	2320      	movs	r3, #32
 80010d6:	0027      	movs	r7, r4
 80010d8:	1a5b      	subs	r3, r3, r1
 80010da:	0005      	movs	r5, r0
 80010dc:	4098      	lsls	r0, r3
 80010de:	409f      	lsls	r7, r3
 80010e0:	40cd      	lsrs	r5, r1
 80010e2:	1e43      	subs	r3, r0, #1
 80010e4:	4198      	sbcs	r0, r3
 80010e6:	40cc      	lsrs	r4, r1
 80010e8:	432f      	orrs	r7, r5
 80010ea:	4307      	orrs	r7, r0
 80010ec:	44a3      	add	fp, r4
 80010ee:	18bf      	adds	r7, r7, r2
 80010f0:	4297      	cmp	r7, r2
 80010f2:	4192      	sbcs	r2, r2
 80010f4:	4252      	negs	r2, r2
 80010f6:	445a      	add	r2, fp
 80010f8:	0014      	movs	r4, r2
 80010fa:	464d      	mov	r5, r9
 80010fc:	e787      	b.n	800100e <__aeabi_dsub+0x1ae>
 80010fe:	4f34      	ldr	r7, [pc, #208]	@ (80011d0 <__aeabi_dsub+0x370>)
 8001100:	1c6b      	adds	r3, r5, #1
 8001102:	423b      	tst	r3, r7
 8001104:	d000      	beq.n	8001108 <__aeabi_dsub+0x2a8>
 8001106:	e0b6      	b.n	8001276 <__aeabi_dsub+0x416>
 8001108:	4659      	mov	r1, fp
 800110a:	0023      	movs	r3, r4
 800110c:	4311      	orrs	r1, r2
 800110e:	000f      	movs	r7, r1
 8001110:	4303      	orrs	r3, r0
 8001112:	2d00      	cmp	r5, #0
 8001114:	d000      	beq.n	8001118 <__aeabi_dsub+0x2b8>
 8001116:	e126      	b.n	8001366 <__aeabi_dsub+0x506>
 8001118:	2b00      	cmp	r3, #0
 800111a:	d100      	bne.n	800111e <__aeabi_dsub+0x2be>
 800111c:	e1c0      	b.n	80014a0 <__aeabi_dsub+0x640>
 800111e:	2900      	cmp	r1, #0
 8001120:	d100      	bne.n	8001124 <__aeabi_dsub+0x2c4>
 8001122:	e0a1      	b.n	8001268 <__aeabi_dsub+0x408>
 8001124:	1a83      	subs	r3, r0, r2
 8001126:	4698      	mov	r8, r3
 8001128:	465b      	mov	r3, fp
 800112a:	4540      	cmp	r0, r8
 800112c:	41ad      	sbcs	r5, r5
 800112e:	1ae3      	subs	r3, r4, r3
 8001130:	426d      	negs	r5, r5
 8001132:	1b5b      	subs	r3, r3, r5
 8001134:	2580      	movs	r5, #128	@ 0x80
 8001136:	042d      	lsls	r5, r5, #16
 8001138:	422b      	tst	r3, r5
 800113a:	d100      	bne.n	800113e <__aeabi_dsub+0x2de>
 800113c:	e14b      	b.n	80013d6 <__aeabi_dsub+0x576>
 800113e:	465b      	mov	r3, fp
 8001140:	1a10      	subs	r0, r2, r0
 8001142:	4282      	cmp	r2, r0
 8001144:	4192      	sbcs	r2, r2
 8001146:	1b1c      	subs	r4, r3, r4
 8001148:	0007      	movs	r7, r0
 800114a:	2601      	movs	r6, #1
 800114c:	4663      	mov	r3, ip
 800114e:	4252      	negs	r2, r2
 8001150:	1aa4      	subs	r4, r4, r2
 8001152:	4327      	orrs	r7, r4
 8001154:	401e      	ands	r6, r3
 8001156:	2f00      	cmp	r7, #0
 8001158:	d100      	bne.n	800115c <__aeabi_dsub+0x2fc>
 800115a:	e142      	b.n	80013e2 <__aeabi_dsub+0x582>
 800115c:	422c      	tst	r4, r5
 800115e:	d100      	bne.n	8001162 <__aeabi_dsub+0x302>
 8001160:	e26d      	b.n	800163e <__aeabi_dsub+0x7de>
 8001162:	4b19      	ldr	r3, [pc, #100]	@ (80011c8 <__aeabi_dsub+0x368>)
 8001164:	2501      	movs	r5, #1
 8001166:	401c      	ands	r4, r3
 8001168:	e71b      	b.n	8000fa2 <__aeabi_dsub+0x142>
 800116a:	42bd      	cmp	r5, r7
 800116c:	d100      	bne.n	8001170 <__aeabi_dsub+0x310>
 800116e:	e13b      	b.n	80013e8 <__aeabi_dsub+0x588>
 8001170:	2701      	movs	r7, #1
 8001172:	2b38      	cmp	r3, #56	@ 0x38
 8001174:	dd00      	ble.n	8001178 <__aeabi_dsub+0x318>
 8001176:	e745      	b.n	8001004 <__aeabi_dsub+0x1a4>
 8001178:	2780      	movs	r7, #128	@ 0x80
 800117a:	4659      	mov	r1, fp
 800117c:	043f      	lsls	r7, r7, #16
 800117e:	4339      	orrs	r1, r7
 8001180:	468b      	mov	fp, r1
 8001182:	e72a      	b.n	8000fda <__aeabi_dsub+0x17a>
 8001184:	2400      	movs	r4, #0
 8001186:	2700      	movs	r7, #0
 8001188:	052d      	lsls	r5, r5, #20
 800118a:	4325      	orrs	r5, r4
 800118c:	07f6      	lsls	r6, r6, #31
 800118e:	4335      	orrs	r5, r6
 8001190:	0038      	movs	r0, r7
 8001192:	0029      	movs	r1, r5
 8001194:	b003      	add	sp, #12
 8001196:	bcf0      	pop	{r4, r5, r6, r7}
 8001198:	46bb      	mov	fp, r7
 800119a:	46b2      	mov	sl, r6
 800119c:	46a9      	mov	r9, r5
 800119e:	46a0      	mov	r8, r4
 80011a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80011a2:	077b      	lsls	r3, r7, #29
 80011a4:	d004      	beq.n	80011b0 <__aeabi_dsub+0x350>
 80011a6:	230f      	movs	r3, #15
 80011a8:	403b      	ands	r3, r7
 80011aa:	2b04      	cmp	r3, #4
 80011ac:	d000      	beq.n	80011b0 <__aeabi_dsub+0x350>
 80011ae:	e6e7      	b.n	8000f80 <__aeabi_dsub+0x120>
 80011b0:	002b      	movs	r3, r5
 80011b2:	08f8      	lsrs	r0, r7, #3
 80011b4:	4a03      	ldr	r2, [pc, #12]	@ (80011c4 <__aeabi_dsub+0x364>)
 80011b6:	0767      	lsls	r7, r4, #29
 80011b8:	4307      	orrs	r7, r0
 80011ba:	08e5      	lsrs	r5, r4, #3
 80011bc:	4293      	cmp	r3, r2
 80011be:	d100      	bne.n	80011c2 <__aeabi_dsub+0x362>
 80011c0:	e74a      	b.n	8001058 <__aeabi_dsub+0x1f8>
 80011c2:	e0a5      	b.n	8001310 <__aeabi_dsub+0x4b0>
 80011c4:	000007ff 	.word	0x000007ff
 80011c8:	ff7fffff 	.word	0xff7fffff
 80011cc:	fffff801 	.word	0xfffff801
 80011d0:	000007fe 	.word	0x000007fe
 80011d4:	0038      	movs	r0, r7
 80011d6:	f000 fb19 	bl	800180c <__clzsi2>
 80011da:	0003      	movs	r3, r0
 80011dc:	3318      	adds	r3, #24
 80011de:	2b1f      	cmp	r3, #31
 80011e0:	dc00      	bgt.n	80011e4 <__aeabi_dsub+0x384>
 80011e2:	e6a7      	b.n	8000f34 <__aeabi_dsub+0xd4>
 80011e4:	003a      	movs	r2, r7
 80011e6:	3808      	subs	r0, #8
 80011e8:	4082      	lsls	r2, r0
 80011ea:	429d      	cmp	r5, r3
 80011ec:	dd00      	ble.n	80011f0 <__aeabi_dsub+0x390>
 80011ee:	e08a      	b.n	8001306 <__aeabi_dsub+0x4a6>
 80011f0:	1b5b      	subs	r3, r3, r5
 80011f2:	1c58      	adds	r0, r3, #1
 80011f4:	281f      	cmp	r0, #31
 80011f6:	dc00      	bgt.n	80011fa <__aeabi_dsub+0x39a>
 80011f8:	e1d8      	b.n	80015ac <__aeabi_dsub+0x74c>
 80011fa:	0017      	movs	r7, r2
 80011fc:	3b1f      	subs	r3, #31
 80011fe:	40df      	lsrs	r7, r3
 8001200:	2820      	cmp	r0, #32
 8001202:	d005      	beq.n	8001210 <__aeabi_dsub+0x3b0>
 8001204:	2340      	movs	r3, #64	@ 0x40
 8001206:	1a1b      	subs	r3, r3, r0
 8001208:	409a      	lsls	r2, r3
 800120a:	1e53      	subs	r3, r2, #1
 800120c:	419a      	sbcs	r2, r3
 800120e:	4317      	orrs	r7, r2
 8001210:	2500      	movs	r5, #0
 8001212:	2f00      	cmp	r7, #0
 8001214:	d100      	bne.n	8001218 <__aeabi_dsub+0x3b8>
 8001216:	e0e5      	b.n	80013e4 <__aeabi_dsub+0x584>
 8001218:	077b      	lsls	r3, r7, #29
 800121a:	d000      	beq.n	800121e <__aeabi_dsub+0x3be>
 800121c:	e6ab      	b.n	8000f76 <__aeabi_dsub+0x116>
 800121e:	002c      	movs	r4, r5
 8001220:	e7c6      	b.n	80011b0 <__aeabi_dsub+0x350>
 8001222:	08c0      	lsrs	r0, r0, #3
 8001224:	e7c6      	b.n	80011b4 <__aeabi_dsub+0x354>
 8001226:	2700      	movs	r7, #0
 8001228:	2400      	movs	r4, #0
 800122a:	4dd1      	ldr	r5, [pc, #836]	@ (8001570 <__aeabi_dsub+0x710>)
 800122c:	e7ac      	b.n	8001188 <__aeabi_dsub+0x328>
 800122e:	4fd1      	ldr	r7, [pc, #836]	@ (8001574 <__aeabi_dsub+0x714>)
 8001230:	1c6b      	adds	r3, r5, #1
 8001232:	423b      	tst	r3, r7
 8001234:	d171      	bne.n	800131a <__aeabi_dsub+0x4ba>
 8001236:	0023      	movs	r3, r4
 8001238:	4303      	orrs	r3, r0
 800123a:	2d00      	cmp	r5, #0
 800123c:	d000      	beq.n	8001240 <__aeabi_dsub+0x3e0>
 800123e:	e14e      	b.n	80014de <__aeabi_dsub+0x67e>
 8001240:	4657      	mov	r7, sl
 8001242:	2b00      	cmp	r3, #0
 8001244:	d100      	bne.n	8001248 <__aeabi_dsub+0x3e8>
 8001246:	e1b5      	b.n	80015b4 <__aeabi_dsub+0x754>
 8001248:	2f00      	cmp	r7, #0
 800124a:	d00d      	beq.n	8001268 <__aeabi_dsub+0x408>
 800124c:	1883      	adds	r3, r0, r2
 800124e:	4283      	cmp	r3, r0
 8001250:	4180      	sbcs	r0, r0
 8001252:	445c      	add	r4, fp
 8001254:	4240      	negs	r0, r0
 8001256:	1824      	adds	r4, r4, r0
 8001258:	0222      	lsls	r2, r4, #8
 800125a:	d500      	bpl.n	800125e <__aeabi_dsub+0x3fe>
 800125c:	e1c8      	b.n	80015f0 <__aeabi_dsub+0x790>
 800125e:	001f      	movs	r7, r3
 8001260:	4698      	mov	r8, r3
 8001262:	4327      	orrs	r7, r4
 8001264:	d100      	bne.n	8001268 <__aeabi_dsub+0x408>
 8001266:	e0bc      	b.n	80013e2 <__aeabi_dsub+0x582>
 8001268:	4643      	mov	r3, r8
 800126a:	0767      	lsls	r7, r4, #29
 800126c:	08db      	lsrs	r3, r3, #3
 800126e:	431f      	orrs	r7, r3
 8001270:	08e5      	lsrs	r5, r4, #3
 8001272:	2300      	movs	r3, #0
 8001274:	e04c      	b.n	8001310 <__aeabi_dsub+0x4b0>
 8001276:	1a83      	subs	r3, r0, r2
 8001278:	4698      	mov	r8, r3
 800127a:	465b      	mov	r3, fp
 800127c:	4540      	cmp	r0, r8
 800127e:	41bf      	sbcs	r7, r7
 8001280:	1ae3      	subs	r3, r4, r3
 8001282:	427f      	negs	r7, r7
 8001284:	1bdb      	subs	r3, r3, r7
 8001286:	021f      	lsls	r7, r3, #8
 8001288:	d47c      	bmi.n	8001384 <__aeabi_dsub+0x524>
 800128a:	4647      	mov	r7, r8
 800128c:	431f      	orrs	r7, r3
 800128e:	d100      	bne.n	8001292 <__aeabi_dsub+0x432>
 8001290:	e0a6      	b.n	80013e0 <__aeabi_dsub+0x580>
 8001292:	001c      	movs	r4, r3
 8001294:	4647      	mov	r7, r8
 8001296:	e645      	b.n	8000f24 <__aeabi_dsub+0xc4>
 8001298:	4cb7      	ldr	r4, [pc, #732]	@ (8001578 <__aeabi_dsub+0x718>)
 800129a:	1aed      	subs	r5, r5, r3
 800129c:	4014      	ands	r4, r2
 800129e:	077b      	lsls	r3, r7, #29
 80012a0:	d000      	beq.n	80012a4 <__aeabi_dsub+0x444>
 80012a2:	e780      	b.n	80011a6 <__aeabi_dsub+0x346>
 80012a4:	e784      	b.n	80011b0 <__aeabi_dsub+0x350>
 80012a6:	464b      	mov	r3, r9
 80012a8:	0025      	movs	r5, r4
 80012aa:	4305      	orrs	r5, r0
 80012ac:	d066      	beq.n	800137c <__aeabi_dsub+0x51c>
 80012ae:	1e5f      	subs	r7, r3, #1
 80012b0:	2b01      	cmp	r3, #1
 80012b2:	d100      	bne.n	80012b6 <__aeabi_dsub+0x456>
 80012b4:	e0fc      	b.n	80014b0 <__aeabi_dsub+0x650>
 80012b6:	4dae      	ldr	r5, [pc, #696]	@ (8001570 <__aeabi_dsub+0x710>)
 80012b8:	42ab      	cmp	r3, r5
 80012ba:	d100      	bne.n	80012be <__aeabi_dsub+0x45e>
 80012bc:	e15e      	b.n	800157c <__aeabi_dsub+0x71c>
 80012be:	4666      	mov	r6, ip
 80012c0:	2f38      	cmp	r7, #56	@ 0x38
 80012c2:	dc00      	bgt.n	80012c6 <__aeabi_dsub+0x466>
 80012c4:	e0b4      	b.n	8001430 <__aeabi_dsub+0x5d0>
 80012c6:	2001      	movs	r0, #1
 80012c8:	1a17      	subs	r7, r2, r0
 80012ca:	42ba      	cmp	r2, r7
 80012cc:	4192      	sbcs	r2, r2
 80012ce:	465b      	mov	r3, fp
 80012d0:	4252      	negs	r2, r2
 80012d2:	464d      	mov	r5, r9
 80012d4:	1a9c      	subs	r4, r3, r2
 80012d6:	e620      	b.n	8000f1a <__aeabi_dsub+0xba>
 80012d8:	0767      	lsls	r7, r4, #29
 80012da:	08c0      	lsrs	r0, r0, #3
 80012dc:	4307      	orrs	r7, r0
 80012de:	08e5      	lsrs	r5, r4, #3
 80012e0:	e6ba      	b.n	8001058 <__aeabi_dsub+0x1f8>
 80012e2:	001f      	movs	r7, r3
 80012e4:	4659      	mov	r1, fp
 80012e6:	3f20      	subs	r7, #32
 80012e8:	40f9      	lsrs	r1, r7
 80012ea:	000f      	movs	r7, r1
 80012ec:	2b20      	cmp	r3, #32
 80012ee:	d005      	beq.n	80012fc <__aeabi_dsub+0x49c>
 80012f0:	2140      	movs	r1, #64	@ 0x40
 80012f2:	1acb      	subs	r3, r1, r3
 80012f4:	4659      	mov	r1, fp
 80012f6:	4099      	lsls	r1, r3
 80012f8:	430a      	orrs	r2, r1
 80012fa:	4692      	mov	sl, r2
 80012fc:	4653      	mov	r3, sl
 80012fe:	1e5a      	subs	r2, r3, #1
 8001300:	4193      	sbcs	r3, r2
 8001302:	431f      	orrs	r7, r3
 8001304:	e604      	b.n	8000f10 <__aeabi_dsub+0xb0>
 8001306:	1aeb      	subs	r3, r5, r3
 8001308:	4d9b      	ldr	r5, [pc, #620]	@ (8001578 <__aeabi_dsub+0x718>)
 800130a:	4015      	ands	r5, r2
 800130c:	076f      	lsls	r7, r5, #29
 800130e:	08ed      	lsrs	r5, r5, #3
 8001310:	032c      	lsls	r4, r5, #12
 8001312:	055d      	lsls	r5, r3, #21
 8001314:	0b24      	lsrs	r4, r4, #12
 8001316:	0d6d      	lsrs	r5, r5, #21
 8001318:	e736      	b.n	8001188 <__aeabi_dsub+0x328>
 800131a:	4d95      	ldr	r5, [pc, #596]	@ (8001570 <__aeabi_dsub+0x710>)
 800131c:	42ab      	cmp	r3, r5
 800131e:	d100      	bne.n	8001322 <__aeabi_dsub+0x4c2>
 8001320:	e0d6      	b.n	80014d0 <__aeabi_dsub+0x670>
 8001322:	1882      	adds	r2, r0, r2
 8001324:	0021      	movs	r1, r4
 8001326:	4282      	cmp	r2, r0
 8001328:	4180      	sbcs	r0, r0
 800132a:	4459      	add	r1, fp
 800132c:	4240      	negs	r0, r0
 800132e:	1808      	adds	r0, r1, r0
 8001330:	07c7      	lsls	r7, r0, #31
 8001332:	0852      	lsrs	r2, r2, #1
 8001334:	4317      	orrs	r7, r2
 8001336:	0844      	lsrs	r4, r0, #1
 8001338:	0752      	lsls	r2, r2, #29
 800133a:	d400      	bmi.n	800133e <__aeabi_dsub+0x4de>
 800133c:	e185      	b.n	800164a <__aeabi_dsub+0x7ea>
 800133e:	220f      	movs	r2, #15
 8001340:	001d      	movs	r5, r3
 8001342:	403a      	ands	r2, r7
 8001344:	2a04      	cmp	r2, #4
 8001346:	d000      	beq.n	800134a <__aeabi_dsub+0x4ea>
 8001348:	e61a      	b.n	8000f80 <__aeabi_dsub+0x120>
 800134a:	08ff      	lsrs	r7, r7, #3
 800134c:	0764      	lsls	r4, r4, #29
 800134e:	4327      	orrs	r7, r4
 8001350:	0905      	lsrs	r5, r0, #4
 8001352:	e7dd      	b.n	8001310 <__aeabi_dsub+0x4b0>
 8001354:	465b      	mov	r3, fp
 8001356:	08d2      	lsrs	r2, r2, #3
 8001358:	075f      	lsls	r7, r3, #29
 800135a:	4317      	orrs	r7, r2
 800135c:	08dd      	lsrs	r5, r3, #3
 800135e:	e67b      	b.n	8001058 <__aeabi_dsub+0x1f8>
 8001360:	2700      	movs	r7, #0
 8001362:	2400      	movs	r4, #0
 8001364:	e710      	b.n	8001188 <__aeabi_dsub+0x328>
 8001366:	2b00      	cmp	r3, #0
 8001368:	d000      	beq.n	800136c <__aeabi_dsub+0x50c>
 800136a:	e0d6      	b.n	800151a <__aeabi_dsub+0x6ba>
 800136c:	2900      	cmp	r1, #0
 800136e:	d000      	beq.n	8001372 <__aeabi_dsub+0x512>
 8001370:	e12f      	b.n	80015d2 <__aeabi_dsub+0x772>
 8001372:	2480      	movs	r4, #128	@ 0x80
 8001374:	2600      	movs	r6, #0
 8001376:	4d7e      	ldr	r5, [pc, #504]	@ (8001570 <__aeabi_dsub+0x710>)
 8001378:	0324      	lsls	r4, r4, #12
 800137a:	e705      	b.n	8001188 <__aeabi_dsub+0x328>
 800137c:	4666      	mov	r6, ip
 800137e:	465c      	mov	r4, fp
 8001380:	08d0      	lsrs	r0, r2, #3
 8001382:	e717      	b.n	80011b4 <__aeabi_dsub+0x354>
 8001384:	465b      	mov	r3, fp
 8001386:	1a17      	subs	r7, r2, r0
 8001388:	42ba      	cmp	r2, r7
 800138a:	4192      	sbcs	r2, r2
 800138c:	1b1c      	subs	r4, r3, r4
 800138e:	2601      	movs	r6, #1
 8001390:	4663      	mov	r3, ip
 8001392:	4252      	negs	r2, r2
 8001394:	1aa4      	subs	r4, r4, r2
 8001396:	401e      	ands	r6, r3
 8001398:	e5c4      	b.n	8000f24 <__aeabi_dsub+0xc4>
 800139a:	1883      	adds	r3, r0, r2
 800139c:	4283      	cmp	r3, r0
 800139e:	4180      	sbcs	r0, r0
 80013a0:	445c      	add	r4, fp
 80013a2:	4240      	negs	r0, r0
 80013a4:	1825      	adds	r5, r4, r0
 80013a6:	022a      	lsls	r2, r5, #8
 80013a8:	d400      	bmi.n	80013ac <__aeabi_dsub+0x54c>
 80013aa:	e0da      	b.n	8001562 <__aeabi_dsub+0x702>
 80013ac:	4a72      	ldr	r2, [pc, #456]	@ (8001578 <__aeabi_dsub+0x718>)
 80013ae:	085b      	lsrs	r3, r3, #1
 80013b0:	4015      	ands	r5, r2
 80013b2:	07ea      	lsls	r2, r5, #31
 80013b4:	431a      	orrs	r2, r3
 80013b6:	0869      	lsrs	r1, r5, #1
 80013b8:	075b      	lsls	r3, r3, #29
 80013ba:	d400      	bmi.n	80013be <__aeabi_dsub+0x55e>
 80013bc:	e14a      	b.n	8001654 <__aeabi_dsub+0x7f4>
 80013be:	230f      	movs	r3, #15
 80013c0:	4013      	ands	r3, r2
 80013c2:	2b04      	cmp	r3, #4
 80013c4:	d100      	bne.n	80013c8 <__aeabi_dsub+0x568>
 80013c6:	e0fc      	b.n	80015c2 <__aeabi_dsub+0x762>
 80013c8:	1d17      	adds	r7, r2, #4
 80013ca:	4297      	cmp	r7, r2
 80013cc:	41a4      	sbcs	r4, r4
 80013ce:	4264      	negs	r4, r4
 80013d0:	2502      	movs	r5, #2
 80013d2:	1864      	adds	r4, r4, r1
 80013d4:	e6ec      	b.n	80011b0 <__aeabi_dsub+0x350>
 80013d6:	4647      	mov	r7, r8
 80013d8:	001c      	movs	r4, r3
 80013da:	431f      	orrs	r7, r3
 80013dc:	d000      	beq.n	80013e0 <__aeabi_dsub+0x580>
 80013de:	e743      	b.n	8001268 <__aeabi_dsub+0x408>
 80013e0:	2600      	movs	r6, #0
 80013e2:	2500      	movs	r5, #0
 80013e4:	2400      	movs	r4, #0
 80013e6:	e6cf      	b.n	8001188 <__aeabi_dsub+0x328>
 80013e8:	08c0      	lsrs	r0, r0, #3
 80013ea:	0767      	lsls	r7, r4, #29
 80013ec:	4307      	orrs	r7, r0
 80013ee:	08e5      	lsrs	r5, r4, #3
 80013f0:	e632      	b.n	8001058 <__aeabi_dsub+0x1f8>
 80013f2:	1a87      	subs	r7, r0, r2
 80013f4:	465b      	mov	r3, fp
 80013f6:	42b8      	cmp	r0, r7
 80013f8:	4180      	sbcs	r0, r0
 80013fa:	1ae4      	subs	r4, r4, r3
 80013fc:	4240      	negs	r0, r0
 80013fe:	1a24      	subs	r4, r4, r0
 8001400:	0223      	lsls	r3, r4, #8
 8001402:	d428      	bmi.n	8001456 <__aeabi_dsub+0x5f6>
 8001404:	0763      	lsls	r3, r4, #29
 8001406:	08ff      	lsrs	r7, r7, #3
 8001408:	431f      	orrs	r7, r3
 800140a:	08e5      	lsrs	r5, r4, #3
 800140c:	2301      	movs	r3, #1
 800140e:	e77f      	b.n	8001310 <__aeabi_dsub+0x4b0>
 8001410:	2b00      	cmp	r3, #0
 8001412:	d100      	bne.n	8001416 <__aeabi_dsub+0x5b6>
 8001414:	e673      	b.n	80010fe <__aeabi_dsub+0x29e>
 8001416:	464b      	mov	r3, r9
 8001418:	1b5f      	subs	r7, r3, r5
 800141a:	003b      	movs	r3, r7
 800141c:	2d00      	cmp	r5, #0
 800141e:	d100      	bne.n	8001422 <__aeabi_dsub+0x5c2>
 8001420:	e742      	b.n	80012a8 <__aeabi_dsub+0x448>
 8001422:	2f38      	cmp	r7, #56	@ 0x38
 8001424:	dd00      	ble.n	8001428 <__aeabi_dsub+0x5c8>
 8001426:	e0ec      	b.n	8001602 <__aeabi_dsub+0x7a2>
 8001428:	2380      	movs	r3, #128	@ 0x80
 800142a:	000e      	movs	r6, r1
 800142c:	041b      	lsls	r3, r3, #16
 800142e:	431c      	orrs	r4, r3
 8001430:	2f1f      	cmp	r7, #31
 8001432:	dc25      	bgt.n	8001480 <__aeabi_dsub+0x620>
 8001434:	2520      	movs	r5, #32
 8001436:	0023      	movs	r3, r4
 8001438:	1bed      	subs	r5, r5, r7
 800143a:	0001      	movs	r1, r0
 800143c:	40a8      	lsls	r0, r5
 800143e:	40ab      	lsls	r3, r5
 8001440:	40f9      	lsrs	r1, r7
 8001442:	1e45      	subs	r5, r0, #1
 8001444:	41a8      	sbcs	r0, r5
 8001446:	430b      	orrs	r3, r1
 8001448:	40fc      	lsrs	r4, r7
 800144a:	4318      	orrs	r0, r3
 800144c:	465b      	mov	r3, fp
 800144e:	1b1b      	subs	r3, r3, r4
 8001450:	469b      	mov	fp, r3
 8001452:	e739      	b.n	80012c8 <__aeabi_dsub+0x468>
 8001454:	4666      	mov	r6, ip
 8001456:	2501      	movs	r5, #1
 8001458:	e562      	b.n	8000f20 <__aeabi_dsub+0xc0>
 800145a:	001f      	movs	r7, r3
 800145c:	4659      	mov	r1, fp
 800145e:	3f20      	subs	r7, #32
 8001460:	40f9      	lsrs	r1, r7
 8001462:	468c      	mov	ip, r1
 8001464:	2b20      	cmp	r3, #32
 8001466:	d005      	beq.n	8001474 <__aeabi_dsub+0x614>
 8001468:	2740      	movs	r7, #64	@ 0x40
 800146a:	4659      	mov	r1, fp
 800146c:	1afb      	subs	r3, r7, r3
 800146e:	4099      	lsls	r1, r3
 8001470:	430a      	orrs	r2, r1
 8001472:	4692      	mov	sl, r2
 8001474:	4657      	mov	r7, sl
 8001476:	1e7b      	subs	r3, r7, #1
 8001478:	419f      	sbcs	r7, r3
 800147a:	4663      	mov	r3, ip
 800147c:	431f      	orrs	r7, r3
 800147e:	e5c1      	b.n	8001004 <__aeabi_dsub+0x1a4>
 8001480:	003b      	movs	r3, r7
 8001482:	0025      	movs	r5, r4
 8001484:	3b20      	subs	r3, #32
 8001486:	40dd      	lsrs	r5, r3
 8001488:	2f20      	cmp	r7, #32
 800148a:	d004      	beq.n	8001496 <__aeabi_dsub+0x636>
 800148c:	2340      	movs	r3, #64	@ 0x40
 800148e:	1bdb      	subs	r3, r3, r7
 8001490:	409c      	lsls	r4, r3
 8001492:	4320      	orrs	r0, r4
 8001494:	4680      	mov	r8, r0
 8001496:	4640      	mov	r0, r8
 8001498:	1e43      	subs	r3, r0, #1
 800149a:	4198      	sbcs	r0, r3
 800149c:	4328      	orrs	r0, r5
 800149e:	e713      	b.n	80012c8 <__aeabi_dsub+0x468>
 80014a0:	2900      	cmp	r1, #0
 80014a2:	d09d      	beq.n	80013e0 <__aeabi_dsub+0x580>
 80014a4:	2601      	movs	r6, #1
 80014a6:	4663      	mov	r3, ip
 80014a8:	465c      	mov	r4, fp
 80014aa:	4690      	mov	r8, r2
 80014ac:	401e      	ands	r6, r3
 80014ae:	e6db      	b.n	8001268 <__aeabi_dsub+0x408>
 80014b0:	1a17      	subs	r7, r2, r0
 80014b2:	465b      	mov	r3, fp
 80014b4:	42ba      	cmp	r2, r7
 80014b6:	4192      	sbcs	r2, r2
 80014b8:	1b1c      	subs	r4, r3, r4
 80014ba:	4252      	negs	r2, r2
 80014bc:	1aa4      	subs	r4, r4, r2
 80014be:	0223      	lsls	r3, r4, #8
 80014c0:	d4c8      	bmi.n	8001454 <__aeabi_dsub+0x5f4>
 80014c2:	0763      	lsls	r3, r4, #29
 80014c4:	08ff      	lsrs	r7, r7, #3
 80014c6:	431f      	orrs	r7, r3
 80014c8:	4666      	mov	r6, ip
 80014ca:	2301      	movs	r3, #1
 80014cc:	08e5      	lsrs	r5, r4, #3
 80014ce:	e71f      	b.n	8001310 <__aeabi_dsub+0x4b0>
 80014d0:	001d      	movs	r5, r3
 80014d2:	2400      	movs	r4, #0
 80014d4:	2700      	movs	r7, #0
 80014d6:	e657      	b.n	8001188 <__aeabi_dsub+0x328>
 80014d8:	465c      	mov	r4, fp
 80014da:	08d0      	lsrs	r0, r2, #3
 80014dc:	e66a      	b.n	80011b4 <__aeabi_dsub+0x354>
 80014de:	2b00      	cmp	r3, #0
 80014e0:	d100      	bne.n	80014e4 <__aeabi_dsub+0x684>
 80014e2:	e737      	b.n	8001354 <__aeabi_dsub+0x4f4>
 80014e4:	4653      	mov	r3, sl
 80014e6:	08c0      	lsrs	r0, r0, #3
 80014e8:	0767      	lsls	r7, r4, #29
 80014ea:	4307      	orrs	r7, r0
 80014ec:	08e5      	lsrs	r5, r4, #3
 80014ee:	2b00      	cmp	r3, #0
 80014f0:	d100      	bne.n	80014f4 <__aeabi_dsub+0x694>
 80014f2:	e5b1      	b.n	8001058 <__aeabi_dsub+0x1f8>
 80014f4:	2380      	movs	r3, #128	@ 0x80
 80014f6:	031b      	lsls	r3, r3, #12
 80014f8:	421d      	tst	r5, r3
 80014fa:	d008      	beq.n	800150e <__aeabi_dsub+0x6ae>
 80014fc:	4659      	mov	r1, fp
 80014fe:	08c8      	lsrs	r0, r1, #3
 8001500:	4218      	tst	r0, r3
 8001502:	d104      	bne.n	800150e <__aeabi_dsub+0x6ae>
 8001504:	08d2      	lsrs	r2, r2, #3
 8001506:	0749      	lsls	r1, r1, #29
 8001508:	430a      	orrs	r2, r1
 800150a:	0017      	movs	r7, r2
 800150c:	0005      	movs	r5, r0
 800150e:	0f7b      	lsrs	r3, r7, #29
 8001510:	00ff      	lsls	r7, r7, #3
 8001512:	08ff      	lsrs	r7, r7, #3
 8001514:	075b      	lsls	r3, r3, #29
 8001516:	431f      	orrs	r7, r3
 8001518:	e59e      	b.n	8001058 <__aeabi_dsub+0x1f8>
 800151a:	08c0      	lsrs	r0, r0, #3
 800151c:	0763      	lsls	r3, r4, #29
 800151e:	4318      	orrs	r0, r3
 8001520:	08e5      	lsrs	r5, r4, #3
 8001522:	2900      	cmp	r1, #0
 8001524:	d053      	beq.n	80015ce <__aeabi_dsub+0x76e>
 8001526:	2380      	movs	r3, #128	@ 0x80
 8001528:	031b      	lsls	r3, r3, #12
 800152a:	421d      	tst	r5, r3
 800152c:	d00a      	beq.n	8001544 <__aeabi_dsub+0x6e4>
 800152e:	4659      	mov	r1, fp
 8001530:	08cc      	lsrs	r4, r1, #3
 8001532:	421c      	tst	r4, r3
 8001534:	d106      	bne.n	8001544 <__aeabi_dsub+0x6e4>
 8001536:	2601      	movs	r6, #1
 8001538:	4663      	mov	r3, ip
 800153a:	0025      	movs	r5, r4
 800153c:	08d0      	lsrs	r0, r2, #3
 800153e:	0749      	lsls	r1, r1, #29
 8001540:	4308      	orrs	r0, r1
 8001542:	401e      	ands	r6, r3
 8001544:	0f47      	lsrs	r7, r0, #29
 8001546:	00c0      	lsls	r0, r0, #3
 8001548:	08c0      	lsrs	r0, r0, #3
 800154a:	077f      	lsls	r7, r7, #29
 800154c:	4307      	orrs	r7, r0
 800154e:	e583      	b.n	8001058 <__aeabi_dsub+0x1f8>
 8001550:	1883      	adds	r3, r0, r2
 8001552:	4293      	cmp	r3, r2
 8001554:	4192      	sbcs	r2, r2
 8001556:	445c      	add	r4, fp
 8001558:	4252      	negs	r2, r2
 800155a:	18a5      	adds	r5, r4, r2
 800155c:	022a      	lsls	r2, r5, #8
 800155e:	d500      	bpl.n	8001562 <__aeabi_dsub+0x702>
 8001560:	e724      	b.n	80013ac <__aeabi_dsub+0x54c>
 8001562:	076f      	lsls	r7, r5, #29
 8001564:	08db      	lsrs	r3, r3, #3
 8001566:	431f      	orrs	r7, r3
 8001568:	08ed      	lsrs	r5, r5, #3
 800156a:	2301      	movs	r3, #1
 800156c:	e6d0      	b.n	8001310 <__aeabi_dsub+0x4b0>
 800156e:	46c0      	nop			@ (mov r8, r8)
 8001570:	000007ff 	.word	0x000007ff
 8001574:	000007fe 	.word	0x000007fe
 8001578:	ff7fffff 	.word	0xff7fffff
 800157c:	465b      	mov	r3, fp
 800157e:	08d2      	lsrs	r2, r2, #3
 8001580:	075f      	lsls	r7, r3, #29
 8001582:	4666      	mov	r6, ip
 8001584:	4317      	orrs	r7, r2
 8001586:	08dd      	lsrs	r5, r3, #3
 8001588:	e566      	b.n	8001058 <__aeabi_dsub+0x1f8>
 800158a:	0025      	movs	r5, r4
 800158c:	3b20      	subs	r3, #32
 800158e:	40dd      	lsrs	r5, r3
 8001590:	4663      	mov	r3, ip
 8001592:	2b20      	cmp	r3, #32
 8001594:	d005      	beq.n	80015a2 <__aeabi_dsub+0x742>
 8001596:	2340      	movs	r3, #64	@ 0x40
 8001598:	4661      	mov	r1, ip
 800159a:	1a5b      	subs	r3, r3, r1
 800159c:	409c      	lsls	r4, r3
 800159e:	4320      	orrs	r0, r4
 80015a0:	4680      	mov	r8, r0
 80015a2:	4647      	mov	r7, r8
 80015a4:	1e7b      	subs	r3, r7, #1
 80015a6:	419f      	sbcs	r7, r3
 80015a8:	432f      	orrs	r7, r5
 80015aa:	e5a0      	b.n	80010ee <__aeabi_dsub+0x28e>
 80015ac:	2120      	movs	r1, #32
 80015ae:	2700      	movs	r7, #0
 80015b0:	1a09      	subs	r1, r1, r0
 80015b2:	e4d2      	b.n	8000f5a <__aeabi_dsub+0xfa>
 80015b4:	2f00      	cmp	r7, #0
 80015b6:	d100      	bne.n	80015ba <__aeabi_dsub+0x75a>
 80015b8:	e713      	b.n	80013e2 <__aeabi_dsub+0x582>
 80015ba:	465c      	mov	r4, fp
 80015bc:	0017      	movs	r7, r2
 80015be:	2500      	movs	r5, #0
 80015c0:	e5f6      	b.n	80011b0 <__aeabi_dsub+0x350>
 80015c2:	08d7      	lsrs	r7, r2, #3
 80015c4:	0749      	lsls	r1, r1, #29
 80015c6:	2302      	movs	r3, #2
 80015c8:	430f      	orrs	r7, r1
 80015ca:	092d      	lsrs	r5, r5, #4
 80015cc:	e6a0      	b.n	8001310 <__aeabi_dsub+0x4b0>
 80015ce:	0007      	movs	r7, r0
 80015d0:	e542      	b.n	8001058 <__aeabi_dsub+0x1f8>
 80015d2:	465b      	mov	r3, fp
 80015d4:	2601      	movs	r6, #1
 80015d6:	075f      	lsls	r7, r3, #29
 80015d8:	08dd      	lsrs	r5, r3, #3
 80015da:	4663      	mov	r3, ip
 80015dc:	08d2      	lsrs	r2, r2, #3
 80015de:	4317      	orrs	r7, r2
 80015e0:	401e      	ands	r6, r3
 80015e2:	e539      	b.n	8001058 <__aeabi_dsub+0x1f8>
 80015e4:	465b      	mov	r3, fp
 80015e6:	08d2      	lsrs	r2, r2, #3
 80015e8:	075f      	lsls	r7, r3, #29
 80015ea:	4317      	orrs	r7, r2
 80015ec:	08dd      	lsrs	r5, r3, #3
 80015ee:	e533      	b.n	8001058 <__aeabi_dsub+0x1f8>
 80015f0:	4a1e      	ldr	r2, [pc, #120]	@ (800166c <__aeabi_dsub+0x80c>)
 80015f2:	08db      	lsrs	r3, r3, #3
 80015f4:	4022      	ands	r2, r4
 80015f6:	0757      	lsls	r7, r2, #29
 80015f8:	0252      	lsls	r2, r2, #9
 80015fa:	2501      	movs	r5, #1
 80015fc:	431f      	orrs	r7, r3
 80015fe:	0b14      	lsrs	r4, r2, #12
 8001600:	e5c2      	b.n	8001188 <__aeabi_dsub+0x328>
 8001602:	000e      	movs	r6, r1
 8001604:	2001      	movs	r0, #1
 8001606:	e65f      	b.n	80012c8 <__aeabi_dsub+0x468>
 8001608:	2b00      	cmp	r3, #0
 800160a:	d00d      	beq.n	8001628 <__aeabi_dsub+0x7c8>
 800160c:	464b      	mov	r3, r9
 800160e:	1b5b      	subs	r3, r3, r5
 8001610:	469c      	mov	ip, r3
 8001612:	2d00      	cmp	r5, #0
 8001614:	d100      	bne.n	8001618 <__aeabi_dsub+0x7b8>
 8001616:	e548      	b.n	80010aa <__aeabi_dsub+0x24a>
 8001618:	2701      	movs	r7, #1
 800161a:	2b38      	cmp	r3, #56	@ 0x38
 800161c:	dd00      	ble.n	8001620 <__aeabi_dsub+0x7c0>
 800161e:	e566      	b.n	80010ee <__aeabi_dsub+0x28e>
 8001620:	2380      	movs	r3, #128	@ 0x80
 8001622:	041b      	lsls	r3, r3, #16
 8001624:	431c      	orrs	r4, r3
 8001626:	e550      	b.n	80010ca <__aeabi_dsub+0x26a>
 8001628:	1c6b      	adds	r3, r5, #1
 800162a:	4d11      	ldr	r5, [pc, #68]	@ (8001670 <__aeabi_dsub+0x810>)
 800162c:	422b      	tst	r3, r5
 800162e:	d000      	beq.n	8001632 <__aeabi_dsub+0x7d2>
 8001630:	e673      	b.n	800131a <__aeabi_dsub+0x4ba>
 8001632:	4659      	mov	r1, fp
 8001634:	0023      	movs	r3, r4
 8001636:	4311      	orrs	r1, r2
 8001638:	468a      	mov	sl, r1
 800163a:	4303      	orrs	r3, r0
 800163c:	e600      	b.n	8001240 <__aeabi_dsub+0x3e0>
 800163e:	0767      	lsls	r7, r4, #29
 8001640:	08c0      	lsrs	r0, r0, #3
 8001642:	2300      	movs	r3, #0
 8001644:	4307      	orrs	r7, r0
 8001646:	08e5      	lsrs	r5, r4, #3
 8001648:	e662      	b.n	8001310 <__aeabi_dsub+0x4b0>
 800164a:	0764      	lsls	r4, r4, #29
 800164c:	08ff      	lsrs	r7, r7, #3
 800164e:	4327      	orrs	r7, r4
 8001650:	0905      	lsrs	r5, r0, #4
 8001652:	e65d      	b.n	8001310 <__aeabi_dsub+0x4b0>
 8001654:	08d2      	lsrs	r2, r2, #3
 8001656:	0749      	lsls	r1, r1, #29
 8001658:	4311      	orrs	r1, r2
 800165a:	000f      	movs	r7, r1
 800165c:	2302      	movs	r3, #2
 800165e:	092d      	lsrs	r5, r5, #4
 8001660:	e656      	b.n	8001310 <__aeabi_dsub+0x4b0>
 8001662:	0007      	movs	r7, r0
 8001664:	e5a4      	b.n	80011b0 <__aeabi_dsub+0x350>
 8001666:	0038      	movs	r0, r7
 8001668:	e48f      	b.n	8000f8a <__aeabi_dsub+0x12a>
 800166a:	46c0      	nop			@ (mov r8, r8)
 800166c:	ff7fffff 	.word	0xff7fffff
 8001670:	000007fe 	.word	0x000007fe

08001674 <__aeabi_d2iz>:
 8001674:	000b      	movs	r3, r1
 8001676:	0002      	movs	r2, r0
 8001678:	b570      	push	{r4, r5, r6, lr}
 800167a:	4d16      	ldr	r5, [pc, #88]	@ (80016d4 <__aeabi_d2iz+0x60>)
 800167c:	030c      	lsls	r4, r1, #12
 800167e:	b082      	sub	sp, #8
 8001680:	0049      	lsls	r1, r1, #1
 8001682:	2000      	movs	r0, #0
 8001684:	9200      	str	r2, [sp, #0]
 8001686:	9301      	str	r3, [sp, #4]
 8001688:	0b24      	lsrs	r4, r4, #12
 800168a:	0d49      	lsrs	r1, r1, #21
 800168c:	0fde      	lsrs	r6, r3, #31
 800168e:	42a9      	cmp	r1, r5
 8001690:	dd04      	ble.n	800169c <__aeabi_d2iz+0x28>
 8001692:	4811      	ldr	r0, [pc, #68]	@ (80016d8 <__aeabi_d2iz+0x64>)
 8001694:	4281      	cmp	r1, r0
 8001696:	dd03      	ble.n	80016a0 <__aeabi_d2iz+0x2c>
 8001698:	4b10      	ldr	r3, [pc, #64]	@ (80016dc <__aeabi_d2iz+0x68>)
 800169a:	18f0      	adds	r0, r6, r3
 800169c:	b002      	add	sp, #8
 800169e:	bd70      	pop	{r4, r5, r6, pc}
 80016a0:	2080      	movs	r0, #128	@ 0x80
 80016a2:	0340      	lsls	r0, r0, #13
 80016a4:	4320      	orrs	r0, r4
 80016a6:	4c0e      	ldr	r4, [pc, #56]	@ (80016e0 <__aeabi_d2iz+0x6c>)
 80016a8:	1a64      	subs	r4, r4, r1
 80016aa:	2c1f      	cmp	r4, #31
 80016ac:	dd08      	ble.n	80016c0 <__aeabi_d2iz+0x4c>
 80016ae:	4b0d      	ldr	r3, [pc, #52]	@ (80016e4 <__aeabi_d2iz+0x70>)
 80016b0:	1a5b      	subs	r3, r3, r1
 80016b2:	40d8      	lsrs	r0, r3
 80016b4:	0003      	movs	r3, r0
 80016b6:	4258      	negs	r0, r3
 80016b8:	2e00      	cmp	r6, #0
 80016ba:	d1ef      	bne.n	800169c <__aeabi_d2iz+0x28>
 80016bc:	0018      	movs	r0, r3
 80016be:	e7ed      	b.n	800169c <__aeabi_d2iz+0x28>
 80016c0:	4b09      	ldr	r3, [pc, #36]	@ (80016e8 <__aeabi_d2iz+0x74>)
 80016c2:	9a00      	ldr	r2, [sp, #0]
 80016c4:	469c      	mov	ip, r3
 80016c6:	0003      	movs	r3, r0
 80016c8:	4461      	add	r1, ip
 80016ca:	408b      	lsls	r3, r1
 80016cc:	40e2      	lsrs	r2, r4
 80016ce:	4313      	orrs	r3, r2
 80016d0:	e7f1      	b.n	80016b6 <__aeabi_d2iz+0x42>
 80016d2:	46c0      	nop			@ (mov r8, r8)
 80016d4:	000003fe 	.word	0x000003fe
 80016d8:	0000041d 	.word	0x0000041d
 80016dc:	7fffffff 	.word	0x7fffffff
 80016e0:	00000433 	.word	0x00000433
 80016e4:	00000413 	.word	0x00000413
 80016e8:	fffffbed 	.word	0xfffffbed

080016ec <__aeabi_i2d>:
 80016ec:	b570      	push	{r4, r5, r6, lr}
 80016ee:	2800      	cmp	r0, #0
 80016f0:	d016      	beq.n	8001720 <__aeabi_i2d+0x34>
 80016f2:	17c3      	asrs	r3, r0, #31
 80016f4:	18c5      	adds	r5, r0, r3
 80016f6:	405d      	eors	r5, r3
 80016f8:	0fc4      	lsrs	r4, r0, #31
 80016fa:	0028      	movs	r0, r5
 80016fc:	f000 f886 	bl	800180c <__clzsi2>
 8001700:	4b10      	ldr	r3, [pc, #64]	@ (8001744 <__aeabi_i2d+0x58>)
 8001702:	1a1b      	subs	r3, r3, r0
 8001704:	055b      	lsls	r3, r3, #21
 8001706:	0d5b      	lsrs	r3, r3, #21
 8001708:	280a      	cmp	r0, #10
 800170a:	dc14      	bgt.n	8001736 <__aeabi_i2d+0x4a>
 800170c:	0002      	movs	r2, r0
 800170e:	002e      	movs	r6, r5
 8001710:	3215      	adds	r2, #21
 8001712:	4096      	lsls	r6, r2
 8001714:	220b      	movs	r2, #11
 8001716:	1a12      	subs	r2, r2, r0
 8001718:	40d5      	lsrs	r5, r2
 800171a:	032d      	lsls	r5, r5, #12
 800171c:	0b2d      	lsrs	r5, r5, #12
 800171e:	e003      	b.n	8001728 <__aeabi_i2d+0x3c>
 8001720:	2400      	movs	r4, #0
 8001722:	2300      	movs	r3, #0
 8001724:	2500      	movs	r5, #0
 8001726:	2600      	movs	r6, #0
 8001728:	051b      	lsls	r3, r3, #20
 800172a:	432b      	orrs	r3, r5
 800172c:	07e4      	lsls	r4, r4, #31
 800172e:	4323      	orrs	r3, r4
 8001730:	0030      	movs	r0, r6
 8001732:	0019      	movs	r1, r3
 8001734:	bd70      	pop	{r4, r5, r6, pc}
 8001736:	380b      	subs	r0, #11
 8001738:	4085      	lsls	r5, r0
 800173a:	032d      	lsls	r5, r5, #12
 800173c:	2600      	movs	r6, #0
 800173e:	0b2d      	lsrs	r5, r5, #12
 8001740:	e7f2      	b.n	8001728 <__aeabi_i2d+0x3c>
 8001742:	46c0      	nop			@ (mov r8, r8)
 8001744:	0000041e 	.word	0x0000041e

08001748 <__aeabi_ui2d>:
 8001748:	b510      	push	{r4, lr}
 800174a:	1e04      	subs	r4, r0, #0
 800174c:	d010      	beq.n	8001770 <__aeabi_ui2d+0x28>
 800174e:	f000 f85d 	bl	800180c <__clzsi2>
 8001752:	4b0e      	ldr	r3, [pc, #56]	@ (800178c <__aeabi_ui2d+0x44>)
 8001754:	1a1b      	subs	r3, r3, r0
 8001756:	055b      	lsls	r3, r3, #21
 8001758:	0d5b      	lsrs	r3, r3, #21
 800175a:	280a      	cmp	r0, #10
 800175c:	dc0f      	bgt.n	800177e <__aeabi_ui2d+0x36>
 800175e:	220b      	movs	r2, #11
 8001760:	0021      	movs	r1, r4
 8001762:	1a12      	subs	r2, r2, r0
 8001764:	40d1      	lsrs	r1, r2
 8001766:	3015      	adds	r0, #21
 8001768:	030a      	lsls	r2, r1, #12
 800176a:	4084      	lsls	r4, r0
 800176c:	0b12      	lsrs	r2, r2, #12
 800176e:	e001      	b.n	8001774 <__aeabi_ui2d+0x2c>
 8001770:	2300      	movs	r3, #0
 8001772:	2200      	movs	r2, #0
 8001774:	051b      	lsls	r3, r3, #20
 8001776:	4313      	orrs	r3, r2
 8001778:	0020      	movs	r0, r4
 800177a:	0019      	movs	r1, r3
 800177c:	bd10      	pop	{r4, pc}
 800177e:	0022      	movs	r2, r4
 8001780:	380b      	subs	r0, #11
 8001782:	4082      	lsls	r2, r0
 8001784:	0312      	lsls	r2, r2, #12
 8001786:	2400      	movs	r4, #0
 8001788:	0b12      	lsrs	r2, r2, #12
 800178a:	e7f3      	b.n	8001774 <__aeabi_ui2d+0x2c>
 800178c:	0000041e 	.word	0x0000041e

08001790 <__aeabi_cdrcmple>:
 8001790:	4684      	mov	ip, r0
 8001792:	0010      	movs	r0, r2
 8001794:	4662      	mov	r2, ip
 8001796:	468c      	mov	ip, r1
 8001798:	0019      	movs	r1, r3
 800179a:	4663      	mov	r3, ip
 800179c:	e000      	b.n	80017a0 <__aeabi_cdcmpeq>
 800179e:	46c0      	nop			@ (mov r8, r8)

080017a0 <__aeabi_cdcmpeq>:
 80017a0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80017a2:	f000 f905 	bl	80019b0 <__ledf2>
 80017a6:	2800      	cmp	r0, #0
 80017a8:	d401      	bmi.n	80017ae <__aeabi_cdcmpeq+0xe>
 80017aa:	2100      	movs	r1, #0
 80017ac:	42c8      	cmn	r0, r1
 80017ae:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

080017b0 <__aeabi_dcmpeq>:
 80017b0:	b510      	push	{r4, lr}
 80017b2:	f000 f849 	bl	8001848 <__eqdf2>
 80017b6:	4240      	negs	r0, r0
 80017b8:	3001      	adds	r0, #1
 80017ba:	bd10      	pop	{r4, pc}

080017bc <__aeabi_dcmplt>:
 80017bc:	b510      	push	{r4, lr}
 80017be:	f000 f8f7 	bl	80019b0 <__ledf2>
 80017c2:	2800      	cmp	r0, #0
 80017c4:	db01      	blt.n	80017ca <__aeabi_dcmplt+0xe>
 80017c6:	2000      	movs	r0, #0
 80017c8:	bd10      	pop	{r4, pc}
 80017ca:	2001      	movs	r0, #1
 80017cc:	bd10      	pop	{r4, pc}
 80017ce:	46c0      	nop			@ (mov r8, r8)

080017d0 <__aeabi_dcmple>:
 80017d0:	b510      	push	{r4, lr}
 80017d2:	f000 f8ed 	bl	80019b0 <__ledf2>
 80017d6:	2800      	cmp	r0, #0
 80017d8:	dd01      	ble.n	80017de <__aeabi_dcmple+0xe>
 80017da:	2000      	movs	r0, #0
 80017dc:	bd10      	pop	{r4, pc}
 80017de:	2001      	movs	r0, #1
 80017e0:	bd10      	pop	{r4, pc}
 80017e2:	46c0      	nop			@ (mov r8, r8)

080017e4 <__aeabi_dcmpgt>:
 80017e4:	b510      	push	{r4, lr}
 80017e6:	f000 f873 	bl	80018d0 <__gedf2>
 80017ea:	2800      	cmp	r0, #0
 80017ec:	dc01      	bgt.n	80017f2 <__aeabi_dcmpgt+0xe>
 80017ee:	2000      	movs	r0, #0
 80017f0:	bd10      	pop	{r4, pc}
 80017f2:	2001      	movs	r0, #1
 80017f4:	bd10      	pop	{r4, pc}
 80017f6:	46c0      	nop			@ (mov r8, r8)

080017f8 <__aeabi_dcmpge>:
 80017f8:	b510      	push	{r4, lr}
 80017fa:	f000 f869 	bl	80018d0 <__gedf2>
 80017fe:	2800      	cmp	r0, #0
 8001800:	da01      	bge.n	8001806 <__aeabi_dcmpge+0xe>
 8001802:	2000      	movs	r0, #0
 8001804:	bd10      	pop	{r4, pc}
 8001806:	2001      	movs	r0, #1
 8001808:	bd10      	pop	{r4, pc}
 800180a:	46c0      	nop			@ (mov r8, r8)

0800180c <__clzsi2>:
 800180c:	211c      	movs	r1, #28
 800180e:	2301      	movs	r3, #1
 8001810:	041b      	lsls	r3, r3, #16
 8001812:	4298      	cmp	r0, r3
 8001814:	d301      	bcc.n	800181a <__clzsi2+0xe>
 8001816:	0c00      	lsrs	r0, r0, #16
 8001818:	3910      	subs	r1, #16
 800181a:	0a1b      	lsrs	r3, r3, #8
 800181c:	4298      	cmp	r0, r3
 800181e:	d301      	bcc.n	8001824 <__clzsi2+0x18>
 8001820:	0a00      	lsrs	r0, r0, #8
 8001822:	3908      	subs	r1, #8
 8001824:	091b      	lsrs	r3, r3, #4
 8001826:	4298      	cmp	r0, r3
 8001828:	d301      	bcc.n	800182e <__clzsi2+0x22>
 800182a:	0900      	lsrs	r0, r0, #4
 800182c:	3904      	subs	r1, #4
 800182e:	a202      	add	r2, pc, #8	@ (adr r2, 8001838 <__clzsi2+0x2c>)
 8001830:	5c10      	ldrb	r0, [r2, r0]
 8001832:	1840      	adds	r0, r0, r1
 8001834:	4770      	bx	lr
 8001836:	46c0      	nop			@ (mov r8, r8)
 8001838:	02020304 	.word	0x02020304
 800183c:	01010101 	.word	0x01010101
	...

08001848 <__eqdf2>:
 8001848:	b5f0      	push	{r4, r5, r6, r7, lr}
 800184a:	4657      	mov	r7, sl
 800184c:	46de      	mov	lr, fp
 800184e:	464e      	mov	r6, r9
 8001850:	4645      	mov	r5, r8
 8001852:	b5e0      	push	{r5, r6, r7, lr}
 8001854:	000d      	movs	r5, r1
 8001856:	0004      	movs	r4, r0
 8001858:	0fe8      	lsrs	r0, r5, #31
 800185a:	4683      	mov	fp, r0
 800185c:	0309      	lsls	r1, r1, #12
 800185e:	0fd8      	lsrs	r0, r3, #31
 8001860:	0b09      	lsrs	r1, r1, #12
 8001862:	4682      	mov	sl, r0
 8001864:	4819      	ldr	r0, [pc, #100]	@ (80018cc <__eqdf2+0x84>)
 8001866:	468c      	mov	ip, r1
 8001868:	031f      	lsls	r7, r3, #12
 800186a:	0069      	lsls	r1, r5, #1
 800186c:	005e      	lsls	r6, r3, #1
 800186e:	0d49      	lsrs	r1, r1, #21
 8001870:	0b3f      	lsrs	r7, r7, #12
 8001872:	0d76      	lsrs	r6, r6, #21
 8001874:	4281      	cmp	r1, r0
 8001876:	d018      	beq.n	80018aa <__eqdf2+0x62>
 8001878:	4286      	cmp	r6, r0
 800187a:	d00f      	beq.n	800189c <__eqdf2+0x54>
 800187c:	2001      	movs	r0, #1
 800187e:	42b1      	cmp	r1, r6
 8001880:	d10d      	bne.n	800189e <__eqdf2+0x56>
 8001882:	45bc      	cmp	ip, r7
 8001884:	d10b      	bne.n	800189e <__eqdf2+0x56>
 8001886:	4294      	cmp	r4, r2
 8001888:	d109      	bne.n	800189e <__eqdf2+0x56>
 800188a:	45d3      	cmp	fp, sl
 800188c:	d01c      	beq.n	80018c8 <__eqdf2+0x80>
 800188e:	2900      	cmp	r1, #0
 8001890:	d105      	bne.n	800189e <__eqdf2+0x56>
 8001892:	4660      	mov	r0, ip
 8001894:	4320      	orrs	r0, r4
 8001896:	1e43      	subs	r3, r0, #1
 8001898:	4198      	sbcs	r0, r3
 800189a:	e000      	b.n	800189e <__eqdf2+0x56>
 800189c:	2001      	movs	r0, #1
 800189e:	bcf0      	pop	{r4, r5, r6, r7}
 80018a0:	46bb      	mov	fp, r7
 80018a2:	46b2      	mov	sl, r6
 80018a4:	46a9      	mov	r9, r5
 80018a6:	46a0      	mov	r8, r4
 80018a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80018aa:	2001      	movs	r0, #1
 80018ac:	428e      	cmp	r6, r1
 80018ae:	d1f6      	bne.n	800189e <__eqdf2+0x56>
 80018b0:	4661      	mov	r1, ip
 80018b2:	4339      	orrs	r1, r7
 80018b4:	000f      	movs	r7, r1
 80018b6:	4317      	orrs	r7, r2
 80018b8:	4327      	orrs	r7, r4
 80018ba:	d1f0      	bne.n	800189e <__eqdf2+0x56>
 80018bc:	465b      	mov	r3, fp
 80018be:	4652      	mov	r2, sl
 80018c0:	1a98      	subs	r0, r3, r2
 80018c2:	1e43      	subs	r3, r0, #1
 80018c4:	4198      	sbcs	r0, r3
 80018c6:	e7ea      	b.n	800189e <__eqdf2+0x56>
 80018c8:	2000      	movs	r0, #0
 80018ca:	e7e8      	b.n	800189e <__eqdf2+0x56>
 80018cc:	000007ff 	.word	0x000007ff

080018d0 <__gedf2>:
 80018d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80018d2:	4657      	mov	r7, sl
 80018d4:	464e      	mov	r6, r9
 80018d6:	4645      	mov	r5, r8
 80018d8:	46de      	mov	lr, fp
 80018da:	b5e0      	push	{r5, r6, r7, lr}
 80018dc:	000d      	movs	r5, r1
 80018de:	030e      	lsls	r6, r1, #12
 80018e0:	0049      	lsls	r1, r1, #1
 80018e2:	0d49      	lsrs	r1, r1, #21
 80018e4:	468a      	mov	sl, r1
 80018e6:	0fdf      	lsrs	r7, r3, #31
 80018e8:	0fe9      	lsrs	r1, r5, #31
 80018ea:	46bc      	mov	ip, r7
 80018ec:	b083      	sub	sp, #12
 80018ee:	4f2f      	ldr	r7, [pc, #188]	@ (80019ac <__gedf2+0xdc>)
 80018f0:	0004      	movs	r4, r0
 80018f2:	4680      	mov	r8, r0
 80018f4:	9101      	str	r1, [sp, #4]
 80018f6:	0058      	lsls	r0, r3, #1
 80018f8:	0319      	lsls	r1, r3, #12
 80018fa:	4691      	mov	r9, r2
 80018fc:	0b36      	lsrs	r6, r6, #12
 80018fe:	0b09      	lsrs	r1, r1, #12
 8001900:	0d40      	lsrs	r0, r0, #21
 8001902:	45ba      	cmp	sl, r7
 8001904:	d01d      	beq.n	8001942 <__gedf2+0x72>
 8001906:	42b8      	cmp	r0, r7
 8001908:	d00d      	beq.n	8001926 <__gedf2+0x56>
 800190a:	4657      	mov	r7, sl
 800190c:	2f00      	cmp	r7, #0
 800190e:	d12a      	bne.n	8001966 <__gedf2+0x96>
 8001910:	4334      	orrs	r4, r6
 8001912:	2800      	cmp	r0, #0
 8001914:	d124      	bne.n	8001960 <__gedf2+0x90>
 8001916:	430a      	orrs	r2, r1
 8001918:	d036      	beq.n	8001988 <__gedf2+0xb8>
 800191a:	2c00      	cmp	r4, #0
 800191c:	d141      	bne.n	80019a2 <__gedf2+0xd2>
 800191e:	4663      	mov	r3, ip
 8001920:	0058      	lsls	r0, r3, #1
 8001922:	3801      	subs	r0, #1
 8001924:	e015      	b.n	8001952 <__gedf2+0x82>
 8001926:	4311      	orrs	r1, r2
 8001928:	d138      	bne.n	800199c <__gedf2+0xcc>
 800192a:	4653      	mov	r3, sl
 800192c:	2b00      	cmp	r3, #0
 800192e:	d101      	bne.n	8001934 <__gedf2+0x64>
 8001930:	4326      	orrs	r6, r4
 8001932:	d0f4      	beq.n	800191e <__gedf2+0x4e>
 8001934:	9b01      	ldr	r3, [sp, #4]
 8001936:	4563      	cmp	r3, ip
 8001938:	d107      	bne.n	800194a <__gedf2+0x7a>
 800193a:	9b01      	ldr	r3, [sp, #4]
 800193c:	0058      	lsls	r0, r3, #1
 800193e:	3801      	subs	r0, #1
 8001940:	e007      	b.n	8001952 <__gedf2+0x82>
 8001942:	4326      	orrs	r6, r4
 8001944:	d12a      	bne.n	800199c <__gedf2+0xcc>
 8001946:	4550      	cmp	r0, sl
 8001948:	d021      	beq.n	800198e <__gedf2+0xbe>
 800194a:	2001      	movs	r0, #1
 800194c:	9b01      	ldr	r3, [sp, #4]
 800194e:	425f      	negs	r7, r3
 8001950:	4338      	orrs	r0, r7
 8001952:	b003      	add	sp, #12
 8001954:	bcf0      	pop	{r4, r5, r6, r7}
 8001956:	46bb      	mov	fp, r7
 8001958:	46b2      	mov	sl, r6
 800195a:	46a9      	mov	r9, r5
 800195c:	46a0      	mov	r8, r4
 800195e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001960:	2c00      	cmp	r4, #0
 8001962:	d0dc      	beq.n	800191e <__gedf2+0x4e>
 8001964:	e7e6      	b.n	8001934 <__gedf2+0x64>
 8001966:	2800      	cmp	r0, #0
 8001968:	d0ef      	beq.n	800194a <__gedf2+0x7a>
 800196a:	9b01      	ldr	r3, [sp, #4]
 800196c:	4563      	cmp	r3, ip
 800196e:	d1ec      	bne.n	800194a <__gedf2+0x7a>
 8001970:	4582      	cmp	sl, r0
 8001972:	dcea      	bgt.n	800194a <__gedf2+0x7a>
 8001974:	dbe1      	blt.n	800193a <__gedf2+0x6a>
 8001976:	428e      	cmp	r6, r1
 8001978:	d8e7      	bhi.n	800194a <__gedf2+0x7a>
 800197a:	d1de      	bne.n	800193a <__gedf2+0x6a>
 800197c:	45c8      	cmp	r8, r9
 800197e:	d8e4      	bhi.n	800194a <__gedf2+0x7a>
 8001980:	2000      	movs	r0, #0
 8001982:	45c8      	cmp	r8, r9
 8001984:	d2e5      	bcs.n	8001952 <__gedf2+0x82>
 8001986:	e7d8      	b.n	800193a <__gedf2+0x6a>
 8001988:	2c00      	cmp	r4, #0
 800198a:	d0e2      	beq.n	8001952 <__gedf2+0x82>
 800198c:	e7dd      	b.n	800194a <__gedf2+0x7a>
 800198e:	4311      	orrs	r1, r2
 8001990:	d104      	bne.n	800199c <__gedf2+0xcc>
 8001992:	9b01      	ldr	r3, [sp, #4]
 8001994:	4563      	cmp	r3, ip
 8001996:	d1d8      	bne.n	800194a <__gedf2+0x7a>
 8001998:	2000      	movs	r0, #0
 800199a:	e7da      	b.n	8001952 <__gedf2+0x82>
 800199c:	2002      	movs	r0, #2
 800199e:	4240      	negs	r0, r0
 80019a0:	e7d7      	b.n	8001952 <__gedf2+0x82>
 80019a2:	9b01      	ldr	r3, [sp, #4]
 80019a4:	4563      	cmp	r3, ip
 80019a6:	d0e6      	beq.n	8001976 <__gedf2+0xa6>
 80019a8:	e7cf      	b.n	800194a <__gedf2+0x7a>
 80019aa:	46c0      	nop			@ (mov r8, r8)
 80019ac:	000007ff 	.word	0x000007ff

080019b0 <__ledf2>:
 80019b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80019b2:	4657      	mov	r7, sl
 80019b4:	464e      	mov	r6, r9
 80019b6:	4645      	mov	r5, r8
 80019b8:	46de      	mov	lr, fp
 80019ba:	b5e0      	push	{r5, r6, r7, lr}
 80019bc:	000d      	movs	r5, r1
 80019be:	030e      	lsls	r6, r1, #12
 80019c0:	0049      	lsls	r1, r1, #1
 80019c2:	0d49      	lsrs	r1, r1, #21
 80019c4:	468a      	mov	sl, r1
 80019c6:	0fdf      	lsrs	r7, r3, #31
 80019c8:	0fe9      	lsrs	r1, r5, #31
 80019ca:	46bc      	mov	ip, r7
 80019cc:	b083      	sub	sp, #12
 80019ce:	4f2e      	ldr	r7, [pc, #184]	@ (8001a88 <__ledf2+0xd8>)
 80019d0:	0004      	movs	r4, r0
 80019d2:	4680      	mov	r8, r0
 80019d4:	9101      	str	r1, [sp, #4]
 80019d6:	0058      	lsls	r0, r3, #1
 80019d8:	0319      	lsls	r1, r3, #12
 80019da:	4691      	mov	r9, r2
 80019dc:	0b36      	lsrs	r6, r6, #12
 80019de:	0b09      	lsrs	r1, r1, #12
 80019e0:	0d40      	lsrs	r0, r0, #21
 80019e2:	45ba      	cmp	sl, r7
 80019e4:	d01e      	beq.n	8001a24 <__ledf2+0x74>
 80019e6:	42b8      	cmp	r0, r7
 80019e8:	d00d      	beq.n	8001a06 <__ledf2+0x56>
 80019ea:	4657      	mov	r7, sl
 80019ec:	2f00      	cmp	r7, #0
 80019ee:	d127      	bne.n	8001a40 <__ledf2+0x90>
 80019f0:	4334      	orrs	r4, r6
 80019f2:	2800      	cmp	r0, #0
 80019f4:	d133      	bne.n	8001a5e <__ledf2+0xae>
 80019f6:	430a      	orrs	r2, r1
 80019f8:	d034      	beq.n	8001a64 <__ledf2+0xb4>
 80019fa:	2c00      	cmp	r4, #0
 80019fc:	d140      	bne.n	8001a80 <__ledf2+0xd0>
 80019fe:	4663      	mov	r3, ip
 8001a00:	0058      	lsls	r0, r3, #1
 8001a02:	3801      	subs	r0, #1
 8001a04:	e015      	b.n	8001a32 <__ledf2+0x82>
 8001a06:	4311      	orrs	r1, r2
 8001a08:	d112      	bne.n	8001a30 <__ledf2+0x80>
 8001a0a:	4653      	mov	r3, sl
 8001a0c:	2b00      	cmp	r3, #0
 8001a0e:	d101      	bne.n	8001a14 <__ledf2+0x64>
 8001a10:	4326      	orrs	r6, r4
 8001a12:	d0f4      	beq.n	80019fe <__ledf2+0x4e>
 8001a14:	9b01      	ldr	r3, [sp, #4]
 8001a16:	4563      	cmp	r3, ip
 8001a18:	d01d      	beq.n	8001a56 <__ledf2+0xa6>
 8001a1a:	2001      	movs	r0, #1
 8001a1c:	9b01      	ldr	r3, [sp, #4]
 8001a1e:	425f      	negs	r7, r3
 8001a20:	4338      	orrs	r0, r7
 8001a22:	e006      	b.n	8001a32 <__ledf2+0x82>
 8001a24:	4326      	orrs	r6, r4
 8001a26:	d103      	bne.n	8001a30 <__ledf2+0x80>
 8001a28:	4550      	cmp	r0, sl
 8001a2a:	d1f6      	bne.n	8001a1a <__ledf2+0x6a>
 8001a2c:	4311      	orrs	r1, r2
 8001a2e:	d01c      	beq.n	8001a6a <__ledf2+0xba>
 8001a30:	2002      	movs	r0, #2
 8001a32:	b003      	add	sp, #12
 8001a34:	bcf0      	pop	{r4, r5, r6, r7}
 8001a36:	46bb      	mov	fp, r7
 8001a38:	46b2      	mov	sl, r6
 8001a3a:	46a9      	mov	r9, r5
 8001a3c:	46a0      	mov	r8, r4
 8001a3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a40:	2800      	cmp	r0, #0
 8001a42:	d0ea      	beq.n	8001a1a <__ledf2+0x6a>
 8001a44:	9b01      	ldr	r3, [sp, #4]
 8001a46:	4563      	cmp	r3, ip
 8001a48:	d1e7      	bne.n	8001a1a <__ledf2+0x6a>
 8001a4a:	4582      	cmp	sl, r0
 8001a4c:	dce5      	bgt.n	8001a1a <__ledf2+0x6a>
 8001a4e:	db02      	blt.n	8001a56 <__ledf2+0xa6>
 8001a50:	428e      	cmp	r6, r1
 8001a52:	d8e2      	bhi.n	8001a1a <__ledf2+0x6a>
 8001a54:	d00e      	beq.n	8001a74 <__ledf2+0xc4>
 8001a56:	9b01      	ldr	r3, [sp, #4]
 8001a58:	0058      	lsls	r0, r3, #1
 8001a5a:	3801      	subs	r0, #1
 8001a5c:	e7e9      	b.n	8001a32 <__ledf2+0x82>
 8001a5e:	2c00      	cmp	r4, #0
 8001a60:	d0cd      	beq.n	80019fe <__ledf2+0x4e>
 8001a62:	e7d7      	b.n	8001a14 <__ledf2+0x64>
 8001a64:	2c00      	cmp	r4, #0
 8001a66:	d0e4      	beq.n	8001a32 <__ledf2+0x82>
 8001a68:	e7d7      	b.n	8001a1a <__ledf2+0x6a>
 8001a6a:	9b01      	ldr	r3, [sp, #4]
 8001a6c:	2000      	movs	r0, #0
 8001a6e:	4563      	cmp	r3, ip
 8001a70:	d0df      	beq.n	8001a32 <__ledf2+0x82>
 8001a72:	e7d2      	b.n	8001a1a <__ledf2+0x6a>
 8001a74:	45c8      	cmp	r8, r9
 8001a76:	d8d0      	bhi.n	8001a1a <__ledf2+0x6a>
 8001a78:	2000      	movs	r0, #0
 8001a7a:	45c8      	cmp	r8, r9
 8001a7c:	d2d9      	bcs.n	8001a32 <__ledf2+0x82>
 8001a7e:	e7ea      	b.n	8001a56 <__ledf2+0xa6>
 8001a80:	9b01      	ldr	r3, [sp, #4]
 8001a82:	4563      	cmp	r3, ip
 8001a84:	d0e4      	beq.n	8001a50 <__ledf2+0xa0>
 8001a86:	e7c8      	b.n	8001a1a <__ledf2+0x6a>
 8001a88:	000007ff 	.word	0x000007ff

08001a8c <USER_ADC_Init>:
#include <stdint.h>
#include "main.h"
#include "systicklib.h"
#include "adclib.h"

void USER_ADC_Init(void) {
 8001a8c:	b580      	push	{r7, lr}
 8001a8e:	b082      	sub	sp, #8
 8001a90:	af00      	add	r7, sp, #0
    // Habilitar reloj del ADC y del puerto GPIOA
    RCC->IOPENR |= (1 << 0);     // GPIOAEN
 8001a92:	4b4b      	ldr	r3, [pc, #300]	@ (8001bc0 <USER_ADC_Init+0x134>)
 8001a94:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8001a96:	4b4a      	ldr	r3, [pc, #296]	@ (8001bc0 <USER_ADC_Init+0x134>)
 8001a98:	2101      	movs	r1, #1
 8001a9a:	430a      	orrs	r2, r1
 8001a9c:	635a      	str	r2, [r3, #52]	@ 0x34
    RCC->APBENR2 |= (1 << 20);   // ADCEN
 8001a9e:	4b48      	ldr	r3, [pc, #288]	@ (8001bc0 <USER_ADC_Init+0x134>)
 8001aa0:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001aa2:	4b47      	ldr	r3, [pc, #284]	@ (8001bc0 <USER_ADC_Init+0x134>)
 8001aa4:	2180      	movs	r1, #128	@ 0x80
 8001aa6:	0349      	lsls	r1, r1, #13
 8001aa8:	430a      	orrs	r2, r1
 8001aaa:	641a      	str	r2, [r3, #64]	@ 0x40

    // PA0 en modo analógico
    GPIOA->MODER |= (0x3 << (0*2));   // Modo analógico
 8001aac:	23a0      	movs	r3, #160	@ 0xa0
 8001aae:	05db      	lsls	r3, r3, #23
 8001ab0:	681a      	ldr	r2, [r3, #0]
 8001ab2:	23a0      	movs	r3, #160	@ 0xa0
 8001ab4:	05db      	lsls	r3, r3, #23
 8001ab6:	2103      	movs	r1, #3
 8001ab8:	430a      	orrs	r2, r1
 8001aba:	601a      	str	r2, [r3, #0]
    GPIOA->PUPDR &= ~(0x3 << (0*2));  // Sin pull-up/pull-down
 8001abc:	23a0      	movs	r3, #160	@ 0xa0
 8001abe:	05db      	lsls	r3, r3, #23
 8001ac0:	68da      	ldr	r2, [r3, #12]
 8001ac2:	23a0      	movs	r3, #160	@ 0xa0
 8001ac4:	05db      	lsls	r3, r3, #23
 8001ac6:	2103      	movs	r1, #3
 8001ac8:	438a      	bics	r2, r1
 8001aca:	60da      	str	r2, [r3, #12]

    // Configurar CKMODE para reloj síncrono dividido entre 2
    ADC->CFGR2 &= ~(0x3 << 30);        // Borrar CKMODE
 8001acc:	4b3d      	ldr	r3, [pc, #244]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001ace:	691a      	ldr	r2, [r3, #16]
 8001ad0:	4b3c      	ldr	r3, [pc, #240]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001ad2:	0092      	lsls	r2, r2, #2
 8001ad4:	0892      	lsrs	r2, r2, #2
 8001ad6:	611a      	str	r2, [r3, #16]
    //ADC1->CFGR2 |=  (0x1 << 30);        // CKMODE = 01: PCLK/2

    ADC->CCR &= ~(0xE << 18);
 8001ad8:	4a3a      	ldr	r2, [pc, #232]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001ada:	23c2      	movs	r3, #194	@ 0xc2
 8001adc:	009b      	lsls	r3, r3, #2
 8001ade:	58d3      	ldr	r3, [r2, r3]
 8001ae0:	4938      	ldr	r1, [pc, #224]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001ae2:	4a39      	ldr	r2, [pc, #228]	@ (8001bc8 <USER_ADC_Init+0x13c>)
 8001ae4:	401a      	ands	r2, r3
 8001ae6:	23c2      	movs	r3, #194	@ 0xc2
 8001ae8:	009b      	lsls	r3, r3, #2
 8001aea:	50ca      	str	r2, [r1, r3]
    ADC->CCR|=  (0x1 << 18);
 8001aec:	4a35      	ldr	r2, [pc, #212]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001aee:	23c2      	movs	r3, #194	@ 0xc2
 8001af0:	009b      	lsls	r3, r3, #2
 8001af2:	58d3      	ldr	r3, [r2, r3]
 8001af4:	4933      	ldr	r1, [pc, #204]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001af6:	2280      	movs	r2, #128	@ 0x80
 8001af8:	02d2      	lsls	r2, r2, #11
 8001afa:	431a      	orrs	r2, r3
 8001afc:	23c2      	movs	r3, #194	@ 0xc2
 8001afe:	009b      	lsls	r3, r3, #2
 8001b00:	50ca      	str	r2, [r1, r3]

    // Configurar resolución, alineación, modo de conversión
    ADC->CFGR1 &= ~(0x1 << 13); // Single conversion mode
 8001b02:	4b30      	ldr	r3, [pc, #192]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001b04:	68da      	ldr	r2, [r3, #12]
 8001b06:	4b2f      	ldr	r3, [pc, #188]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001b08:	4930      	ldr	r1, [pc, #192]	@ (8001bcc <USER_ADC_Init+0x140>)
 8001b0a:	400a      	ands	r2, r1
 8001b0c:	60da      	str	r2, [r3, #12]
    ADC->CFGR1 &= ~(0x1 << 5);  // Right alignment
 8001b0e:	4b2d      	ldr	r3, [pc, #180]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001b10:	68da      	ldr	r2, [r3, #12]
 8001b12:	4b2c      	ldr	r3, [pc, #176]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001b14:	2120      	movs	r1, #32
 8001b16:	438a      	bics	r2, r1
 8001b18:	60da      	str	r2, [r3, #12]
    ADC->CFGR1 &= ~(0x3 << 3);  // 12-bit resolution
 8001b1a:	4b2a      	ldr	r3, [pc, #168]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001b1c:	68da      	ldr	r2, [r3, #12]
 8001b1e:	4b29      	ldr	r3, [pc, #164]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001b20:	2118      	movs	r1, #24
 8001b22:	438a      	bics	r2, r1
 8001b24:	60da      	str	r2, [r3, #12]

    // Tiempo de muestreo
    ADC->SMPR |= ~(0x7 << 0);   // Sampling time = shortest
 8001b26:	4b27      	ldr	r3, [pc, #156]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001b28:	695a      	ldr	r2, [r3, #20]
 8001b2a:	4b26      	ldr	r3, [pc, #152]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001b2c:	2108      	movs	r1, #8
 8001b2e:	4249      	negs	r1, r1
 8001b30:	430a      	orrs	r2, r1
 8001b32:	615a      	str	r2, [r3, #20]

    ADC->ISR &= ~( 0x1UL << 13U );
 8001b34:	4b23      	ldr	r3, [pc, #140]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001b36:	681a      	ldr	r2, [r3, #0]
 8001b38:	4b22      	ldr	r3, [pc, #136]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001b3a:	4924      	ldr	r1, [pc, #144]	@ (8001bcc <USER_ADC_Init+0x140>)
 8001b3c:	400a      	ands	r2, r1
 8001b3e:	601a      	str	r2, [r3, #0]
    ADC->CFGR1 &= ~( 0x1UL << 21U ) & ~( 0x1UL << 2U );
 8001b40:	4b20      	ldr	r3, [pc, #128]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001b42:	68da      	ldr	r2, [r3, #12]
 8001b44:	4b1f      	ldr	r3, [pc, #124]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001b46:	4922      	ldr	r1, [pc, #136]	@ (8001bd0 <USER_ADC_Init+0x144>)
 8001b48:	400a      	ands	r2, r1
 8001b4a:	60da      	str	r2, [r3, #12]

    // Seleccionar canal 0 (PA0)
    ADC->CHSELR |= (1 << 0);
 8001b4c:	4b1d      	ldr	r3, [pc, #116]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001b4e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8001b50:	4b1c      	ldr	r3, [pc, #112]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001b52:	2101      	movs	r1, #1
 8001b54:	430a      	orrs	r2, r1
 8001b56:	629a      	str	r2, [r3, #40]	@ 0x28

    while( !(ADC->ISR & (0x1UL << 13U)));
 8001b58:	46c0      	nop			@ (mov r8, r8)
 8001b5a:	4b1a      	ldr	r3, [pc, #104]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001b5c:	681a      	ldr	r2, [r3, #0]
 8001b5e:	2380      	movs	r3, #128	@ 0x80
 8001b60:	019b      	lsls	r3, r3, #6
 8001b62:	4013      	ands	r3, r2
 8001b64:	d0f9      	beq.n	8001b5a <USER_ADC_Init+0xce>

    // Habilitar regulador interno

    ADC->CR |= (1 << 28);       // ADVREGEN
 8001b66:	4b17      	ldr	r3, [pc, #92]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001b68:	689a      	ldr	r2, [r3, #8]
 8001b6a:	4b16      	ldr	r3, [pc, #88]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001b6c:	2180      	movs	r1, #128	@ 0x80
 8001b6e:	0549      	lsls	r1, r1, #21
 8001b70:	430a      	orrs	r2, r1
 8001b72:	609a      	str	r2, [r3, #8]
    SysTick_Delay(1);            // Delay > 10 us
 8001b74:	2001      	movs	r0, #1
 8001b76:	f000 fdaf 	bl	80026d8 <SysTick_Delay>

    // Calibración
    while (!USER_ADC_Calibration());
 8001b7a:	46c0      	nop			@ (mov r8, r8)
 8001b7c:	f000 f82a 	bl	8001bd4 <USER_ADC_Calibration>
 8001b80:	1e03      	subs	r3, r0, #0
 8001b82:	d0fb      	beq.n	8001b7c <USER_ADC_Init+0xf0>

    // Habilitar ADC
    ADC->CR |= (1 << 0);         // ADEN
 8001b84:	4b0f      	ldr	r3, [pc, #60]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001b86:	689a      	ldr	r2, [r3, #8]
 8001b88:	4b0e      	ldr	r3, [pc, #56]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001b8a:	2101      	movs	r1, #1
 8001b8c:	430a      	orrs	r2, r1
 8001b8e:	609a      	str	r2, [r3, #8]
    for (uint32_t i = 0; i < 1000 && !(ADC->ISR & (1 << 0)); i++) SysTick_Delay(1); // Wait up to 1ms
 8001b90:	2300      	movs	r3, #0
 8001b92:	607b      	str	r3, [r7, #4]
 8001b94:	e005      	b.n	8001ba2 <USER_ADC_Init+0x116>
 8001b96:	2001      	movs	r0, #1
 8001b98:	f000 fd9e 	bl	80026d8 <SysTick_Delay>
 8001b9c:	687b      	ldr	r3, [r7, #4]
 8001b9e:	3301      	adds	r3, #1
 8001ba0:	607b      	str	r3, [r7, #4]
 8001ba2:	687a      	ldr	r2, [r7, #4]
 8001ba4:	23fa      	movs	r3, #250	@ 0xfa
 8001ba6:	009b      	lsls	r3, r3, #2
 8001ba8:	429a      	cmp	r2, r3
 8001baa:	d204      	bcs.n	8001bb6 <USER_ADC_Init+0x12a>
 8001bac:	4b05      	ldr	r3, [pc, #20]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001bae:	681b      	ldr	r3, [r3, #0]
 8001bb0:	2201      	movs	r2, #1
 8001bb2:	4013      	ands	r3, r2
 8001bb4:	d0ef      	beq.n	8001b96 <USER_ADC_Init+0x10a>
    if (!(ADC->ISR & (1 << 0))) return;  // Fail if ADRDY not set
 8001bb6:	4b03      	ldr	r3, [pc, #12]	@ (8001bc4 <USER_ADC_Init+0x138>)
 8001bb8:	681b      	ldr	r3, [r3, #0]
}
 8001bba:	46bd      	mov	sp, r7
 8001bbc:	b002      	add	sp, #8
 8001bbe:	bd80      	pop	{r7, pc}
 8001bc0:	40021000 	.word	0x40021000
 8001bc4:	40012400 	.word	0x40012400
 8001bc8:	ffc7ffff 	.word	0xffc7ffff
 8001bcc:	ffffdfff 	.word	0xffffdfff
 8001bd0:	ffdffffb 	.word	0xffdffffb

08001bd4 <USER_ADC_Calibration>:

uint8_t USER_ADC_Calibration(void) {
 8001bd4:	b580      	push	{r7, lr}
 8001bd6:	af00      	add	r7, sp, #0
    ADC->CR |= (1 << 31);                   // ADCAL
 8001bd8:	4b0c      	ldr	r3, [pc, #48]	@ (8001c0c <USER_ADC_Calibration+0x38>)
 8001bda:	689a      	ldr	r2, [r3, #8]
 8001bdc:	4b0b      	ldr	r3, [pc, #44]	@ (8001c0c <USER_ADC_Calibration+0x38>)
 8001bde:	2180      	movs	r1, #128	@ 0x80
 8001be0:	0609      	lsls	r1, r1, #24
 8001be2:	430a      	orrs	r2, r1
 8001be4:	609a      	str	r2, [r3, #8]
    while (ADC->CR & (1 << 31));            // Esperar fin de calibración
 8001be6:	46c0      	nop			@ (mov r8, r8)
 8001be8:	4b08      	ldr	r3, [pc, #32]	@ (8001c0c <USER_ADC_Calibration+0x38>)
 8001bea:	689b      	ldr	r3, [r3, #8]
 8001bec:	2b00      	cmp	r3, #0
 8001bee:	dbfb      	blt.n	8001be8 <USER_ADC_Calibration+0x14>

    // (Opcional) Ajustar factor de calibración
    if (ADC->CALFACT > 0x7F) {
 8001bf0:	4a06      	ldr	r2, [pc, #24]	@ (8001c0c <USER_ADC_Calibration+0x38>)
 8001bf2:	23b4      	movs	r3, #180	@ 0xb4
 8001bf4:	58d3      	ldr	r3, [r2, r3]
 8001bf6:	2b7f      	cmp	r3, #127	@ 0x7f
 8001bf8:	d903      	bls.n	8001c02 <USER_ADC_Calibration+0x2e>
        ADC->CALFACT = 0x7F;
 8001bfa:	4a04      	ldr	r2, [pc, #16]	@ (8001c0c <USER_ADC_Calibration+0x38>)
 8001bfc:	23b4      	movs	r3, #180	@ 0xb4
 8001bfe:	217f      	movs	r1, #127	@ 0x7f
 8001c00:	50d1      	str	r1, [r2, r3]
    }
    return 1;
 8001c02:	2301      	movs	r3, #1
}
 8001c04:	0018      	movs	r0, r3
 8001c06:	46bd      	mov	sp, r7
 8001c08:	bd80      	pop	{r7, pc}
 8001c0a:	46c0      	nop			@ (mov r8, r8)
 8001c0c:	40012400 	.word	0x40012400

08001c10 <USER_ADC_Read>:

uint16_t USER_ADC_Read(void) {
 8001c10:	b580      	push	{r7, lr}
 8001c12:	af00      	add	r7, sp, #0
    ADC->CR |= (1 << 2);               // ADSTART
 8001c14:	4b0e      	ldr	r3, [pc, #56]	@ (8001c50 <USER_ADC_Read+0x40>)
 8001c16:	689a      	ldr	r2, [r3, #8]
 8001c18:	4b0d      	ldr	r3, [pc, #52]	@ (8001c50 <USER_ADC_Read+0x40>)
 8001c1a:	2104      	movs	r1, #4
 8001c1c:	430a      	orrs	r2, r1
 8001c1e:	609a      	str	r2, [r3, #8]
    while (!(ADC->ISR & (1 << 2)));    // Esperar EOC
 8001c20:	46c0      	nop			@ (mov r8, r8)
 8001c22:	4b0b      	ldr	r3, [pc, #44]	@ (8001c50 <USER_ADC_Read+0x40>)
 8001c24:	681b      	ldr	r3, [r3, #0]
 8001c26:	2204      	movs	r2, #4
 8001c28:	4013      	ands	r3, r2
 8001c2a:	d0fa      	beq.n	8001c22 <USER_ADC_Read+0x12>
    if (ADC->ISR & (1 << 4)) {         // Check for overrun error
 8001c2c:	4b08      	ldr	r3, [pc, #32]	@ (8001c50 <USER_ADC_Read+0x40>)
 8001c2e:	681b      	ldr	r3, [r3, #0]
 8001c30:	2210      	movs	r2, #16
 8001c32:	4013      	ands	r3, r2
 8001c34:	d005      	beq.n	8001c42 <USER_ADC_Read+0x32>
        ADC->ISR |= (1 << 4);          // Clear overrun flag
 8001c36:	4b06      	ldr	r3, [pc, #24]	@ (8001c50 <USER_ADC_Read+0x40>)
 8001c38:	681a      	ldr	r2, [r3, #0]
 8001c3a:	4b05      	ldr	r3, [pc, #20]	@ (8001c50 <USER_ADC_Read+0x40>)
 8001c3c:	2110      	movs	r1, #16
 8001c3e:	430a      	orrs	r2, r1
 8001c40:	601a      	str	r2, [r3, #0]
    }
    return (uint16_t)(ADC->DR);        // Leer valor convertido
 8001c42:	4b03      	ldr	r3, [pc, #12]	@ (8001c50 <USER_ADC_Read+0x40>)
 8001c44:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c46:	b29b      	uxth	r3, r3
}
 8001c48:	0018      	movs	r0, r3
 8001c4a:	46bd      	mov	sp, r7
 8001c4c:	bd80      	pop	{r7, pc}
 8001c4e:	46c0      	nop			@ (mov r8, r8)
 8001c50:	40012400 	.word	0x40012400

08001c54 <USER_EXTI1_Init>:
#include <stdint.h>
#include "main.h"
#include "systicklib.h"
#include "exti_func.h"

void USER_EXTI1_Init( void ){
 8001c54:	b580      	push	{r7, lr}
 8001c56:	af00      	add	r7, sp, #0
  EXTI->IMR1    |=  (  0x1UL <<  25U );//  Enable interrupt
 8001c58:	4a11      	ldr	r2, [pc, #68]	@ (8001ca0 <USER_EXTI1_Init+0x4c>)
 8001c5a:	2380      	movs	r3, #128	@ 0x80
 8001c5c:	58d3      	ldr	r3, [r2, r3]
 8001c5e:	4910      	ldr	r1, [pc, #64]	@ (8001ca0 <USER_EXTI1_Init+0x4c>)
 8001c60:	2280      	movs	r2, #128	@ 0x80
 8001c62:	0492      	lsls	r2, r2, #18
 8001c64:	4313      	orrs	r3, r2
 8001c66:	2280      	movs	r2, #128	@ 0x80
 8001c68:	508b      	str	r3, [r1, r2]
  EXTI->EMR1    &=  ~(  0x1UL <<  25U );//  Disable event generation
 8001c6a:	4a0d      	ldr	r2, [pc, #52]	@ (8001ca0 <USER_EXTI1_Init+0x4c>)
 8001c6c:	2384      	movs	r3, #132	@ 0x84
 8001c6e:	58d3      	ldr	r3, [r2, r3]
 8001c70:	490b      	ldr	r1, [pc, #44]	@ (8001ca0 <USER_EXTI1_Init+0x4c>)
 8001c72:	4a0c      	ldr	r2, [pc, #48]	@ (8001ca4 <USER_EXTI1_Init+0x50>)
 8001c74:	4013      	ands	r3, r2
 8001c76:	2284      	movs	r2, #132	@ 0x84
 8001c78:	508b      	str	r3, [r1, r2]
  /* Enable EXTI1 vector */

  NVIC->IPR[6]  &= ~( 0x00UL <<  3U );
 8001c7a:	4a0b      	ldr	r2, [pc, #44]	@ (8001ca8 <USER_EXTI1_Init+0x54>)
 8001c7c:	490a      	ldr	r1, [pc, #40]	@ (8001ca8 <USER_EXTI1_Init+0x54>)
 8001c7e:	23c6      	movs	r3, #198	@ 0xc6
 8001c80:	009b      	lsls	r3, r3, #2
 8001c82:	58d2      	ldr	r2, [r2, r3]
 8001c84:	23c6      	movs	r3, #198	@ 0xc6
 8001c86:	009b      	lsls	r3, r3, #2
 8001c88:	50ca      	str	r2, [r1, r3]

//  NVIC->ISER    |=  (  0x1UL <<  16U );
  NVIC->ISER    |=  (  0x1UL <<  27U );
 8001c8a:	4b07      	ldr	r3, [pc, #28]	@ (8001ca8 <USER_EXTI1_Init+0x54>)
 8001c8c:	681a      	ldr	r2, [r3, #0]
 8001c8e:	4b06      	ldr	r3, [pc, #24]	@ (8001ca8 <USER_EXTI1_Init+0x54>)
 8001c90:	2180      	movs	r1, #128	@ 0x80
 8001c92:	0509      	lsls	r1, r1, #20
 8001c94:	430a      	orrs	r2, r1
 8001c96:	601a      	str	r2, [r3, #0]

}
 8001c98:	46c0      	nop			@ (mov r8, r8)
 8001c9a:	46bd      	mov	sp, r7
 8001c9c:	bd80      	pop	{r7, pc}
 8001c9e:	46c0      	nop			@ (mov r8, r8)
 8001ca0:	40021800 	.word	0x40021800
 8001ca4:	fdffffff 	.word	0xfdffffff
 8001ca8:	e000e100 	.word	0xe000e100

08001cac <LCD_Init>:
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
};

//Funcion que inicializa el LCD a 4 bits
void LCD_Init(void){
 8001cac:	b580      	push	{r7, lr}
 8001cae:	b082      	sub	sp, #8
 8001cb0:	af00      	add	r7, sp, #0
	int8_t const *p;
/**
  * Habilitamos las señales de reloj para los puertos I/O
	*/
	RCC->IOPENR		|=	( 0x1UL <<  1U );
 8001cb2:	4bab      	ldr	r3, [pc, #684]	@ (8001f60 <LCD_Init+0x2b4>)
 8001cb4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8001cb6:	4baa      	ldr	r3, [pc, #680]	@ (8001f60 <LCD_Init+0x2b4>)
 8001cb8:	2102      	movs	r1, #2
 8001cba:	430a      	orrs	r2, r1
 8001cbc:	635a      	str	r2, [r3, #52]	@ 0x34

/**
  * Configuración de los pines de control (RS, RW, EN) como GP output PP
	*/
	GPIOB->PUPDR  &= ~( 0x3UL << 18U );
 8001cbe:	4ba9      	ldr	r3, [pc, #676]	@ (8001f64 <LCD_Init+0x2b8>)
 8001cc0:	68da      	ldr	r2, [r3, #12]
 8001cc2:	4ba8      	ldr	r3, [pc, #672]	@ (8001f64 <LCD_Init+0x2b8>)
 8001cc4:	49a8      	ldr	r1, [pc, #672]	@ (8001f68 <LCD_Init+0x2bc>)
 8001cc6:	400a      	ands	r2, r1
 8001cc8:	60da      	str	r2, [r3, #12]
	GPIOB->OTYPER &= ~( 0x1UL <<  9U );
 8001cca:	4ba6      	ldr	r3, [pc, #664]	@ (8001f64 <LCD_Init+0x2b8>)
 8001ccc:	685a      	ldr	r2, [r3, #4]
 8001cce:	4ba5      	ldr	r3, [pc, #660]	@ (8001f64 <LCD_Init+0x2b8>)
 8001cd0:	49a6      	ldr	r1, [pc, #664]	@ (8001f6c <LCD_Init+0x2c0>)
 8001cd2:	400a      	ands	r2, r1
 8001cd4:	605a      	str	r2, [r3, #4]
	GPIOB->MODER  &= ~( 0x2UL << 18U );
 8001cd6:	4ba3      	ldr	r3, [pc, #652]	@ (8001f64 <LCD_Init+0x2b8>)
 8001cd8:	681a      	ldr	r2, [r3, #0]
 8001cda:	4ba2      	ldr	r3, [pc, #648]	@ (8001f64 <LCD_Init+0x2b8>)
 8001cdc:	49a4      	ldr	r1, [pc, #656]	@ (8001f70 <LCD_Init+0x2c4>)
 8001cde:	400a      	ands	r2, r1
 8001ce0:	601a      	str	r2, [r3, #0]
	GPIOB->MODER  |=  ( 0x1UL << 18U );
 8001ce2:	4ba0      	ldr	r3, [pc, #640]	@ (8001f64 <LCD_Init+0x2b8>)
 8001ce4:	681a      	ldr	r2, [r3, #0]
 8001ce6:	4b9f      	ldr	r3, [pc, #636]	@ (8001f64 <LCD_Init+0x2b8>)
 8001ce8:	2180      	movs	r1, #128	@ 0x80
 8001cea:	02c9      	lsls	r1, r1, #11
 8001cec:	430a      	orrs	r2, r1
 8001cee:	601a      	str	r2, [r3, #0]

	GPIOB->PUPDR  &= ~( 0x3UL << 20U );
 8001cf0:	4b9c      	ldr	r3, [pc, #624]	@ (8001f64 <LCD_Init+0x2b8>)
 8001cf2:	68da      	ldr	r2, [r3, #12]
 8001cf4:	4b9b      	ldr	r3, [pc, #620]	@ (8001f64 <LCD_Init+0x2b8>)
 8001cf6:	499f      	ldr	r1, [pc, #636]	@ (8001f74 <LCD_Init+0x2c8>)
 8001cf8:	400a      	ands	r2, r1
 8001cfa:	60da      	str	r2, [r3, #12]
	GPIOB->OTYPER &= ~( 0x1UL << 10U );
 8001cfc:	4b99      	ldr	r3, [pc, #612]	@ (8001f64 <LCD_Init+0x2b8>)
 8001cfe:	685a      	ldr	r2, [r3, #4]
 8001d00:	4b98      	ldr	r3, [pc, #608]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d02:	499d      	ldr	r1, [pc, #628]	@ (8001f78 <LCD_Init+0x2cc>)
 8001d04:	400a      	ands	r2, r1
 8001d06:	605a      	str	r2, [r3, #4]
	GPIOB->MODER  &= ~( 0x2UL << 20U );
 8001d08:	4b96      	ldr	r3, [pc, #600]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d0a:	681a      	ldr	r2, [r3, #0]
 8001d0c:	4b95      	ldr	r3, [pc, #596]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d0e:	499b      	ldr	r1, [pc, #620]	@ (8001f7c <LCD_Init+0x2d0>)
 8001d10:	400a      	ands	r2, r1
 8001d12:	601a      	str	r2, [r3, #0]
	GPIOB->MODER  |=  ( 0x1UL << 20U );
 8001d14:	4b93      	ldr	r3, [pc, #588]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d16:	681a      	ldr	r2, [r3, #0]
 8001d18:	4b92      	ldr	r3, [pc, #584]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d1a:	2180      	movs	r1, #128	@ 0x80
 8001d1c:	0349      	lsls	r1, r1, #13
 8001d1e:	430a      	orrs	r2, r1
 8001d20:	601a      	str	r2, [r3, #0]

	GPIOB->PUPDR  &= ~( 0x3UL << 22U );
 8001d22:	4b90      	ldr	r3, [pc, #576]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d24:	68da      	ldr	r2, [r3, #12]
 8001d26:	4b8f      	ldr	r3, [pc, #572]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d28:	4995      	ldr	r1, [pc, #596]	@ (8001f80 <LCD_Init+0x2d4>)
 8001d2a:	400a      	ands	r2, r1
 8001d2c:	60da      	str	r2, [r3, #12]
	GPIOB->OTYPER &= ~( 0x1UL << 11U );
 8001d2e:	4b8d      	ldr	r3, [pc, #564]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d30:	685a      	ldr	r2, [r3, #4]
 8001d32:	4b8c      	ldr	r3, [pc, #560]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d34:	4993      	ldr	r1, [pc, #588]	@ (8001f84 <LCD_Init+0x2d8>)
 8001d36:	400a      	ands	r2, r1
 8001d38:	605a      	str	r2, [r3, #4]
	GPIOB->MODER  &= ~( 0x2UL << 22U );
 8001d3a:	4b8a      	ldr	r3, [pc, #552]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d3c:	681a      	ldr	r2, [r3, #0]
 8001d3e:	4b89      	ldr	r3, [pc, #548]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d40:	4991      	ldr	r1, [pc, #580]	@ (8001f88 <LCD_Init+0x2dc>)
 8001d42:	400a      	ands	r2, r1
 8001d44:	601a      	str	r2, [r3, #0]
	GPIOB->MODER  |=  ( 0x1UL << 22U );
 8001d46:	4b87      	ldr	r3, [pc, #540]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d48:	681a      	ldr	r2, [r3, #0]
 8001d4a:	4b86      	ldr	r3, [pc, #536]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d4c:	2180      	movs	r1, #128	@ 0x80
 8001d4e:	03c9      	lsls	r1, r1, #15
 8001d50:	430a      	orrs	r2, r1
 8001d52:	601a      	str	r2, [r3, #0]

/**
  * Configuración de los pines de datos (D4-D7) como GP output PP
	*/
	GPIOB->PUPDR  &= ~( 0x3UL << 24U );
 8001d54:	4b83      	ldr	r3, [pc, #524]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d56:	68da      	ldr	r2, [r3, #12]
 8001d58:	4b82      	ldr	r3, [pc, #520]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d5a:	498c      	ldr	r1, [pc, #560]	@ (8001f8c <LCD_Init+0x2e0>)
 8001d5c:	400a      	ands	r2, r1
 8001d5e:	60da      	str	r2, [r3, #12]
	GPIOB->OTYPER &= ~( 0x1UL << 12U );
 8001d60:	4b80      	ldr	r3, [pc, #512]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d62:	685a      	ldr	r2, [r3, #4]
 8001d64:	4b7f      	ldr	r3, [pc, #508]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d66:	498a      	ldr	r1, [pc, #552]	@ (8001f90 <LCD_Init+0x2e4>)
 8001d68:	400a      	ands	r2, r1
 8001d6a:	605a      	str	r2, [r3, #4]
	GPIOB->MODER  &= ~( 0x2UL << 24U );
 8001d6c:	4b7d      	ldr	r3, [pc, #500]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d6e:	681a      	ldr	r2, [r3, #0]
 8001d70:	4b7c      	ldr	r3, [pc, #496]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d72:	4988      	ldr	r1, [pc, #544]	@ (8001f94 <LCD_Init+0x2e8>)
 8001d74:	400a      	ands	r2, r1
 8001d76:	601a      	str	r2, [r3, #0]
	GPIOB->MODER  |=  ( 0x1UL << 24U );
 8001d78:	4b7a      	ldr	r3, [pc, #488]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d7a:	681a      	ldr	r2, [r3, #0]
 8001d7c:	4b79      	ldr	r3, [pc, #484]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d7e:	2180      	movs	r1, #128	@ 0x80
 8001d80:	0449      	lsls	r1, r1, #17
 8001d82:	430a      	orrs	r2, r1
 8001d84:	601a      	str	r2, [r3, #0]

	GPIOB->PUPDR  &= ~( 0x3UL << 26U );
 8001d86:	4b77      	ldr	r3, [pc, #476]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d88:	68da      	ldr	r2, [r3, #12]
 8001d8a:	4b76      	ldr	r3, [pc, #472]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d8c:	4982      	ldr	r1, [pc, #520]	@ (8001f98 <LCD_Init+0x2ec>)
 8001d8e:	400a      	ands	r2, r1
 8001d90:	60da      	str	r2, [r3, #12]
	GPIOB->OTYPER &= ~( 0x1UL << 13U );
 8001d92:	4b74      	ldr	r3, [pc, #464]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d94:	685a      	ldr	r2, [r3, #4]
 8001d96:	4b73      	ldr	r3, [pc, #460]	@ (8001f64 <LCD_Init+0x2b8>)
 8001d98:	4980      	ldr	r1, [pc, #512]	@ (8001f9c <LCD_Init+0x2f0>)
 8001d9a:	400a      	ands	r2, r1
 8001d9c:	605a      	str	r2, [r3, #4]
	GPIOB->MODER  &= ~( 0x2UL << 26U );
 8001d9e:	4b71      	ldr	r3, [pc, #452]	@ (8001f64 <LCD_Init+0x2b8>)
 8001da0:	681a      	ldr	r2, [r3, #0]
 8001da2:	4b70      	ldr	r3, [pc, #448]	@ (8001f64 <LCD_Init+0x2b8>)
 8001da4:	497e      	ldr	r1, [pc, #504]	@ (8001fa0 <LCD_Init+0x2f4>)
 8001da6:	400a      	ands	r2, r1
 8001da8:	601a      	str	r2, [r3, #0]
	GPIOB->MODER  |=  ( 0x1UL << 26U );
 8001daa:	4b6e      	ldr	r3, [pc, #440]	@ (8001f64 <LCD_Init+0x2b8>)
 8001dac:	681a      	ldr	r2, [r3, #0]
 8001dae:	4b6d      	ldr	r3, [pc, #436]	@ (8001f64 <LCD_Init+0x2b8>)
 8001db0:	2180      	movs	r1, #128	@ 0x80
 8001db2:	04c9      	lsls	r1, r1, #19
 8001db4:	430a      	orrs	r2, r1
 8001db6:	601a      	str	r2, [r3, #0]

	GPIOB->PUPDR  &= ~( 0x3UL << 28U );
 8001db8:	4b6a      	ldr	r3, [pc, #424]	@ (8001f64 <LCD_Init+0x2b8>)
 8001dba:	68da      	ldr	r2, [r3, #12]
 8001dbc:	4b69      	ldr	r3, [pc, #420]	@ (8001f64 <LCD_Init+0x2b8>)
 8001dbe:	4979      	ldr	r1, [pc, #484]	@ (8001fa4 <LCD_Init+0x2f8>)
 8001dc0:	400a      	ands	r2, r1
 8001dc2:	60da      	str	r2, [r3, #12]
	GPIOB->OTYPER &= ~( 0x1UL << 14U );
 8001dc4:	4b67      	ldr	r3, [pc, #412]	@ (8001f64 <LCD_Init+0x2b8>)
 8001dc6:	685a      	ldr	r2, [r3, #4]
 8001dc8:	4b66      	ldr	r3, [pc, #408]	@ (8001f64 <LCD_Init+0x2b8>)
 8001dca:	4977      	ldr	r1, [pc, #476]	@ (8001fa8 <LCD_Init+0x2fc>)
 8001dcc:	400a      	ands	r2, r1
 8001dce:	605a      	str	r2, [r3, #4]
	GPIOB->MODER  &= ~( 0x2UL << 28U );
 8001dd0:	4b64      	ldr	r3, [pc, #400]	@ (8001f64 <LCD_Init+0x2b8>)
 8001dd2:	681a      	ldr	r2, [r3, #0]
 8001dd4:	4b63      	ldr	r3, [pc, #396]	@ (8001f64 <LCD_Init+0x2b8>)
 8001dd6:	4975      	ldr	r1, [pc, #468]	@ (8001fac <LCD_Init+0x300>)
 8001dd8:	400a      	ands	r2, r1
 8001dda:	601a      	str	r2, [r3, #0]
	GPIOB->MODER  |=  ( 0x1UL << 28U );
 8001ddc:	4b61      	ldr	r3, [pc, #388]	@ (8001f64 <LCD_Init+0x2b8>)
 8001dde:	681a      	ldr	r2, [r3, #0]
 8001de0:	4b60      	ldr	r3, [pc, #384]	@ (8001f64 <LCD_Init+0x2b8>)
 8001de2:	2180      	movs	r1, #128	@ 0x80
 8001de4:	0549      	lsls	r1, r1, #21
 8001de6:	430a      	orrs	r2, r1
 8001de8:	601a      	str	r2, [r3, #0]

	GPIOB->PUPDR  &= ~( 0x3UL << 30U );
 8001dea:	4b5e      	ldr	r3, [pc, #376]	@ (8001f64 <LCD_Init+0x2b8>)
 8001dec:	68da      	ldr	r2, [r3, #12]
 8001dee:	4b5d      	ldr	r3, [pc, #372]	@ (8001f64 <LCD_Init+0x2b8>)
 8001df0:	0092      	lsls	r2, r2, #2
 8001df2:	0892      	lsrs	r2, r2, #2
 8001df4:	60da      	str	r2, [r3, #12]
	GPIOB->OTYPER &= ~( 0x1UL << 15U );
 8001df6:	4b5b      	ldr	r3, [pc, #364]	@ (8001f64 <LCD_Init+0x2b8>)
 8001df8:	685a      	ldr	r2, [r3, #4]
 8001dfa:	4b5a      	ldr	r3, [pc, #360]	@ (8001f64 <LCD_Init+0x2b8>)
 8001dfc:	496c      	ldr	r1, [pc, #432]	@ (8001fb0 <LCD_Init+0x304>)
 8001dfe:	400a      	ands	r2, r1
 8001e00:	605a      	str	r2, [r3, #4]
	GPIOB->MODER  &= ~( 0x2UL << 30U );
 8001e02:	4b58      	ldr	r3, [pc, #352]	@ (8001f64 <LCD_Init+0x2b8>)
 8001e04:	681a      	ldr	r2, [r3, #0]
 8001e06:	4b57      	ldr	r3, [pc, #348]	@ (8001f64 <LCD_Init+0x2b8>)
 8001e08:	0052      	lsls	r2, r2, #1
 8001e0a:	0852      	lsrs	r2, r2, #1
 8001e0c:	601a      	str	r2, [r3, #0]
	GPIOB->MODER  |=  ( 0x1UL << 30U );
 8001e0e:	4b55      	ldr	r3, [pc, #340]	@ (8001f64 <LCD_Init+0x2b8>)
 8001e10:	681a      	ldr	r2, [r3, #0]
 8001e12:	4b54      	ldr	r3, [pc, #336]	@ (8001f64 <LCD_Init+0x2b8>)
 8001e14:	2180      	movs	r1, #128	@ 0x80
 8001e16:	05c9      	lsls	r1, r1, #23
 8001e18:	430a      	orrs	r2, r1
 8001e1a:	601a      	str	r2, [r3, #0]
/**
  * Inicialización del LCD
  * https://web.alfredstate.edu/faculty/weimandn/lcd/lcd_initialization/lcd_initialization_index.html
  * Power ON
  */
	GPIOB->BSRR	 =	 LCD_RS_PIN_LOW;
 8001e1c:	4b51      	ldr	r3, [pc, #324]	@ (8001f64 <LCD_Init+0x2b8>)
 8001e1e:	2280      	movs	r2, #128	@ 0x80
 8001e20:	0492      	lsls	r2, r2, #18
 8001e22:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_RW_PIN_LOW;
 8001e24:	4b4f      	ldr	r3, [pc, #316]	@ (8001f64 <LCD_Init+0x2b8>)
 8001e26:	2280      	movs	r2, #128	@ 0x80
 8001e28:	04d2      	lsls	r2, r2, #19
 8001e2a:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_EN_PIN_LOW;
 8001e2c:	4b4d      	ldr	r3, [pc, #308]	@ (8001f64 <LCD_Init+0x2b8>)
 8001e2e:	2280      	movs	r2, #128	@ 0x80
 8001e30:	0512      	lsls	r2, r2, #20
 8001e32:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D4_PIN_LOW;
 8001e34:	4b4b      	ldr	r3, [pc, #300]	@ (8001f64 <LCD_Init+0x2b8>)
 8001e36:	2280      	movs	r2, #128	@ 0x80
 8001e38:	0552      	lsls	r2, r2, #21
 8001e3a:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D5_PIN_LOW;
 8001e3c:	4b49      	ldr	r3, [pc, #292]	@ (8001f64 <LCD_Init+0x2b8>)
 8001e3e:	2280      	movs	r2, #128	@ 0x80
 8001e40:	0592      	lsls	r2, r2, #22
 8001e42:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D6_PIN_LOW;
 8001e44:	4b47      	ldr	r3, [pc, #284]	@ (8001f64 <LCD_Init+0x2b8>)
 8001e46:	2280      	movs	r2, #128	@ 0x80
 8001e48:	05d2      	lsls	r2, r2, #23
 8001e4a:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D7_PIN_LOW;
 8001e4c:	4b45      	ldr	r3, [pc, #276]	@ (8001f64 <LCD_Init+0x2b8>)
 8001e4e:	2280      	movs	r2, #128	@ 0x80
 8001e50:	0612      	lsls	r2, r2, #24
 8001e52:	619a      	str	r2, [r3, #24]
	SysTick_Delay( 50 );
 8001e54:	2032      	movs	r0, #50	@ 0x32
 8001e56:	f000 fc3f 	bl	80026d8 <SysTick_Delay>

	/* Special case of 'Function Set'	*/
	GPIOB->BSRR	 =	 LCD_D4_PIN_HIGH;
 8001e5a:	4b42      	ldr	r3, [pc, #264]	@ (8001f64 <LCD_Init+0x2b8>)
 8001e5c:	2280      	movs	r2, #128	@ 0x80
 8001e5e:	0152      	lsls	r2, r2, #5
 8001e60:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D5_PIN_HIGH;
 8001e62:	4b40      	ldr	r3, [pc, #256]	@ (8001f64 <LCD_Init+0x2b8>)
 8001e64:	2280      	movs	r2, #128	@ 0x80
 8001e66:	0192      	lsls	r2, r2, #6
 8001e68:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D6_PIN_LOW;
 8001e6a:	4b3e      	ldr	r3, [pc, #248]	@ (8001f64 <LCD_Init+0x2b8>)
 8001e6c:	2280      	movs	r2, #128	@ 0x80
 8001e6e:	05d2      	lsls	r2, r2, #23
 8001e70:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D7_PIN_LOW;
 8001e72:	4b3c      	ldr	r3, [pc, #240]	@ (8001f64 <LCD_Init+0x2b8>)
 8001e74:	2280      	movs	r2, #128	@ 0x80
 8001e76:	0612      	lsls	r2, r2, #24
 8001e78:	619a      	str	r2, [r3, #24]
	LCD_Pulse_EN( );
 8001e7a:	f000 f9ff 	bl	800227c <LCD_Pulse_EN>
	SysTick_Delay( 50 );
 8001e7e:	2032      	movs	r0, #50	@ 0x32
 8001e80:	f000 fc2a 	bl	80026d8 <SysTick_Delay>

	/* Special case of 'Function Set' */
	GPIOB->BSRR	 =	 LCD_D4_PIN_HIGH;
 8001e84:	4b37      	ldr	r3, [pc, #220]	@ (8001f64 <LCD_Init+0x2b8>)
 8001e86:	2280      	movs	r2, #128	@ 0x80
 8001e88:	0152      	lsls	r2, r2, #5
 8001e8a:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D5_PIN_HIGH;
 8001e8c:	4b35      	ldr	r3, [pc, #212]	@ (8001f64 <LCD_Init+0x2b8>)
 8001e8e:	2280      	movs	r2, #128	@ 0x80
 8001e90:	0192      	lsls	r2, r2, #6
 8001e92:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D6_PIN_LOW;
 8001e94:	4b33      	ldr	r3, [pc, #204]	@ (8001f64 <LCD_Init+0x2b8>)
 8001e96:	2280      	movs	r2, #128	@ 0x80
 8001e98:	05d2      	lsls	r2, r2, #23
 8001e9a:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D7_PIN_LOW;
 8001e9c:	4b31      	ldr	r3, [pc, #196]	@ (8001f64 <LCD_Init+0x2b8>)
 8001e9e:	2280      	movs	r2, #128	@ 0x80
 8001ea0:	0612      	lsls	r2, r2, #24
 8001ea2:	619a      	str	r2, [r3, #24]
	LCD_Pulse_EN( );
 8001ea4:	f000 f9ea 	bl	800227c <LCD_Pulse_EN>
	SysTick_Delay( 50 );
 8001ea8:	2032      	movs	r0, #50	@ 0x32
 8001eaa:	f000 fc15 	bl	80026d8 <SysTick_Delay>

	/* Special case of 'Function Set' */
	GPIOB->BSRR	 =	 LCD_D4_PIN_HIGH;
 8001eae:	4b2d      	ldr	r3, [pc, #180]	@ (8001f64 <LCD_Init+0x2b8>)
 8001eb0:	2280      	movs	r2, #128	@ 0x80
 8001eb2:	0152      	lsls	r2, r2, #5
 8001eb4:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D5_PIN_HIGH;
 8001eb6:	4b2b      	ldr	r3, [pc, #172]	@ (8001f64 <LCD_Init+0x2b8>)
 8001eb8:	2280      	movs	r2, #128	@ 0x80
 8001eba:	0192      	lsls	r2, r2, #6
 8001ebc:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D6_PIN_LOW;
 8001ebe:	4b29      	ldr	r3, [pc, #164]	@ (8001f64 <LCD_Init+0x2b8>)
 8001ec0:	2280      	movs	r2, #128	@ 0x80
 8001ec2:	05d2      	lsls	r2, r2, #23
 8001ec4:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D7_PIN_LOW;
 8001ec6:	4b27      	ldr	r3, [pc, #156]	@ (8001f64 <LCD_Init+0x2b8>)
 8001ec8:	2280      	movs	r2, #128	@ 0x80
 8001eca:	0612      	lsls	r2, r2, #24
 8001ecc:	619a      	str	r2, [r3, #24]
	LCD_Pulse_EN( );
 8001ece:	f000 f9d5 	bl	800227c <LCD_Pulse_EN>
	while( LCD_Busy( ) );
 8001ed2:	46c0      	nop			@ (mov r8, r8)
 8001ed4:	f000 f962 	bl	800219c <LCD_Busy>
 8001ed8:	1e03      	subs	r3, r0, #0
 8001eda:	d1fb      	bne.n	8001ed4 <LCD_Init+0x228>

	/* Initial 'Function Set' to change 4-bit mode	*/
	GPIOB->BSRR	 =	 LCD_D4_PIN_LOW;
 8001edc:	4b21      	ldr	r3, [pc, #132]	@ (8001f64 <LCD_Init+0x2b8>)
 8001ede:	2280      	movs	r2, #128	@ 0x80
 8001ee0:	0552      	lsls	r2, r2, #21
 8001ee2:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D5_PIN_HIGH;
 8001ee4:	4b1f      	ldr	r3, [pc, #124]	@ (8001f64 <LCD_Init+0x2b8>)
 8001ee6:	2280      	movs	r2, #128	@ 0x80
 8001ee8:	0192      	lsls	r2, r2, #6
 8001eea:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D6_PIN_LOW;
 8001eec:	4b1d      	ldr	r3, [pc, #116]	@ (8001f64 <LCD_Init+0x2b8>)
 8001eee:	2280      	movs	r2, #128	@ 0x80
 8001ef0:	05d2      	lsls	r2, r2, #23
 8001ef2:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	 =	 LCD_D7_PIN_LOW;
 8001ef4:	4b1b      	ldr	r3, [pc, #108]	@ (8001f64 <LCD_Init+0x2b8>)
 8001ef6:	2280      	movs	r2, #128	@ 0x80
 8001ef8:	0612      	lsls	r2, r2, #24
 8001efa:	619a      	str	r2, [r3, #24]
	LCD_Pulse_EN( );
 8001efc:	f000 f9be 	bl	800227c <LCD_Pulse_EN>
	while( LCD_Busy( ) );
 8001f00:	46c0      	nop			@ (mov r8, r8)
 8001f02:	f000 f94b 	bl	800219c <LCD_Busy>
 8001f06:	1e03      	subs	r3, r0, #0
 8001f08:	d1fb      	bne.n	8001f02 <LCD_Init+0x256>
	/* 'Function Set' (I=1, N and F as required)	*/
	LCD_Write_Cmd( 0x28U );
 8001f0a:	2028      	movs	r0, #40	@ 0x28
 8001f0c:	f000 f8bc 	bl	8002088 <LCD_Write_Cmd>
	/* 'Display ON/OFF Control' (D=1, C=0, B=0)	*/
	LCD_Write_Cmd( 0x0CU );
 8001f10:	200c      	movs	r0, #12
 8001f12:	f000 f8b9 	bl	8002088 <LCD_Write_Cmd>
	/* 'Clear Display'	*/
	LCD_Write_Cmd( 0x01U );//
 8001f16:	2001      	movs	r0, #1
 8001f18:	f000 f8b6 	bl	8002088 <LCD_Write_Cmd>
	/* 'Entry Mode Set' (I/D and S as required)	*/
	LCD_Write_Cmd( 0x06U );
 8001f1c:	2006      	movs	r0, #6
 8001f1e:	f000 f8b3 	bl	8002088 <LCD_Write_Cmd>
	/* Initialization Ends	*/
//	LCD_Write_Cmd( 0x0FU );

	//Cargamos el caracter definido por el usuario en la CGRAM
	LCD_Write_Cmd( 0x40 );
 8001f22:	2040      	movs	r0, #64	@ 0x40
 8001f24:	f000 f8b0 	bl	8002088 <LCD_Write_Cmd>
	p = &UserFont[0][0];
 8001f28:	4b22      	ldr	r3, [pc, #136]	@ (8001fb4 <LCD_Init+0x308>)
 8001f2a:	607b      	str	r3, [r7, #4]

	for( int i = 0; i < sizeof( UserFont ); i++, p++ )
 8001f2c:	2300      	movs	r3, #0
 8001f2e:	603b      	str	r3, [r7, #0]
 8001f30:	e00c      	b.n	8001f4c <LCD_Init+0x2a0>
		LCD_Put_Char( *p );
 8001f32:	687b      	ldr	r3, [r7, #4]
 8001f34:	781b      	ldrb	r3, [r3, #0]
 8001f36:	b25b      	sxtb	r3, r3
 8001f38:	b2db      	uxtb	r3, r3
 8001f3a:	0018      	movs	r0, r3
 8001f3c:	f000 f8ba 	bl	80020b4 <LCD_Put_Char>
	for( int i = 0; i < sizeof( UserFont ); i++, p++ )
 8001f40:	683b      	ldr	r3, [r7, #0]
 8001f42:	3301      	adds	r3, #1
 8001f44:	603b      	str	r3, [r7, #0]
 8001f46:	687b      	ldr	r3, [r7, #4]
 8001f48:	3301      	adds	r3, #1
 8001f4a:	607b      	str	r3, [r7, #4]
 8001f4c:	683b      	ldr	r3, [r7, #0]
 8001f4e:	2b3f      	cmp	r3, #63	@ 0x3f
 8001f50:	d9ef      	bls.n	8001f32 <LCD_Init+0x286>

	/*	Set DDRAM address in address			*/
	LCD_Write_Cmd( 0x80 );//
 8001f52:	2080      	movs	r0, #128	@ 0x80
 8001f54:	f000 f898 	bl	8002088 <LCD_Write_Cmd>
}
 8001f58:	46c0      	nop			@ (mov r8, r8)
 8001f5a:	46bd      	mov	sp, r7
 8001f5c:	b002      	add	sp, #8
 8001f5e:	bd80      	pop	{r7, pc}
 8001f60:	40021000 	.word	0x40021000
 8001f64:	50000400 	.word	0x50000400
 8001f68:	fff3ffff 	.word	0xfff3ffff
 8001f6c:	fffffdff 	.word	0xfffffdff
 8001f70:	fff7ffff 	.word	0xfff7ffff
 8001f74:	ffcfffff 	.word	0xffcfffff
 8001f78:	fffffbff 	.word	0xfffffbff
 8001f7c:	ffdfffff 	.word	0xffdfffff
 8001f80:	ff3fffff 	.word	0xff3fffff
 8001f84:	fffff7ff 	.word	0xfffff7ff
 8001f88:	ff7fffff 	.word	0xff7fffff
 8001f8c:	fcffffff 	.word	0xfcffffff
 8001f90:	ffffefff 	.word	0xffffefff
 8001f94:	fdffffff 	.word	0xfdffffff
 8001f98:	f3ffffff 	.word	0xf3ffffff
 8001f9c:	ffffdfff 	.word	0xffffdfff
 8001fa0:	f7ffffff 	.word	0xf7ffffff
 8001fa4:	cfffffff 	.word	0xcfffffff
 8001fa8:	ffffbfff 	.word	0xffffbfff
 8001fac:	dfffffff 	.word	0xdfffffff
 8001fb0:	ffff7fff 	.word	0xffff7fff
 8001fb4:	08003b70 	.word	0x08003b70

08001fb8 <LCD_Out_Data4>:

//Funcion que genera un strobe en el LCD
void LCD_Out_Data4(uint8_t val){
 8001fb8:	b580      	push	{r7, lr}
 8001fba:	b082      	sub	sp, #8
 8001fbc:	af00      	add	r7, sp, #0
 8001fbe:	0002      	movs	r2, r0
 8001fc0:	1dfb      	adds	r3, r7, #7
 8001fc2:	701a      	strb	r2, [r3, #0]
	if( ( val & 0x01U ) == 0x01U )
 8001fc4:	1dfb      	adds	r3, r7, #7
 8001fc6:	781b      	ldrb	r3, [r3, #0]
 8001fc8:	2201      	movs	r2, #1
 8001fca:	4013      	ands	r3, r2
 8001fcc:	d004      	beq.n	8001fd8 <LCD_Out_Data4+0x20>
		GPIOB->BSRR	=	LCD_D4_PIN_HIGH;
 8001fce:	4b1b      	ldr	r3, [pc, #108]	@ (800203c <LCD_Out_Data4+0x84>)
 8001fd0:	2280      	movs	r2, #128	@ 0x80
 8001fd2:	0152      	lsls	r2, r2, #5
 8001fd4:	619a      	str	r2, [r3, #24]
 8001fd6:	e003      	b.n	8001fe0 <LCD_Out_Data4+0x28>
	else
		GPIOB->BSRR	=	LCD_D4_PIN_LOW;
 8001fd8:	4b18      	ldr	r3, [pc, #96]	@ (800203c <LCD_Out_Data4+0x84>)
 8001fda:	2280      	movs	r2, #128	@ 0x80
 8001fdc:	0552      	lsls	r2, r2, #21
 8001fde:	619a      	str	r2, [r3, #24]

	if( ( val & 0x02U ) == 0x02U )
 8001fe0:	1dfb      	adds	r3, r7, #7
 8001fe2:	781b      	ldrb	r3, [r3, #0]
 8001fe4:	2202      	movs	r2, #2
 8001fe6:	4013      	ands	r3, r2
 8001fe8:	d004      	beq.n	8001ff4 <LCD_Out_Data4+0x3c>
		GPIOB->BSRR	=	LCD_D5_PIN_HIGH;
 8001fea:	4b14      	ldr	r3, [pc, #80]	@ (800203c <LCD_Out_Data4+0x84>)
 8001fec:	2280      	movs	r2, #128	@ 0x80
 8001fee:	0192      	lsls	r2, r2, #6
 8001ff0:	619a      	str	r2, [r3, #24]
 8001ff2:	e003      	b.n	8001ffc <LCD_Out_Data4+0x44>
	else
		GPIOB->BSRR	=	LCD_D5_PIN_LOW;
 8001ff4:	4b11      	ldr	r3, [pc, #68]	@ (800203c <LCD_Out_Data4+0x84>)
 8001ff6:	2280      	movs	r2, #128	@ 0x80
 8001ff8:	0592      	lsls	r2, r2, #22
 8001ffa:	619a      	str	r2, [r3, #24]

	if( ( val & 0x04U ) == 0x04U )
 8001ffc:	1dfb      	adds	r3, r7, #7
 8001ffe:	781b      	ldrb	r3, [r3, #0]
 8002000:	2204      	movs	r2, #4
 8002002:	4013      	ands	r3, r2
 8002004:	d004      	beq.n	8002010 <LCD_Out_Data4+0x58>
		GPIOB->BSRR	=	LCD_D6_PIN_HIGH;
 8002006:	4b0d      	ldr	r3, [pc, #52]	@ (800203c <LCD_Out_Data4+0x84>)
 8002008:	2280      	movs	r2, #128	@ 0x80
 800200a:	01d2      	lsls	r2, r2, #7
 800200c:	619a      	str	r2, [r3, #24]
 800200e:	e003      	b.n	8002018 <LCD_Out_Data4+0x60>
	else
		GPIOB->BSRR	=	LCD_D6_PIN_LOW;
 8002010:	4b0a      	ldr	r3, [pc, #40]	@ (800203c <LCD_Out_Data4+0x84>)
 8002012:	2280      	movs	r2, #128	@ 0x80
 8002014:	05d2      	lsls	r2, r2, #23
 8002016:	619a      	str	r2, [r3, #24]

	if( ( val & 0x08U ) == 0x08U )
 8002018:	1dfb      	adds	r3, r7, #7
 800201a:	781b      	ldrb	r3, [r3, #0]
 800201c:	2208      	movs	r2, #8
 800201e:	4013      	ands	r3, r2
 8002020:	d004      	beq.n	800202c <LCD_Out_Data4+0x74>
		GPIOB->BSRR	=	LCD_D7_PIN_HIGH;
 8002022:	4b06      	ldr	r3, [pc, #24]	@ (800203c <LCD_Out_Data4+0x84>)
 8002024:	2280      	movs	r2, #128	@ 0x80
 8002026:	0212      	lsls	r2, r2, #8
 8002028:	619a      	str	r2, [r3, #24]
	else
		GPIOB->BSRR	=	LCD_D7_PIN_LOW;
}
 800202a:	e003      	b.n	8002034 <LCD_Out_Data4+0x7c>
		GPIOB->BSRR	=	LCD_D7_PIN_LOW;
 800202c:	4b03      	ldr	r3, [pc, #12]	@ (800203c <LCD_Out_Data4+0x84>)
 800202e:	2280      	movs	r2, #128	@ 0x80
 8002030:	0612      	lsls	r2, r2, #24
 8002032:	619a      	str	r2, [r3, #24]
}
 8002034:	46c0      	nop			@ (mov r8, r8)
 8002036:	46bd      	mov	sp, r7
 8002038:	b002      	add	sp, #8
 800203a:	bd80      	pop	{r7, pc}
 800203c:	50000400 	.word	0x50000400

08002040 <LCD_Write_Byte>:

//Funcion que escribe 1 byte de datos en el LCD
void LCD_Write_Byte(uint8_t val){
 8002040:	b580      	push	{r7, lr}
 8002042:	b082      	sub	sp, #8
 8002044:	af00      	add	r7, sp, #0
 8002046:	0002      	movs	r2, r0
 8002048:	1dfb      	adds	r3, r7, #7
 800204a:	701a      	strb	r2, [r3, #0]
	LCD_Out_Data4( ( val >> 4 ) & 0x0FU );
 800204c:	1dfb      	adds	r3, r7, #7
 800204e:	781b      	ldrb	r3, [r3, #0]
 8002050:	091b      	lsrs	r3, r3, #4
 8002052:	b2db      	uxtb	r3, r3
 8002054:	0018      	movs	r0, r3
 8002056:	f7ff ffaf 	bl	8001fb8 <LCD_Out_Data4>
	LCD_Pulse_EN( );
 800205a:	f000 f90f 	bl	800227c <LCD_Pulse_EN>
	LCD_Out_Data4( val & 0x0FU );
 800205e:	1dfb      	adds	r3, r7, #7
 8002060:	781b      	ldrb	r3, [r3, #0]
 8002062:	220f      	movs	r2, #15
 8002064:	4013      	ands	r3, r2
 8002066:	b2db      	uxtb	r3, r3
 8002068:	0018      	movs	r0, r3
 800206a:	f7ff ffa5 	bl	8001fb8 <LCD_Out_Data4>
	LCD_Pulse_EN( );
 800206e:	f000 f905 	bl	800227c <LCD_Pulse_EN>
	while( LCD_Busy( ) );
 8002072:	46c0      	nop			@ (mov r8, r8)
 8002074:	f000 f892 	bl	800219c <LCD_Busy>
 8002078:	1e03      	subs	r3, r0, #0
 800207a:	d1fb      	bne.n	8002074 <LCD_Write_Byte+0x34>
}
 800207c:	46c0      	nop			@ (mov r8, r8)
 800207e:	46c0      	nop			@ (mov r8, r8)
 8002080:	46bd      	mov	sp, r7
 8002082:	b002      	add	sp, #8
 8002084:	bd80      	pop	{r7, pc}
	...

08002088 <LCD_Write_Cmd>:

//Funcion que escribe un comando en el LCD
void LCD_Write_Cmd(uint8_t val){
 8002088:	b580      	push	{r7, lr}
 800208a:	b082      	sub	sp, #8
 800208c:	af00      	add	r7, sp, #0
 800208e:	0002      	movs	r2, r0
 8002090:	1dfb      	adds	r3, r7, #7
 8002092:	701a      	strb	r2, [r3, #0]
	GPIOB->BSRR	=	LCD_RS_PIN_LOW;
 8002094:	4b06      	ldr	r3, [pc, #24]	@ (80020b0 <LCD_Write_Cmd+0x28>)
 8002096:	2280      	movs	r2, #128	@ 0x80
 8002098:	0492      	lsls	r2, r2, #18
 800209a:	619a      	str	r2, [r3, #24]
	LCD_Write_Byte( val );
 800209c:	1dfb      	adds	r3, r7, #7
 800209e:	781b      	ldrb	r3, [r3, #0]
 80020a0:	0018      	movs	r0, r3
 80020a2:	f7ff ffcd 	bl	8002040 <LCD_Write_Byte>
}
 80020a6:	46c0      	nop			@ (mov r8, r8)
 80020a8:	46bd      	mov	sp, r7
 80020aa:	b002      	add	sp, #8
 80020ac:	bd80      	pop	{r7, pc}
 80020ae:	46c0      	nop			@ (mov r8, r8)
 80020b0:	50000400 	.word	0x50000400

080020b4 <LCD_Put_Char>:

//Escribe un caracter ASCII en el LCD
void LCD_Put_Char(uint8_t c){
 80020b4:	b580      	push	{r7, lr}
 80020b6:	b082      	sub	sp, #8
 80020b8:	af00      	add	r7, sp, #0
 80020ba:	0002      	movs	r2, r0
 80020bc:	1dfb      	adds	r3, r7, #7
 80020be:	701a      	strb	r2, [r3, #0]
	GPIOB->BSRR	=	LCD_RS_PIN_HIGH;
 80020c0:	4b06      	ldr	r3, [pc, #24]	@ (80020dc <LCD_Put_Char+0x28>)
 80020c2:	2280      	movs	r2, #128	@ 0x80
 80020c4:	0092      	lsls	r2, r2, #2
 80020c6:	619a      	str	r2, [r3, #24]
	LCD_Write_Byte( c );
 80020c8:	1dfb      	adds	r3, r7, #7
 80020ca:	781b      	ldrb	r3, [r3, #0]
 80020cc:	0018      	movs	r0, r3
 80020ce:	f7ff ffb7 	bl	8002040 <LCD_Write_Byte>
}
 80020d2:	46c0      	nop			@ (mov r8, r8)
 80020d4:	46bd      	mov	sp, r7
 80020d6:	b002      	add	sp, #8
 80020d8:	bd80      	pop	{r7, pc}
 80020da:	46c0      	nop			@ (mov r8, r8)
 80020dc:	50000400 	.word	0x50000400

080020e0 <LCD_Set_Cursor>:

//Funcion que establece el cursor en una posicion de la pantalla del LCD
//Minimum values for line and column must be 1
void LCD_Set_Cursor(uint8_t line, uint8_t column){
 80020e0:	b580      	push	{r7, lr}
 80020e2:	b084      	sub	sp, #16
 80020e4:	af00      	add	r7, sp, #0
 80020e6:	0002      	movs	r2, r0
 80020e8:	1dfb      	adds	r3, r7, #7
 80020ea:	701a      	strb	r2, [r3, #0]
 80020ec:	1dbb      	adds	r3, r7, #6
 80020ee:	1c0a      	adds	r2, r1, #0
 80020f0:	701a      	strb	r2, [r3, #0]
	uint8_t address;
	column--;
 80020f2:	1dbb      	adds	r3, r7, #6
 80020f4:	781a      	ldrb	r2, [r3, #0]
 80020f6:	1dbb      	adds	r3, r7, #6
 80020f8:	3a01      	subs	r2, #1
 80020fa:	701a      	strb	r2, [r3, #0]
	line--;
 80020fc:	1dfb      	adds	r3, r7, #7
 80020fe:	781a      	ldrb	r2, [r3, #0]
 8002100:	1dfb      	adds	r3, r7, #7
 8002102:	3a01      	subs	r2, #1
 8002104:	701a      	strb	r2, [r3, #0]
	address = ( line * 0x40U ) + column;
 8002106:	1dfb      	adds	r3, r7, #7
 8002108:	781b      	ldrb	r3, [r3, #0]
 800210a:	019b      	lsls	r3, r3, #6
 800210c:	b2d9      	uxtb	r1, r3
 800210e:	200f      	movs	r0, #15
 8002110:	183b      	adds	r3, r7, r0
 8002112:	1dba      	adds	r2, r7, #6
 8002114:	7812      	ldrb	r2, [r2, #0]
 8002116:	188a      	adds	r2, r1, r2
 8002118:	701a      	strb	r2, [r3, #0]
	address = 0x80U + ( address & 0x7FU );
 800211a:	0001      	movs	r1, r0
 800211c:	187b      	adds	r3, r7, r1
 800211e:	781b      	ldrb	r3, [r3, #0]
 8002120:	227f      	movs	r2, #127	@ 0x7f
 8002122:	4013      	ands	r3, r2
 8002124:	b2da      	uxtb	r2, r3
 8002126:	187b      	adds	r3, r7, r1
 8002128:	3a80      	subs	r2, #128	@ 0x80
 800212a:	701a      	strb	r2, [r3, #0]
	LCD_Write_Cmd( address );
 800212c:	187b      	adds	r3, r7, r1
 800212e:	781b      	ldrb	r3, [r3, #0]
 8002130:	0018      	movs	r0, r3
 8002132:	f7ff ffa9 	bl	8002088 <LCD_Write_Cmd>
}
 8002136:	46c0      	nop			@ (mov r8, r8)
 8002138:	46bd      	mov	sp, r7
 800213a:	b004      	add	sp, #16
 800213c:	bd80      	pop	{r7, pc}

0800213e <LCD_Put_Str>:

//Funcion que envia una cadena de caracteres ASCII al LCD
void LCD_Put_Str(char * str){
 800213e:	b590      	push	{r4, r7, lr}
 8002140:	b085      	sub	sp, #20
 8002142:	af00      	add	r7, sp, #0
 8002144:	6078      	str	r0, [r7, #4]
	for( int16_t i = 0; i < 16 && str[ i ] != 0; i++ )
 8002146:	230e      	movs	r3, #14
 8002148:	18fb      	adds	r3, r7, r3
 800214a:	2200      	movs	r2, #0
 800214c:	801a      	strh	r2, [r3, #0]
 800214e:	e012      	b.n	8002176 <LCD_Put_Str+0x38>
		LCD_Put_Char( str[ i ] );
 8002150:	240e      	movs	r4, #14
 8002152:	193b      	adds	r3, r7, r4
 8002154:	2200      	movs	r2, #0
 8002156:	5e9b      	ldrsh	r3, [r3, r2]
 8002158:	687a      	ldr	r2, [r7, #4]
 800215a:	18d3      	adds	r3, r2, r3
 800215c:	781b      	ldrb	r3, [r3, #0]
 800215e:	0018      	movs	r0, r3
 8002160:	f7ff ffa8 	bl	80020b4 <LCD_Put_Char>
	for( int16_t i = 0; i < 16 && str[ i ] != 0; i++ )
 8002164:	0021      	movs	r1, r4
 8002166:	187b      	adds	r3, r7, r1
 8002168:	2200      	movs	r2, #0
 800216a:	5e9b      	ldrsh	r3, [r3, r2]
 800216c:	b29b      	uxth	r3, r3
 800216e:	3301      	adds	r3, #1
 8002170:	b29a      	uxth	r2, r3
 8002172:	187b      	adds	r3, r7, r1
 8002174:	801a      	strh	r2, [r3, #0]
 8002176:	220e      	movs	r2, #14
 8002178:	18bb      	adds	r3, r7, r2
 800217a:	2100      	movs	r1, #0
 800217c:	5e5b      	ldrsh	r3, [r3, r1]
 800217e:	2b0f      	cmp	r3, #15
 8002180:	dc07      	bgt.n	8002192 <LCD_Put_Str+0x54>
 8002182:	18bb      	adds	r3, r7, r2
 8002184:	2200      	movs	r2, #0
 8002186:	5e9b      	ldrsh	r3, [r3, r2]
 8002188:	687a      	ldr	r2, [r7, #4]
 800218a:	18d3      	adds	r3, r2, r3
 800218c:	781b      	ldrb	r3, [r3, #0]
 800218e:	2b00      	cmp	r3, #0
 8002190:	d1de      	bne.n	8002150 <LCD_Put_Str+0x12>
}
 8002192:	46c0      	nop			@ (mov r8, r8)
 8002194:	46bd      	mov	sp, r7
 8002196:	b005      	add	sp, #20
 8002198:	bd90      	pop	{r4, r7, pc}
	...

0800219c <LCD_Busy>:
			LCD_Put_Char( ch[ i ] );
	}
}

//Funcion que provoca tiempos de espera en el LCD
char LCD_Busy(void){
 800219c:	b580      	push	{r7, lr}
 800219e:	af00      	add	r7, sp, #0
/**
  * Configuracion de D7 as input floating
  */
	GPIOB->PUPDR &= ~( 0x3UL << 30U );
 80021a0:	4b34      	ldr	r3, [pc, #208]	@ (8002274 <LCD_Busy+0xd8>)
 80021a2:	68da      	ldr	r2, [r3, #12]
 80021a4:	4b33      	ldr	r3, [pc, #204]	@ (8002274 <LCD_Busy+0xd8>)
 80021a6:	0092      	lsls	r2, r2, #2
 80021a8:	0892      	lsrs	r2, r2, #2
 80021aa:	60da      	str	r2, [r3, #12]
  GPIOB->MODER &= ~( 0x3UL << 30U );
 80021ac:	4b31      	ldr	r3, [pc, #196]	@ (8002274 <LCD_Busy+0xd8>)
 80021ae:	681a      	ldr	r2, [r3, #0]
 80021b0:	4b30      	ldr	r3, [pc, #192]	@ (8002274 <LCD_Busy+0xd8>)
 80021b2:	0092      	lsls	r2, r2, #2
 80021b4:	0892      	lsrs	r2, r2, #2
 80021b6:	601a      	str	r2, [r3, #0]
	GPIOB->BSRR	  =	 LCD_RS_PIN_LOW;
 80021b8:	4b2e      	ldr	r3, [pc, #184]	@ (8002274 <LCD_Busy+0xd8>)
 80021ba:	2280      	movs	r2, #128	@ 0x80
 80021bc:	0492      	lsls	r2, r2, #18
 80021be:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	  =	 LCD_RW_PIN_HIGH;
 80021c0:	4b2c      	ldr	r3, [pc, #176]	@ (8002274 <LCD_Busy+0xd8>)
 80021c2:	2280      	movs	r2, #128	@ 0x80
 80021c4:	00d2      	lsls	r2, r2, #3
 80021c6:	619a      	str	r2, [r3, #24]
	GPIOB->BSRR	  =	 LCD_EN_PIN_HIGH;
 80021c8:	4b2a      	ldr	r3, [pc, #168]	@ (8002274 <LCD_Busy+0xd8>)
 80021ca:	2280      	movs	r2, #128	@ 0x80
 80021cc:	0112      	lsls	r2, r2, #4
 80021ce:	619a      	str	r2, [r3, #24]
	SysTick_Delay( 1 );
 80021d0:	2001      	movs	r0, #1
 80021d2:	f000 fa81 	bl	80026d8 <SysTick_Delay>
	if(( GPIOB->IDR	& LCD_D7_PIN_HIGH )) {
 80021d6:	4b27      	ldr	r3, [pc, #156]	@ (8002274 <LCD_Busy+0xd8>)
 80021d8:	691a      	ldr	r2, [r3, #16]
 80021da:	2380      	movs	r3, #128	@ 0x80
 80021dc:	021b      	lsls	r3, r3, #8
 80021de:	4013      	ands	r3, r2
 80021e0:	d022      	beq.n	8002228 <LCD_Busy+0x8c>
		GPIOB->BSRR	=  LCD_EN_PIN_LOW;
 80021e2:	4b24      	ldr	r3, [pc, #144]	@ (8002274 <LCD_Busy+0xd8>)
 80021e4:	2280      	movs	r2, #128	@ 0x80
 80021e6:	0512      	lsls	r2, r2, #20
 80021e8:	619a      	str	r2, [r3, #24]
		GPIOB->BSRR	=	 LCD_RW_PIN_LOW;
 80021ea:	4b22      	ldr	r3, [pc, #136]	@ (8002274 <LCD_Busy+0xd8>)
 80021ec:	2280      	movs	r2, #128	@ 0x80
 80021ee:	04d2      	lsls	r2, r2, #19
 80021f0:	619a      	str	r2, [r3, #24]
/**
  * Configuracion de D7 as output push-pull
  */
		GPIOB->PUPDR  &= ~( 0x3UL << 30U );
 80021f2:	4b20      	ldr	r3, [pc, #128]	@ (8002274 <LCD_Busy+0xd8>)
 80021f4:	68da      	ldr	r2, [r3, #12]
 80021f6:	4b1f      	ldr	r3, [pc, #124]	@ (8002274 <LCD_Busy+0xd8>)
 80021f8:	0092      	lsls	r2, r2, #2
 80021fa:	0892      	lsrs	r2, r2, #2
 80021fc:	60da      	str	r2, [r3, #12]
  	GPIOB->OTYPER &= ~( 0x1UL << 15U );
 80021fe:	4b1d      	ldr	r3, [pc, #116]	@ (8002274 <LCD_Busy+0xd8>)
 8002200:	685a      	ldr	r2, [r3, #4]
 8002202:	4b1c      	ldr	r3, [pc, #112]	@ (8002274 <LCD_Busy+0xd8>)
 8002204:	491c      	ldr	r1, [pc, #112]	@ (8002278 <LCD_Busy+0xdc>)
 8002206:	400a      	ands	r2, r1
 8002208:	605a      	str	r2, [r3, #4]
  	GPIOB->MODER  &= ~( 0x2UL << 30U );
 800220a:	4b1a      	ldr	r3, [pc, #104]	@ (8002274 <LCD_Busy+0xd8>)
 800220c:	681a      	ldr	r2, [r3, #0]
 800220e:	4b19      	ldr	r3, [pc, #100]	@ (8002274 <LCD_Busy+0xd8>)
 8002210:	0052      	lsls	r2, r2, #1
 8002212:	0852      	lsrs	r2, r2, #1
 8002214:	601a      	str	r2, [r3, #0]
  	GPIOB->MODER  |=  ( 0x1UL << 30U );
 8002216:	4b17      	ldr	r3, [pc, #92]	@ (8002274 <LCD_Busy+0xd8>)
 8002218:	681a      	ldr	r2, [r3, #0]
 800221a:	4b16      	ldr	r3, [pc, #88]	@ (8002274 <LCD_Busy+0xd8>)
 800221c:	2180      	movs	r1, #128	@ 0x80
 800221e:	05c9      	lsls	r1, r1, #23
 8002220:	430a      	orrs	r2, r1
 8002222:	601a      	str	r2, [r3, #0]
		return 1;
 8002224:	2301      	movs	r3, #1
 8002226:	e021      	b.n	800226c <LCD_Busy+0xd0>
	} else {
		GPIOB->BSRR	=  LCD_EN_PIN_LOW;
 8002228:	4b12      	ldr	r3, [pc, #72]	@ (8002274 <LCD_Busy+0xd8>)
 800222a:	2280      	movs	r2, #128	@ 0x80
 800222c:	0512      	lsls	r2, r2, #20
 800222e:	619a      	str	r2, [r3, #24]
		GPIOB->BSRR	=	 LCD_RW_PIN_LOW;
 8002230:	4b10      	ldr	r3, [pc, #64]	@ (8002274 <LCD_Busy+0xd8>)
 8002232:	2280      	movs	r2, #128	@ 0x80
 8002234:	04d2      	lsls	r2, r2, #19
 8002236:	619a      	str	r2, [r3, #24]
/**
  * Configuracion de D7 as output push-pull
  */
		GPIOB->PUPDR  &= ~( 0x3UL << 30U );
 8002238:	4b0e      	ldr	r3, [pc, #56]	@ (8002274 <LCD_Busy+0xd8>)
 800223a:	68da      	ldr	r2, [r3, #12]
 800223c:	4b0d      	ldr	r3, [pc, #52]	@ (8002274 <LCD_Busy+0xd8>)
 800223e:	0092      	lsls	r2, r2, #2
 8002240:	0892      	lsrs	r2, r2, #2
 8002242:	60da      	str	r2, [r3, #12]
  	GPIOB->OTYPER &= ~( 0x1UL << 15U );
 8002244:	4b0b      	ldr	r3, [pc, #44]	@ (8002274 <LCD_Busy+0xd8>)
 8002246:	685a      	ldr	r2, [r3, #4]
 8002248:	4b0a      	ldr	r3, [pc, #40]	@ (8002274 <LCD_Busy+0xd8>)
 800224a:	490b      	ldr	r1, [pc, #44]	@ (8002278 <LCD_Busy+0xdc>)
 800224c:	400a      	ands	r2, r1
 800224e:	605a      	str	r2, [r3, #4]
  	GPIOB->MODER  &= ~( 0x2UL << 30U );
 8002250:	4b08      	ldr	r3, [pc, #32]	@ (8002274 <LCD_Busy+0xd8>)
 8002252:	681a      	ldr	r2, [r3, #0]
 8002254:	4b07      	ldr	r3, [pc, #28]	@ (8002274 <LCD_Busy+0xd8>)
 8002256:	0052      	lsls	r2, r2, #1
 8002258:	0852      	lsrs	r2, r2, #1
 800225a:	601a      	str	r2, [r3, #0]
  	GPIOB->MODER  |=  ( 0x1UL << 30U );
 800225c:	4b05      	ldr	r3, [pc, #20]	@ (8002274 <LCD_Busy+0xd8>)
 800225e:	681a      	ldr	r2, [r3, #0]
 8002260:	4b04      	ldr	r3, [pc, #16]	@ (8002274 <LCD_Busy+0xd8>)
 8002262:	2180      	movs	r1, #128	@ 0x80
 8002264:	05c9      	lsls	r1, r1, #23
 8002266:	430a      	orrs	r2, r1
 8002268:	601a      	str	r2, [r3, #0]
		return 0;
 800226a:	2300      	movs	r3, #0
	}
}
 800226c:	0018      	movs	r0, r3
 800226e:	46bd      	mov	sp, r7
 8002270:	bd80      	pop	{r7, pc}
 8002272:	46c0      	nop			@ (mov r8, r8)
 8002274:	50000400 	.word	0x50000400
 8002278:	ffff7fff 	.word	0xffff7fff

0800227c <LCD_Pulse_EN>:

//Funcion que genera un pulso en el pin EN del LCD
void LCD_Pulse_EN(void){
 800227c:	b580      	push	{r7, lr}
 800227e:	af00      	add	r7, sp, #0
	GPIOB->BSRR	=	LCD_EN_PIN_LOW;//
 8002280:	4b0b      	ldr	r3, [pc, #44]	@ (80022b0 <LCD_Pulse_EN+0x34>)
 8002282:	2280      	movs	r2, #128	@ 0x80
 8002284:	0512      	lsls	r2, r2, #20
 8002286:	619a      	str	r2, [r3, #24]
	SysTick_Delay( 1 );
 8002288:	2001      	movs	r0, #1
 800228a:	f000 fa25 	bl	80026d8 <SysTick_Delay>
	GPIOB->BSRR	=	LCD_EN_PIN_HIGH;
 800228e:	4b08      	ldr	r3, [pc, #32]	@ (80022b0 <LCD_Pulse_EN+0x34>)
 8002290:	2280      	movs	r2, #128	@ 0x80
 8002292:	0112      	lsls	r2, r2, #4
 8002294:	619a      	str	r2, [r3, #24]
	SysTick_Delay( 1 );
 8002296:	2001      	movs	r0, #1
 8002298:	f000 fa1e 	bl	80026d8 <SysTick_Delay>
	GPIOB->BSRR	=	LCD_EN_PIN_LOW;
 800229c:	4b04      	ldr	r3, [pc, #16]	@ (80022b0 <LCD_Pulse_EN+0x34>)
 800229e:	2280      	movs	r2, #128	@ 0x80
 80022a0:	0512      	lsls	r2, r2, #20
 80022a2:	619a      	str	r2, [r3, #24]
	SysTick_Delay( 1 );
 80022a4:	2001      	movs	r0, #1
 80022a6:	f000 fa17 	bl	80026d8 <SysTick_Delay>
}
 80022aa:	46c0      	nop			@ (mov r8, r8)
 80022ac:	46bd      	mov	sp, r7
 80022ae:	bd80      	pop	{r7, pc}
 80022b0:	50000400 	.word	0x50000400

080022b4 <USART1_IRQHandler>:

uint8_t button_status = 0;
uint16_t val;

void USART1_IRQHandler(void)
{
 80022b4:	b580      	push	{r7, lr}
 80022b6:	b082      	sub	sp, #8
 80022b8:	af00      	add	r7, sp, #0
	if ((USART1->ISR & (0x1UL << 5U)))
 80022ba:	4b30      	ldr	r3, [pc, #192]	@ (800237c <USART1_IRQHandler+0xc8>)
 80022bc:	69db      	ldr	r3, [r3, #28]
 80022be:	2220      	movs	r2, #32
 80022c0:	4013      	ands	r3, r2
 80022c2:	d057      	beq.n	8002374 <USART1_IRQHandler+0xc0>
	{ // wait until a data is received (ISR register)
		char received = USART1->RDR;
 80022c4:	4b2d      	ldr	r3, [pc, #180]	@ (800237c <USART1_IRQHandler+0xc8>)
 80022c6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80022c8:	1dfb      	adds	r3, r7, #7
 80022ca:	701a      	strb	r2, [r3, #0]
		if (received == 'V')
 80022cc:	1dfb      	adds	r3, r7, #7
 80022ce:	781b      	ldrb	r3, [r3, #0]
 80022d0:	2b56      	cmp	r3, #86	@ 0x56
 80022d2:	d114      	bne.n	80022fe <USART1_IRQHandler+0x4a>
		{
			velocity = atoi(buffer_str);
 80022d4:	4b2a      	ldr	r3, [pc, #168]	@ (8002380 <USART1_IRQHandler+0xcc>)
 80022d6:	0018      	movs	r0, r3
 80022d8:	f000 fc07 	bl	8002aea <atoi>
 80022dc:	0002      	movs	r2, r0
 80022de:	4b29      	ldr	r3, [pc, #164]	@ (8002384 <USART1_IRQHandler+0xd0>)
 80022e0:	601a      	str	r2, [r3, #0]
			memcpy(buffer_vel, buffer_str, sizeof(buffer_str));
 80022e2:	4b29      	ldr	r3, [pc, #164]	@ (8002388 <USART1_IRQHandler+0xd4>)
 80022e4:	4a26      	ldr	r2, [pc, #152]	@ (8002380 <USART1_IRQHandler+0xcc>)
 80022e6:	ca03      	ldmia	r2!, {r0, r1}
 80022e8:	c303      	stmia	r3!, {r0, r1}
			memset(buffer_str, 0, sizeof(buffer_str));
 80022ea:	4b25      	ldr	r3, [pc, #148]	@ (8002380 <USART1_IRQHandler+0xcc>)
 80022ec:	2208      	movs	r2, #8
 80022ee:	2100      	movs	r1, #0
 80022f0:	0018      	movs	r0, r3
 80022f2:	f000 fdb7 	bl	8002e64 <memset>
			index_k = 0;
 80022f6:	4b25      	ldr	r3, [pc, #148]	@ (800238c <USART1_IRQHandler+0xd8>)
 80022f8:	2200      	movs	r2, #0
 80022fa:	601a      	str	r2, [r3, #0]
				memset(buffer_str, 0, sizeof(buffer_str));
				index_k = 0;
			}
		}
	}
}
 80022fc:	e03a      	b.n	8002374 <USART1_IRQHandler+0xc0>
		else if (received == 'S')
 80022fe:	1dfb      	adds	r3, r7, #7
 8002300:	781b      	ldrb	r3, [r3, #0]
 8002302:	2b53      	cmp	r3, #83	@ 0x53
 8002304:	d10d      	bne.n	8002322 <USART1_IRQHandler+0x6e>
					memcpy(buffer_rpm, buffer_str, sizeof(buffer_str));
 8002306:	4b22      	ldr	r3, [pc, #136]	@ (8002390 <USART1_IRQHandler+0xdc>)
 8002308:	4a1d      	ldr	r2, [pc, #116]	@ (8002380 <USART1_IRQHandler+0xcc>)
 800230a:	ca03      	ldmia	r2!, {r0, r1}
 800230c:	c303      	stmia	r3!, {r0, r1}
					memset(buffer_str, 0, sizeof(buffer_str));
 800230e:	4b1c      	ldr	r3, [pc, #112]	@ (8002380 <USART1_IRQHandler+0xcc>)
 8002310:	2208      	movs	r2, #8
 8002312:	2100      	movs	r1, #0
 8002314:	0018      	movs	r0, r3
 8002316:	f000 fda5 	bl	8002e64 <memset>
					index_k = 0;
 800231a:	4b1c      	ldr	r3, [pc, #112]	@ (800238c <USART1_IRQHandler+0xd8>)
 800231c:	2200      	movs	r2, #0
 800231e:	601a      	str	r2, [r3, #0]
}
 8002320:	e028      	b.n	8002374 <USART1_IRQHandler+0xc0>
		else if (received == 'E')
 8002322:	1dfb      	adds	r3, r7, #7
 8002324:	781b      	ldrb	r3, [r3, #0]
 8002326:	2b45      	cmp	r3, #69	@ 0x45
 8002328:	d10d      	bne.n	8002346 <USART1_IRQHandler+0x92>
							memcpy(buffer_gear, buffer_str, sizeof(buffer_str));
 800232a:	4b1a      	ldr	r3, [pc, #104]	@ (8002394 <USART1_IRQHandler+0xe0>)
 800232c:	4a14      	ldr	r2, [pc, #80]	@ (8002380 <USART1_IRQHandler+0xcc>)
 800232e:	ca03      	ldmia	r2!, {r0, r1}
 8002330:	c303      	stmia	r3!, {r0, r1}
							memset(buffer_str, 0, sizeof(buffer_str));
 8002332:	4b13      	ldr	r3, [pc, #76]	@ (8002380 <USART1_IRQHandler+0xcc>)
 8002334:	2208      	movs	r2, #8
 8002336:	2100      	movs	r1, #0
 8002338:	0018      	movs	r0, r3
 800233a:	f000 fd93 	bl	8002e64 <memset>
							index_k = 0;
 800233e:	4b13      	ldr	r3, [pc, #76]	@ (800238c <USART1_IRQHandler+0xd8>)
 8002340:	2200      	movs	r2, #0
 8002342:	601a      	str	r2, [r3, #0]
}
 8002344:	e016      	b.n	8002374 <USART1_IRQHandler+0xc0>
			if (index_k < BUFFER_SIZE - 1)
 8002346:	4b11      	ldr	r3, [pc, #68]	@ (800238c <USART1_IRQHandler+0xd8>)
 8002348:	681b      	ldr	r3, [r3, #0]
 800234a:	2b06      	cmp	r3, #6
 800234c:	dc09      	bgt.n	8002362 <USART1_IRQHandler+0xae>
				buffer_str[index_k++] = received;
 800234e:	4b0f      	ldr	r3, [pc, #60]	@ (800238c <USART1_IRQHandler+0xd8>)
 8002350:	681b      	ldr	r3, [r3, #0]
 8002352:	1c59      	adds	r1, r3, #1
 8002354:	4a0d      	ldr	r2, [pc, #52]	@ (800238c <USART1_IRQHandler+0xd8>)
 8002356:	6011      	str	r1, [r2, #0]
 8002358:	4a09      	ldr	r2, [pc, #36]	@ (8002380 <USART1_IRQHandler+0xcc>)
 800235a:	1df9      	adds	r1, r7, #7
 800235c:	7809      	ldrb	r1, [r1, #0]
 800235e:	54d1      	strb	r1, [r2, r3]
}
 8002360:	e008      	b.n	8002374 <USART1_IRQHandler+0xc0>
				memset(buffer_str, 0, sizeof(buffer_str));
 8002362:	4b07      	ldr	r3, [pc, #28]	@ (8002380 <USART1_IRQHandler+0xcc>)
 8002364:	2208      	movs	r2, #8
 8002366:	2100      	movs	r1, #0
 8002368:	0018      	movs	r0, r3
 800236a:	f000 fd7b 	bl	8002e64 <memset>
				index_k = 0;
 800236e:	4b07      	ldr	r3, [pc, #28]	@ (800238c <USART1_IRQHandler+0xd8>)
 8002370:	2200      	movs	r2, #0
 8002372:	601a      	str	r2, [r3, #0]
}
 8002374:	46c0      	nop			@ (mov r8, r8)
 8002376:	46bd      	mov	sp, r7
 8002378:	b002      	add	sp, #8
 800237a:	bd80      	pop	{r7, pc}
 800237c:	40013800 	.word	0x40013800
 8002380:	20000078 	.word	0x20000078
 8002384:	20000098 	.word	0x20000098
 8002388:	20000080 	.word	0x20000080
 800238c:	2000009c 	.word	0x2000009c
 8002390:	20000088 	.word	0x20000088
 8002394:	20000090 	.word	0x20000090

08002398 <main>:

/* Superloop structure */
int main(void)
{
 8002398:	b580      	push	{r7, lr}
 800239a:	af00      	add	r7, sp, #0
	/* Declarations and Initializations */
	USER_RCC_Init();
 800239c:	f000 f87a 	bl	8002494 <USER_RCC_Init>
	USER_TIM3_PWM_Init( );
 80023a0:	f000 f9c2 	bl	8002728 <USER_TIM3_PWM_Init>
	USER_SysTick_Init();
 80023a4:	f000 f982 	bl	80026ac <USER_SysTick_Init>
	USER_UART1_Init();
 80023a8:	f000 fa96 	bl	80028d8 <USER_UART1_Init>
	USER_GPIO_Init();
 80023ac:	f000 f8b2 	bl	8002514 <USER_GPIO_Init>
	LCD_Init();
 80023b0:	f7ff fc7c 	bl	8001cac <LCD_Init>
	USER_ADC_Init();
 80023b4:	f7ff fb6a 	bl	8001a8c <USER_ADC_Init>
	USER_EXTI1_Init();
 80023b8:	f7ff fc4c 	bl	8001c54 <USER_EXTI1_Init>

	LCD_Clear();
 80023bc:	2001      	movs	r0, #1
 80023be:	f7ff fe63 	bl	8002088 <LCD_Write_Cmd>

	/* Repetitive block */
	for (;;)
	{
		val = USER_ADC_Read();
 80023c2:	f7ff fc25 	bl	8001c10 <USER_ADC_Read>
 80023c6:	0003      	movs	r3, r0
 80023c8:	001a      	movs	r2, r3
 80023ca:	4b29      	ldr	r3, [pc, #164]	@ (8002470 <main+0xd8>)
 80023cc:	801a      	strh	r2, [r3, #0]
		if (GPIOA->IDR & (0x1UL << 8U))
 80023ce:	23a0      	movs	r3, #160	@ 0xa0
 80023d0:	05db      	lsls	r3, r3, #23
 80023d2:	691a      	ldr	r2, [r3, #16]
 80023d4:	2380      	movs	r3, #128	@ 0x80
 80023d6:	005b      	lsls	r3, r3, #1
 80023d8:	4013      	ands	r3, r2
 80023da:	d003      	beq.n	80023e4 <main+0x4c>
		{
			button_status = 1;
 80023dc:	4b25      	ldr	r3, [pc, #148]	@ (8002474 <main+0xdc>)
 80023de:	2201      	movs	r2, #1
 80023e0:	701a      	strb	r2, [r3, #0]
 80023e2:	e002      	b.n	80023ea <main+0x52>
		}
		else
		{
			button_status = 0;
 80023e4:	4b23      	ldr	r3, [pc, #140]	@ (8002474 <main+0xdc>)
 80023e6:	2200      	movs	r2, #0
 80023e8:	701a      	strb	r2, [r3, #0]
		}
		if(velocity > 100){
 80023ea:	4b23      	ldr	r3, [pc, #140]	@ (8002478 <main+0xe0>)
 80023ec:	681b      	ldr	r3, [r3, #0]
 80023ee:	2b64      	cmp	r3, #100	@ 0x64
 80023f0:	dd02      	ble.n	80023f8 <main+0x60>
					velocity = 100;
 80023f2:	4b21      	ldr	r3, [pc, #132]	@ (8002478 <main+0xe0>)
 80023f4:	2264      	movs	r2, #100	@ 0x64
 80023f6:	601a      	str	r2, [r3, #0]
				}
		LCD_Set_Cursor(1, 1);
 80023f8:	2101      	movs	r1, #1
 80023fa:	2001      	movs	r0, #1
 80023fc:	f7ff fe70 	bl	80020e0 <LCD_Set_Cursor>
		LCD_Put_Str("Vel:       G:  ");
 8002400:	4b1e      	ldr	r3, [pc, #120]	@ (800247c <main+0xe4>)
 8002402:	0018      	movs	r0, r3
 8002404:	f7ff fe9b 	bl	800213e <LCD_Put_Str>
		LCD_Set_Cursor(1, 5);
 8002408:	2105      	movs	r1, #5
 800240a:	2001      	movs	r0, #1
 800240c:	f7ff fe68 	bl	80020e0 <LCD_Set_Cursor>
		LCD_Put_Str(buffer_vel);
 8002410:	4b1b      	ldr	r3, [pc, #108]	@ (8002480 <main+0xe8>)
 8002412:	0018      	movs	r0, r3
 8002414:	f7ff fe93 	bl	800213e <LCD_Put_Str>
		LCD_Set_Cursor(1, 14);
 8002418:	210e      	movs	r1, #14
 800241a:	2001      	movs	r0, #1
 800241c:	f7ff fe60 	bl	80020e0 <LCD_Set_Cursor>
		LCD_Put_Str(buffer_gear);
 8002420:	4b18      	ldr	r3, [pc, #96]	@ (8002484 <main+0xec>)
 8002422:	0018      	movs	r0, r3
 8002424:	f7ff fe8b 	bl	800213e <LCD_Put_Str>
		LCD_Set_Cursor(2, 1);
 8002428:	2101      	movs	r1, #1
 800242a:	2002      	movs	r0, #2
 800242c:	f7ff fe58 	bl	80020e0 <LCD_Set_Cursor>
		LCD_Put_Str("RPM:       ");
 8002430:	4b15      	ldr	r3, [pc, #84]	@ (8002488 <main+0xf0>)
 8002432:	0018      	movs	r0, r3
 8002434:	f7ff fe83 	bl	800213e <LCD_Put_Str>
		LCD_Set_Cursor(2, 5);
 8002438:	2105      	movs	r1, #5
 800243a:	2002      	movs	r0, #2
 800243c:	f7ff fe50 	bl	80020e0 <LCD_Set_Cursor>
		LCD_Put_Str(buffer_rpm);
 8002440:	4b12      	ldr	r3, [pc, #72]	@ (800248c <main+0xf4>)
 8002442:	0018      	movs	r0, r3
 8002444:	f7ff fe7b 	bl	800213e <LCD_Put_Str>
		update_cycle(velocity);
 8002448:	4b0b      	ldr	r3, [pc, #44]	@ (8002478 <main+0xe0>)
 800244a:	681b      	ldr	r3, [r3, #0]
 800244c:	b2db      	uxtb	r3, r3
 800244e:	0018      	movs	r0, r3
 8002450:	f000 f9f6 	bl	8002840 <update_cycle>
		printf("{adc: %u, button: %u}\n", val, button_status);
 8002454:	4b06      	ldr	r3, [pc, #24]	@ (8002470 <main+0xd8>)
 8002456:	881b      	ldrh	r3, [r3, #0]
 8002458:	0019      	movs	r1, r3
 800245a:	4b06      	ldr	r3, [pc, #24]	@ (8002474 <main+0xdc>)
 800245c:	781b      	ldrb	r3, [r3, #0]
 800245e:	001a      	movs	r2, r3
 8002460:	4b0b      	ldr	r3, [pc, #44]	@ (8002490 <main+0xf8>)
 8002462:	0018      	movs	r0, r3
 8002464:	f000 fca2 	bl	8002dac <iprintf>
		SysTick_Delay(100);
 8002468:	2064      	movs	r0, #100	@ 0x64
 800246a:	f000 f935 	bl	80026d8 <SysTick_Delay>
		val = USER_ADC_Read();
 800246e:	e7a8      	b.n	80023c2 <main+0x2a>
 8002470:	200000a2 	.word	0x200000a2
 8002474:	200000a0 	.word	0x200000a0
 8002478:	20000098 	.word	0x20000098
 800247c:	08003afc 	.word	0x08003afc
 8002480:	20000080 	.word	0x20000080
 8002484:	20000090 	.word	0x20000090
 8002488:	08003b0c 	.word	0x08003b0c
 800248c:	20000088 	.word	0x20000088
 8002490:	08003b18 	.word	0x08003b18

08002494 <USER_RCC_Init>:
	}
}

void USER_RCC_Init(void)
{
 8002494:	b580      	push	{r7, lr}
 8002496:	af00      	add	r7, sp, #0
	// set gpio output
	RCC->IOPENR = RCC->IOPENR | (0x1UL << 0U);
 8002498:	4b1a      	ldr	r3, [pc, #104]	@ (8002504 <USER_RCC_Init+0x70>)
 800249a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800249c:	4b19      	ldr	r3, [pc, #100]	@ (8002504 <USER_RCC_Init+0x70>)
 800249e:	2101      	movs	r1, #1
 80024a0:	430a      	orrs	r2, r1
 80024a2:	635a      	str	r2, [r3, #52]	@ 0x34
	/* System Clock (SYSCLK) configuration for 48 MHz */
	FLASH->ACR &= ~(0x6UL << 0U); // 2 HCLK cycles latency, if SYSCLK >=24MHz <=48MHz
 80024a4:	4b18      	ldr	r3, [pc, #96]	@ (8002508 <USER_RCC_Init+0x74>)
 80024a6:	681a      	ldr	r2, [r3, #0]
 80024a8:	4b17      	ldr	r3, [pc, #92]	@ (8002508 <USER_RCC_Init+0x74>)
 80024aa:	2106      	movs	r1, #6
 80024ac:	438a      	bics	r2, r1
 80024ae:	601a      	str	r2, [r3, #0]
	FLASH->ACR |= (0x1UL << 0U);  // 2 HCLK cycles latency, if SYSCLK >=24MHz <=48MHz
 80024b0:	4b15      	ldr	r3, [pc, #84]	@ (8002508 <USER_RCC_Init+0x74>)
 80024b2:	681a      	ldr	r2, [r3, #0]
 80024b4:	4b14      	ldr	r3, [pc, #80]	@ (8002508 <USER_RCC_Init+0x74>)
 80024b6:	2101      	movs	r1, #1
 80024b8:	430a      	orrs	r2, r1
 80024ba:	601a      	str	r2, [r3, #0]
	while ((FLASH->ACR & (0x7UL << 0U)) != 0x001UL)
 80024bc:	46c0      	nop			@ (mov r8, r8)
 80024be:	4b12      	ldr	r3, [pc, #72]	@ (8002508 <USER_RCC_Init+0x74>)
 80024c0:	681b      	ldr	r3, [r3, #0]
 80024c2:	2207      	movs	r2, #7
 80024c4:	4013      	ands	r3, r2
 80024c6:	2b01      	cmp	r3, #1
 80024c8:	d1f9      	bne.n	80024be <USER_RCC_Init+0x2a>
		;						// wait until LATENCY[2:0]=001
	RCC->CR &= ~(0x7UL << 11U); // select HSISYS division factor by 1
 80024ca:	4b0e      	ldr	r3, [pc, #56]	@ (8002504 <USER_RCC_Init+0x70>)
 80024cc:	681a      	ldr	r2, [r3, #0]
 80024ce:	4b0d      	ldr	r3, [pc, #52]	@ (8002504 <USER_RCC_Init+0x70>)
 80024d0:	490e      	ldr	r1, [pc, #56]	@ (800250c <USER_RCC_Init+0x78>)
 80024d2:	400a      	ands	r2, r1
 80024d4:	601a      	str	r2, [r3, #0]
	while (!(RCC->CR & (0x1UL << 10U)))
 80024d6:	46c0      	nop			@ (mov r8, r8)
 80024d8:	4b0a      	ldr	r3, [pc, #40]	@ (8002504 <USER_RCC_Init+0x70>)
 80024da:	681a      	ldr	r2, [r3, #0]
 80024dc:	2380      	movs	r3, #128	@ 0x80
 80024de:	00db      	lsls	r3, r3, #3
 80024e0:	4013      	ands	r3, r2
 80024e2:	d0f9      	beq.n	80024d8 <USER_RCC_Init+0x44>
		;						  // wait until HSISYS is stable and ready
	RCC->CFGR &= ~(0x7UL << 0U);  // select HSISYS as the SYSCLK clock source
 80024e4:	4b07      	ldr	r3, [pc, #28]	@ (8002504 <USER_RCC_Init+0x70>)
 80024e6:	689a      	ldr	r2, [r3, #8]
 80024e8:	4b06      	ldr	r3, [pc, #24]	@ (8002504 <USER_RCC_Init+0x70>)
 80024ea:	2107      	movs	r1, #7
 80024ec:	438a      	bics	r2, r1
 80024ee:	609a      	str	r2, [r3, #8]
	RCC->CFGR &= ~(0x1UL << 11U); // select HCLK division factor by 1
 80024f0:	4b04      	ldr	r3, [pc, #16]	@ (8002504 <USER_RCC_Init+0x70>)
 80024f2:	689a      	ldr	r2, [r3, #8]
 80024f4:	4b03      	ldr	r3, [pc, #12]	@ (8002504 <USER_RCC_Init+0x70>)
 80024f6:	4906      	ldr	r1, [pc, #24]	@ (8002510 <USER_RCC_Init+0x7c>)
 80024f8:	400a      	ands	r2, r1
 80024fa:	609a      	str	r2, [r3, #8]
}
 80024fc:	46c0      	nop			@ (mov r8, r8)
 80024fe:	46bd      	mov	sp, r7
 8002500:	bd80      	pop	{r7, pc}
 8002502:	46c0      	nop			@ (mov r8, r8)
 8002504:	40021000 	.word	0x40021000
 8002508:	40022000 	.word	0x40022000
 800250c:	ffffc7ff 	.word	0xffffc7ff
 8002510:	fffff7ff 	.word	0xfffff7ff

08002514 <USER_GPIO_Init>:

void USER_GPIO_Init(void)
{
 8002514:	b580      	push	{r7, lr}
 8002516:	af00      	add	r7, sp, #0
	// SET 4 BIT LEDS AS OUTPUT
	// PINA5 AS OUTPUT
	GPIOA->BSRR = 0x1UL << 21U;						// Reset PA5 low to turn off LED
 8002518:	23a0      	movs	r3, #160	@ 0xa0
 800251a:	05db      	lsls	r3, r3, #23
 800251c:	2280      	movs	r2, #128	@ 0x80
 800251e:	0392      	lsls	r2, r2, #14
 8002520:	619a      	str	r2, [r3, #24]
	GPIOA->PUPDR = GPIOA->PUPDR & ~(0x3UL << 10U);	// Clear pull-up/pull-down bits for PA5
 8002522:	23a0      	movs	r3, #160	@ 0xa0
 8002524:	05db      	lsls	r3, r3, #23
 8002526:	68da      	ldr	r2, [r3, #12]
 8002528:	23a0      	movs	r3, #160	@ 0xa0
 800252a:	05db      	lsls	r3, r3, #23
 800252c:	491b      	ldr	r1, [pc, #108]	@ (800259c <USER_GPIO_Init+0x88>)
 800252e:	400a      	ands	r2, r1
 8002530:	60da      	str	r2, [r3, #12]
	GPIOA->OTYPER = GPIOA->OTYPER & ~(0x1UL << 5U); // Clear output type bit for PA5
 8002532:	23a0      	movs	r3, #160	@ 0xa0
 8002534:	05db      	lsls	r3, r3, #23
 8002536:	685a      	ldr	r2, [r3, #4]
 8002538:	23a0      	movs	r3, #160	@ 0xa0
 800253a:	05db      	lsls	r3, r3, #23
 800253c:	2120      	movs	r1, #32
 800253e:	438a      	bics	r2, r1
 8002540:	605a      	str	r2, [r3, #4]
	GPIOA->MODER = GPIOA->MODER & ~(0x2UL << 10U);	// Set PA5 as output
 8002542:	23a0      	movs	r3, #160	@ 0xa0
 8002544:	05db      	lsls	r3, r3, #23
 8002546:	681a      	ldr	r2, [r3, #0]
 8002548:	23a0      	movs	r3, #160	@ 0xa0
 800254a:	05db      	lsls	r3, r3, #23
 800254c:	4914      	ldr	r1, [pc, #80]	@ (80025a0 <USER_GPIO_Init+0x8c>)
 800254e:	400a      	ands	r2, r1
 8002550:	601a      	str	r2, [r3, #0]
	GPIOA->MODER = GPIOA->MODER | (0x1UL << 10U);	// Set PA5 as output
 8002552:	23a0      	movs	r3, #160	@ 0xa0
 8002554:	05db      	lsls	r3, r3, #23
 8002556:	681a      	ldr	r2, [r3, #0]
 8002558:	23a0      	movs	r3, #160	@ 0xa0
 800255a:	05db      	lsls	r3, r3, #23
 800255c:	2180      	movs	r1, #128	@ 0x80
 800255e:	00c9      	lsls	r1, r1, #3
 8002560:	430a      	orrs	r2, r1
 8002562:	601a      	str	r2, [r3, #0]
	// PINA9 AS INPUT PULL DOWN
	GPIOA->MODER &= ~(0x3UL << 14U);
 8002564:	23a0      	movs	r3, #160	@ 0xa0
 8002566:	05db      	lsls	r3, r3, #23
 8002568:	681a      	ldr	r2, [r3, #0]
 800256a:	23a0      	movs	r3, #160	@ 0xa0
 800256c:	05db      	lsls	r3, r3, #23
 800256e:	490d      	ldr	r1, [pc, #52]	@ (80025a4 <USER_GPIO_Init+0x90>)
 8002570:	400a      	ands	r2, r1
 8002572:	601a      	str	r2, [r3, #0]
	GPIOA->PUPDR &= ~(0x1UL << 14U);
 8002574:	23a0      	movs	r3, #160	@ 0xa0
 8002576:	05db      	lsls	r3, r3, #23
 8002578:	68da      	ldr	r2, [r3, #12]
 800257a:	23a0      	movs	r3, #160	@ 0xa0
 800257c:	05db      	lsls	r3, r3, #23
 800257e:	490a      	ldr	r1, [pc, #40]	@ (80025a8 <USER_GPIO_Init+0x94>)
 8002580:	400a      	ands	r2, r1
 8002582:	60da      	str	r2, [r3, #12]
	GPIOA->PUPDR |= (0x2UL << 14U);
 8002584:	23a0      	movs	r3, #160	@ 0xa0
 8002586:	05db      	lsls	r3, r3, #23
 8002588:	68da      	ldr	r2, [r3, #12]
 800258a:	23a0      	movs	r3, #160	@ 0xa0
 800258c:	05db      	lsls	r3, r3, #23
 800258e:	2180      	movs	r1, #128	@ 0x80
 8002590:	0209      	lsls	r1, r1, #8
 8002592:	430a      	orrs	r2, r1
 8002594:	60da      	str	r2, [r3, #12]
 8002596:	46c0      	nop			@ (mov r8, r8)
 8002598:	46bd      	mov	sp, r7
 800259a:	bd80      	pop	{r7, pc}
 800259c:	fffff3ff 	.word	0xfffff3ff
 80025a0:	fffff7ff 	.word	0xfffff7ff
 80025a4:	ffff3fff 	.word	0xffff3fff
 80025a8:	ffffbfff 	.word	0xffffbfff

080025ac <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80025ac:	b580      	push	{r7, lr}
 80025ae:	b086      	sub	sp, #24
 80025b0:	af00      	add	r7, sp, #0
 80025b2:	60f8      	str	r0, [r7, #12]
 80025b4:	60b9      	str	r1, [r7, #8]
 80025b6:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80025b8:	2300      	movs	r3, #0
 80025ba:	617b      	str	r3, [r7, #20]
 80025bc:	e00a      	b.n	80025d4 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80025be:	e000      	b.n	80025c2 <_read+0x16>
 80025c0:	bf00      	nop
 80025c2:	0001      	movs	r1, r0
 80025c4:	68bb      	ldr	r3, [r7, #8]
 80025c6:	1c5a      	adds	r2, r3, #1
 80025c8:	60ba      	str	r2, [r7, #8]
 80025ca:	b2ca      	uxtb	r2, r1
 80025cc:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80025ce:	697b      	ldr	r3, [r7, #20]
 80025d0:	3301      	adds	r3, #1
 80025d2:	617b      	str	r3, [r7, #20]
 80025d4:	697a      	ldr	r2, [r7, #20]
 80025d6:	687b      	ldr	r3, [r7, #4]
 80025d8:	429a      	cmp	r2, r3
 80025da:	dbf0      	blt.n	80025be <_read+0x12>
  }

  return len;
 80025dc:	687b      	ldr	r3, [r7, #4]
}
 80025de:	0018      	movs	r0, r3
 80025e0:	46bd      	mov	sp, r7
 80025e2:	b006      	add	sp, #24
 80025e4:	bd80      	pop	{r7, pc}

080025e6 <_close>:
  }
  return len;
}

int _close(int file)
{
 80025e6:	b580      	push	{r7, lr}
 80025e8:	b082      	sub	sp, #8
 80025ea:	af00      	add	r7, sp, #0
 80025ec:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80025ee:	2301      	movs	r3, #1
 80025f0:	425b      	negs	r3, r3
}
 80025f2:	0018      	movs	r0, r3
 80025f4:	46bd      	mov	sp, r7
 80025f6:	b002      	add	sp, #8
 80025f8:	bd80      	pop	{r7, pc}

080025fa <_fstat>:


int _fstat(int file, struct stat *st)
{
 80025fa:	b580      	push	{r7, lr}
 80025fc:	b082      	sub	sp, #8
 80025fe:	af00      	add	r7, sp, #0
 8002600:	6078      	str	r0, [r7, #4]
 8002602:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8002604:	683b      	ldr	r3, [r7, #0]
 8002606:	2280      	movs	r2, #128	@ 0x80
 8002608:	0192      	lsls	r2, r2, #6
 800260a:	605a      	str	r2, [r3, #4]
  return 0;
 800260c:	2300      	movs	r3, #0
}
 800260e:	0018      	movs	r0, r3
 8002610:	46bd      	mov	sp, r7
 8002612:	b002      	add	sp, #8
 8002614:	bd80      	pop	{r7, pc}

08002616 <_isatty>:

int _isatty(int file)
{
 8002616:	b580      	push	{r7, lr}
 8002618:	b082      	sub	sp, #8
 800261a:	af00      	add	r7, sp, #0
 800261c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800261e:	2301      	movs	r3, #1
}
 8002620:	0018      	movs	r0, r3
 8002622:	46bd      	mov	sp, r7
 8002624:	b002      	add	sp, #8
 8002626:	bd80      	pop	{r7, pc}

08002628 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002628:	b580      	push	{r7, lr}
 800262a:	b084      	sub	sp, #16
 800262c:	af00      	add	r7, sp, #0
 800262e:	60f8      	str	r0, [r7, #12]
 8002630:	60b9      	str	r1, [r7, #8]
 8002632:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8002634:	2300      	movs	r3, #0
}
 8002636:	0018      	movs	r0, r3
 8002638:	46bd      	mov	sp, r7
 800263a:	b004      	add	sp, #16
 800263c:	bd80      	pop	{r7, pc}
	...

08002640 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002640:	b580      	push	{r7, lr}
 8002642:	b086      	sub	sp, #24
 8002644:	af00      	add	r7, sp, #0
 8002646:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002648:	4a14      	ldr	r2, [pc, #80]	@ (800269c <_sbrk+0x5c>)
 800264a:	4b15      	ldr	r3, [pc, #84]	@ (80026a0 <_sbrk+0x60>)
 800264c:	1ad3      	subs	r3, r2, r3
 800264e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002650:	697b      	ldr	r3, [r7, #20]
 8002652:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002654:	4b13      	ldr	r3, [pc, #76]	@ (80026a4 <_sbrk+0x64>)
 8002656:	681b      	ldr	r3, [r3, #0]
 8002658:	2b00      	cmp	r3, #0
 800265a:	d102      	bne.n	8002662 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800265c:	4b11      	ldr	r3, [pc, #68]	@ (80026a4 <_sbrk+0x64>)
 800265e:	4a12      	ldr	r2, [pc, #72]	@ (80026a8 <_sbrk+0x68>)
 8002660:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002662:	4b10      	ldr	r3, [pc, #64]	@ (80026a4 <_sbrk+0x64>)
 8002664:	681a      	ldr	r2, [r3, #0]
 8002666:	687b      	ldr	r3, [r7, #4]
 8002668:	18d3      	adds	r3, r2, r3
 800266a:	693a      	ldr	r2, [r7, #16]
 800266c:	429a      	cmp	r2, r3
 800266e:	d207      	bcs.n	8002680 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002670:	f000 fc4e 	bl	8002f10 <__errno>
 8002674:	0003      	movs	r3, r0
 8002676:	220c      	movs	r2, #12
 8002678:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800267a:	2301      	movs	r3, #1
 800267c:	425b      	negs	r3, r3
 800267e:	e009      	b.n	8002694 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002680:	4b08      	ldr	r3, [pc, #32]	@ (80026a4 <_sbrk+0x64>)
 8002682:	681b      	ldr	r3, [r3, #0]
 8002684:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002686:	4b07      	ldr	r3, [pc, #28]	@ (80026a4 <_sbrk+0x64>)
 8002688:	681a      	ldr	r2, [r3, #0]
 800268a:	687b      	ldr	r3, [r7, #4]
 800268c:	18d2      	adds	r2, r2, r3
 800268e:	4b05      	ldr	r3, [pc, #20]	@ (80026a4 <_sbrk+0x64>)
 8002690:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 8002692:	68fb      	ldr	r3, [r7, #12]
}
 8002694:	0018      	movs	r0, r3
 8002696:	46bd      	mov	sp, r7
 8002698:	b006      	add	sp, #24
 800269a:	bd80      	pop	{r7, pc}
 800269c:	20003000 	.word	0x20003000
 80026a0:	00000400 	.word	0x00000400
 80026a4:	200000a4 	.word	0x200000a4
 80026a8:	200001f8 	.word	0x200001f8

080026ac <USER_SysTick_Init>:
#include <stdint.h>
#include "main.h"
#include "systicklib.h"

void USER_SysTick_Init( void ){
 80026ac:	b580      	push	{r7, lr}
 80026ae:	af00      	add	r7, sp, #0
  // Reloj del sistema = 48 MHz
  // SysTick es de 24 bits, así que máximo 2^24-1 = 16,777,215
  // Para 1ms: 48,000,000 / 1000 ciclos
  Systick->RVR  = 48000 - 1;//          Carga para 1ms
 80026b0:	4b07      	ldr	r3, [pc, #28]	@ (80026d0 <USER_SysTick_Init+0x24>)
 80026b2:	4a08      	ldr	r2, [pc, #32]	@ (80026d4 <USER_SysTick_Init+0x28>)
 80026b4:	605a      	str	r2, [r3, #4]
  Systick->CVR  = 0;//                  Reinicia el contador
 80026b6:	4b06      	ldr	r3, [pc, #24]	@ (80026d0 <USER_SysTick_Init+0x24>)
 80026b8:	2200      	movs	r2, #0
 80026ba:	609a      	str	r2, [r3, #8]
  Systick->CSR |=  ( 0x1UL <<  2U );//  Selecciona el reloj del procesador como el Systick
 80026bc:	4b04      	ldr	r3, [pc, #16]	@ (80026d0 <USER_SysTick_Init+0x24>)
 80026be:	681a      	ldr	r2, [r3, #0]
 80026c0:	4b03      	ldr	r3, [pc, #12]	@ (80026d0 <USER_SysTick_Init+0x24>)
 80026c2:	2104      	movs	r1, #4
 80026c4:	430a      	orrs	r2, r1
 80026c6:	601a      	str	r2, [r3, #0]
}
 80026c8:	46c0      	nop			@ (mov r8, r8)
 80026ca:	46bd      	mov	sp, r7
 80026cc:	bd80      	pop	{r7, pc}
 80026ce:	46c0      	nop			@ (mov r8, r8)
 80026d0:	e000e010 	.word	0xe000e010
 80026d4:	0000bb7f 	.word	0x0000bb7f

080026d8 <SysTick_Delay>:

void SysTick_Delay( uint32_t time ) {
 80026d8:	b580      	push	{r7, lr}
 80026da:	b084      	sub	sp, #16
 80026dc:	af00      	add	r7, sp, #0
 80026de:	6078      	str	r0, [r7, #4]
  Systick->CSR |=  ( 0x1UL <<  0U );//  Inicia el Systick
 80026e0:	4b10      	ldr	r3, [pc, #64]	@ (8002724 <SysTick_Delay+0x4c>)
 80026e2:	681a      	ldr	r2, [r3, #0]
 80026e4:	4b0f      	ldr	r3, [pc, #60]	@ (8002724 <SysTick_Delay+0x4c>)
 80026e6:	2101      	movs	r1, #1
 80026e8:	430a      	orrs	r2, r1
 80026ea:	601a      	str	r2, [r3, #0]
  for(uint32_t i = 0; i < time; i++){
 80026ec:	2300      	movs	r3, #0
 80026ee:	60fb      	str	r3, [r7, #12]
 80026f0:	e009      	b.n	8002706 <SysTick_Delay+0x2e>
    // Espera a que el bit COUNTFLAG se ponga en 1 (cuando se desborda)
    while(!( Systick->CSR & ( 0x1UL << 16U )));
 80026f2:	46c0      	nop			@ (mov r8, r8)
 80026f4:	4b0b      	ldr	r3, [pc, #44]	@ (8002724 <SysTick_Delay+0x4c>)
 80026f6:	681a      	ldr	r2, [r3, #0]
 80026f8:	2380      	movs	r3, #128	@ 0x80
 80026fa:	025b      	lsls	r3, r3, #9
 80026fc:	4013      	ands	r3, r2
 80026fe:	d0f9      	beq.n	80026f4 <SysTick_Delay+0x1c>
  for(uint32_t i = 0; i < time; i++){
 8002700:	68fb      	ldr	r3, [r7, #12]
 8002702:	3301      	adds	r3, #1
 8002704:	60fb      	str	r3, [r7, #12]
 8002706:	68fa      	ldr	r2, [r7, #12]
 8002708:	687b      	ldr	r3, [r7, #4]
 800270a:	429a      	cmp	r2, r3
 800270c:	d3f1      	bcc.n	80026f2 <SysTick_Delay+0x1a>
  }
  Systick->CSR &= ~( 0x1UL <<  0U );//  Detiene el SysTick
 800270e:	4b05      	ldr	r3, [pc, #20]	@ (8002724 <SysTick_Delay+0x4c>)
 8002710:	681a      	ldr	r2, [r3, #0]
 8002712:	4b04      	ldr	r3, [pc, #16]	@ (8002724 <SysTick_Delay+0x4c>)
 8002714:	2101      	movs	r1, #1
 8002716:	438a      	bics	r2, r1
 8002718:	601a      	str	r2, [r3, #0]
}
 800271a:	46c0      	nop			@ (mov r8, r8)
 800271c:	46bd      	mov	sp, r7
 800271e:	b004      	add	sp, #16
 8002720:	bd80      	pop	{r7, pc}
 8002722:	46c0      	nop			@ (mov r8, r8)
 8002724:	e000e010 	.word	0xe000e010

08002728 <USER_TIM3_PWM_Init>:
#include <stdint.h>
#include "main.h"
#include "user_tim.h"

void USER_TIM3_PWM_Init( void ){
 8002728:	b580      	push	{r7, lr}
 800272a:	af00      	add	r7, sp, #0
	/* STEP 0. Enable the clock signal for the TIM3 and GPIOB peripherals */
	RCC->IOPENR		|=  ( 0x1UL <<  1U );
 800272c:	4b3b      	ldr	r3, [pc, #236]	@ (800281c <USER_TIM3_PWM_Init+0xf4>)
 800272e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8002730:	4b3a      	ldr	r3, [pc, #232]	@ (800281c <USER_TIM3_PWM_Init+0xf4>)
 8002732:	2102      	movs	r1, #2
 8002734:	430a      	orrs	r2, r1
 8002736:	635a      	str	r2, [r3, #52]	@ 0x34
	RCC->APBENR1	|=  ( 0x1UL <<  1U );
 8002738:	4b38      	ldr	r3, [pc, #224]	@ (800281c <USER_TIM3_PWM_Init+0xf4>)
 800273a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800273c:	4b37      	ldr	r3, [pc, #220]	@ (800281c <USER_TIM3_PWM_Init+0xf4>)
 800273e:	2102      	movs	r1, #2
 8002740:	430a      	orrs	r2, r1
 8002742:	63da      	str	r2, [r3, #60]	@ 0x3c

	/* STEP 0. Configure TIM3_CH1 (PB4) to output the PWM signal */
	GPIOB->AFRL		&= ~( 0xEUL << 16U );
 8002744:	4b36      	ldr	r3, [pc, #216]	@ (8002820 <USER_TIM3_PWM_Init+0xf8>)
 8002746:	6a1a      	ldr	r2, [r3, #32]
 8002748:	4b35      	ldr	r3, [pc, #212]	@ (8002820 <USER_TIM3_PWM_Init+0xf8>)
 800274a:	4936      	ldr	r1, [pc, #216]	@ (8002824 <USER_TIM3_PWM_Init+0xfc>)
 800274c:	400a      	ands	r2, r1
 800274e:	621a      	str	r2, [r3, #32]
	GPIOB->AFRL		|=  ( 0x1UL << 16U );
 8002750:	4b33      	ldr	r3, [pc, #204]	@ (8002820 <USER_TIM3_PWM_Init+0xf8>)
 8002752:	6a1a      	ldr	r2, [r3, #32]
 8002754:	4b32      	ldr	r3, [pc, #200]	@ (8002820 <USER_TIM3_PWM_Init+0xf8>)
 8002756:	2180      	movs	r1, #128	@ 0x80
 8002758:	0249      	lsls	r1, r1, #9
 800275a:	430a      	orrs	r2, r1
 800275c:	621a      	str	r2, [r3, #32]
	GPIOB->PUPDR  &= ~( 0x3UL <<  8U );
 800275e:	4b30      	ldr	r3, [pc, #192]	@ (8002820 <USER_TIM3_PWM_Init+0xf8>)
 8002760:	68da      	ldr	r2, [r3, #12]
 8002762:	4b2f      	ldr	r3, [pc, #188]	@ (8002820 <USER_TIM3_PWM_Init+0xf8>)
 8002764:	4930      	ldr	r1, [pc, #192]	@ (8002828 <USER_TIM3_PWM_Init+0x100>)
 8002766:	400a      	ands	r2, r1
 8002768:	60da      	str	r2, [r3, #12]
	GPIOB->OTYPER	&= ~( 0x1UL <<  4U );
 800276a:	4b2d      	ldr	r3, [pc, #180]	@ (8002820 <USER_TIM3_PWM_Init+0xf8>)
 800276c:	685a      	ldr	r2, [r3, #4]
 800276e:	4b2c      	ldr	r3, [pc, #176]	@ (8002820 <USER_TIM3_PWM_Init+0xf8>)
 8002770:	2110      	movs	r1, #16
 8002772:	438a      	bics	r2, r1
 8002774:	605a      	str	r2, [r3, #4]
	GPIOB->MODER  &= ~( 0x1UL <<  8U );
 8002776:	4b2a      	ldr	r3, [pc, #168]	@ (8002820 <USER_TIM3_PWM_Init+0xf8>)
 8002778:	681a      	ldr	r2, [r3, #0]
 800277a:	4b29      	ldr	r3, [pc, #164]	@ (8002820 <USER_TIM3_PWM_Init+0xf8>)
 800277c:	492b      	ldr	r1, [pc, #172]	@ (800282c <USER_TIM3_PWM_Init+0x104>)
 800277e:	400a      	ands	r2, r1
 8002780:	601a      	str	r2, [r3, #0]
	GPIOB->MODER  |=  ( 0x2UL <<  8U );
 8002782:	4b27      	ldr	r3, [pc, #156]	@ (8002820 <USER_TIM3_PWM_Init+0xf8>)
 8002784:	681a      	ldr	r2, [r3, #0]
 8002786:	4b26      	ldr	r3, [pc, #152]	@ (8002820 <USER_TIM3_PWM_Init+0xf8>)
 8002788:	2180      	movs	r1, #128	@ 0x80
 800278a:	0089      	lsls	r1, r1, #2
 800278c:	430a      	orrs	r2, r1
 800278e:	601a      	str	r2, [r3, #0]

	/* STEP 1. Configure the clock source (internal) */
	TIM3->SMCR		&= ~( 0x1UL << 16U )
 8002790:	4b27      	ldr	r3, [pc, #156]	@ (8002830 <USER_TIM3_PWM_Init+0x108>)
 8002792:	689a      	ldr	r2, [r3, #8]
 8002794:	4b26      	ldr	r3, [pc, #152]	@ (8002830 <USER_TIM3_PWM_Init+0x108>)
 8002796:	4927      	ldr	r1, [pc, #156]	@ (8002834 <USER_TIM3_PWM_Init+0x10c>)
 8002798:	400a      	ands	r2, r1
 800279a:	609a      	str	r2, [r3, #8]
								&  ~( 0x7UL <<  0U );//		Prescaler is clocked directed by the internal clock

	/* STEP 2. Configure the counter mode, the auto-reload and the overflow UEV-event  */
	TIM3->CR1			&= ~( 0x3UL <<  5U ) //		Selects edge-aligned mode
 800279c:	4b24      	ldr	r3, [pc, #144]	@ (8002830 <USER_TIM3_PWM_Init+0x108>)
 800279e:	681a      	ldr	r2, [r3, #0]
 80027a0:	4b23      	ldr	r3, [pc, #140]	@ (8002830 <USER_TIM3_PWM_Init+0x108>)
 80027a2:	2176      	movs	r1, #118	@ 0x76
 80027a4:	438a      	bics	r2, r1
 80027a6:	601a      	str	r2, [r3, #0]
								&  ~( 0x1UL <<  4U ) //		Counter used as upcounter
								&  ~( 0x1UL <<  2U ) //		UEV can be generated by software
								&  ~( 0x1UL <<  1U );//		Update Event (UEV) enabled
	TIM3->CR1			|=  ( 0x1UL <<  7U );//		Auto-reload register is buffered
 80027a8:	4b21      	ldr	r3, [pc, #132]	@ (8002830 <USER_TIM3_PWM_Init+0x108>)
 80027aa:	681a      	ldr	r2, [r3, #0]
 80027ac:	4b20      	ldr	r3, [pc, #128]	@ (8002830 <USER_TIM3_PWM_Init+0x108>)
 80027ae:	2180      	movs	r1, #128	@ 0x80
 80027b0:	430a      	orrs	r2, r1
 80027b2:	601a      	str	r2, [r3, #0]

	/* STEP 3. Configure the prescaler, the period and the duty cycle register values */
	TIM3->PSC			 = 0U;
 80027b4:	4b1e      	ldr	r3, [pc, #120]	@ (8002830 <USER_TIM3_PWM_Init+0x108>)
 80027b6:	2200      	movs	r2, #0
 80027b8:	629a      	str	r2, [r3, #40]	@ 0x28
	TIM3->ARR			 = 47999U;//	for 1 KHz frequency
 80027ba:	4b1d      	ldr	r3, [pc, #116]	@ (8002830 <USER_TIM3_PWM_Init+0x108>)
 80027bc:	4a1e      	ldr	r2, [pc, #120]	@ (8002838 <USER_TIM3_PWM_Init+0x110>)
 80027be:	62da      	str	r2, [r3, #44]	@ 0x2c
	TIM3->CCR1		 = USER_Duty_Cycle( 10 );//	for 25% of duty cycle
 80027c0:	200a      	movs	r0, #10
 80027c2:	f000 f853 	bl	800286c <USER_Duty_Cycle>
 80027c6:	0003      	movs	r3, r0
 80027c8:	001a      	movs	r2, r3
 80027ca:	4b19      	ldr	r3, [pc, #100]	@ (8002830 <USER_TIM3_PWM_Init+0x108>)
 80027cc:	635a      	str	r2, [r3, #52]	@ 0x34

	/* STEP 4. Configure the PWM mode, the compare register load and channel direction */
	TIM3->CCMR1		&= ~( 0x1UL << 16U )
 80027ce:	4b18      	ldr	r3, [pc, #96]	@ (8002830 <USER_TIM3_PWM_Init+0x108>)
 80027d0:	699a      	ldr	r2, [r3, #24]
 80027d2:	4b17      	ldr	r3, [pc, #92]	@ (8002830 <USER_TIM3_PWM_Init+0x108>)
 80027d4:	4919      	ldr	r1, [pc, #100]	@ (800283c <USER_TIM3_PWM_Init+0x114>)
 80027d6:	400a      	ands	r2, r1
 80027d8:	619a      	str	r2, [r3, #24]
								&  ~( 0x1UL <<  4U ) //		Selects PWM 1 mode
								&  ~( 0x3UL <<  0U );//		Selects CH1 as output

 	TIM3->CCMR1		|=  ( 0x6UL <<  4U ) //		Selects PWM 1 mode
 80027da:	4b15      	ldr	r3, [pc, #84]	@ (8002830 <USER_TIM3_PWM_Init+0x108>)
 80027dc:	699a      	ldr	r2, [r3, #24]
 80027de:	4b14      	ldr	r3, [pc, #80]	@ (8002830 <USER_TIM3_PWM_Init+0x108>)
 80027e0:	2168      	movs	r1, #104	@ 0x68
 80027e2:	430a      	orrs	r2, r1
 80027e4:	619a      	str	r2, [r3, #24]
								|   ( 0x1UL <<  3U );//		CCR1 loads on the UEV event

	/* STEP 5. Generate the UEV-event to load the registers */
	TIM3->EGR			|=  ( 0x1UL <<  0U );
 80027e6:	4b12      	ldr	r3, [pc, #72]	@ (8002830 <USER_TIM3_PWM_Init+0x108>)
 80027e8:	695a      	ldr	r2, [r3, #20]
 80027ea:	4b11      	ldr	r3, [pc, #68]	@ (8002830 <USER_TIM3_PWM_Init+0x108>)
 80027ec:	2101      	movs	r1, #1
 80027ee:	430a      	orrs	r2, r1
 80027f0:	615a      	str	r2, [r3, #20]

	/* STEP 6. Enable the PWM signal output and set the polarity */
	TIM3->CCER		&= ~( 0x1UL <<  3U ) //		for output mode, this bit must be cleared
 80027f2:	4b0f      	ldr	r3, [pc, #60]	@ (8002830 <USER_TIM3_PWM_Init+0x108>)
 80027f4:	6a1a      	ldr	r2, [r3, #32]
 80027f6:	4b0e      	ldr	r3, [pc, #56]	@ (8002830 <USER_TIM3_PWM_Init+0x108>)
 80027f8:	210a      	movs	r1, #10
 80027fa:	438a      	bics	r2, r1
 80027fc:	621a      	str	r2, [r3, #32]
								&  ~( 0x1UL <<  1U );//		OC1 active high
	TIM3->CCER		|=  ( 0x1UL <<  0U );//		OC1 signal is output on the corresponding pin
 80027fe:	4b0c      	ldr	r3, [pc, #48]	@ (8002830 <USER_TIM3_PWM_Init+0x108>)
 8002800:	6a1a      	ldr	r2, [r3, #32]
 8002802:	4b0b      	ldr	r3, [pc, #44]	@ (8002830 <USER_TIM3_PWM_Init+0x108>)
 8002804:	2101      	movs	r1, #1
 8002806:	430a      	orrs	r2, r1
 8002808:	621a      	str	r2, [r3, #32]

	/* STEP 7. Enable the Timer to start counting */
	TIM3->CR1			|=  ( 0x1UL <<  0U );
 800280a:	4b09      	ldr	r3, [pc, #36]	@ (8002830 <USER_TIM3_PWM_Init+0x108>)
 800280c:	681a      	ldr	r2, [r3, #0]
 800280e:	4b08      	ldr	r3, [pc, #32]	@ (8002830 <USER_TIM3_PWM_Init+0x108>)
 8002810:	2101      	movs	r1, #1
 8002812:	430a      	orrs	r2, r1
 8002814:	601a      	str	r2, [r3, #0]
}
 8002816:	46c0      	nop			@ (mov r8, r8)
 8002818:	46bd      	mov	sp, r7
 800281a:	bd80      	pop	{r7, pc}
 800281c:	40021000 	.word	0x40021000
 8002820:	50000400 	.word	0x50000400
 8002824:	fff1ffff 	.word	0xfff1ffff
 8002828:	fffffcff 	.word	0xfffffcff
 800282c:	fffffeff 	.word	0xfffffeff
 8002830:	40000400 	.word	0x40000400
 8002834:	fffefff8 	.word	0xfffefff8
 8002838:	0000bb7f 	.word	0x0000bb7f
 800283c:	fffeffec 	.word	0xfffeffec

08002840 <update_cycle>:

void update_cycle(uint8_t duty){
 8002840:	b580      	push	{r7, lr}
 8002842:	b082      	sub	sp, #8
 8002844:	af00      	add	r7, sp, #0
 8002846:	0002      	movs	r2, r0
 8002848:	1dfb      	adds	r3, r7, #7
 800284a:	701a      	strb	r2, [r3, #0]
	TIM3->CCR1		 = USER_Duty_Cycle( duty );//	for 25% of duty cycle
 800284c:	1dfb      	adds	r3, r7, #7
 800284e:	781b      	ldrb	r3, [r3, #0]
 8002850:	0018      	movs	r0, r3
 8002852:	f000 f80b 	bl	800286c <USER_Duty_Cycle>
 8002856:	0003      	movs	r3, r0
 8002858:	001a      	movs	r2, r3
 800285a:	4b03      	ldr	r3, [pc, #12]	@ (8002868 <update_cycle+0x28>)
 800285c:	635a      	str	r2, [r3, #52]	@ 0x34

}
 800285e:	46c0      	nop			@ (mov r8, r8)
 8002860:	46bd      	mov	sp, r7
 8002862:	b002      	add	sp, #8
 8002864:	bd80      	pop	{r7, pc}
 8002866:	46c0      	nop			@ (mov r8, r8)
 8002868:	40000400 	.word	0x40000400

0800286c <USER_Duty_Cycle>:

uint16_t USER_Duty_Cycle( uint8_t duty ){
 800286c:	b5b0      	push	{r4, r5, r7, lr}
 800286e:	b082      	sub	sp, #8
 8002870:	af00      	add	r7, sp, #0
 8002872:	0002      	movs	r2, r0
 8002874:	1dfb      	adds	r3, r7, #7
 8002876:	701a      	strb	r2, [r3, #0]
	/* duty can be a value between 0% and 100% */
	if( duty <= 100 )
 8002878:	1dfb      	adds	r3, r7, #7
 800287a:	781b      	ldrb	r3, [r3, #0]
 800287c:	2b64      	cmp	r3, #100	@ 0x64
 800287e:	d821      	bhi.n	80028c4 <USER_Duty_Cycle+0x58>
		return (( duty / 100.0 )*( TIM3->ARR + 1));
 8002880:	1dfb      	adds	r3, r7, #7
 8002882:	781b      	ldrb	r3, [r3, #0]
 8002884:	0018      	movs	r0, r3
 8002886:	f7fe ff31 	bl	80016ec <__aeabi_i2d>
 800288a:	2200      	movs	r2, #0
 800288c:	4b10      	ldr	r3, [pc, #64]	@ (80028d0 <USER_Duty_Cycle+0x64>)
 800288e:	f7fd fce9 	bl	8000264 <__aeabi_ddiv>
 8002892:	0002      	movs	r2, r0
 8002894:	000b      	movs	r3, r1
 8002896:	0014      	movs	r4, r2
 8002898:	001d      	movs	r5, r3
 800289a:	4b0e      	ldr	r3, [pc, #56]	@ (80028d4 <USER_Duty_Cycle+0x68>)
 800289c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800289e:	3301      	adds	r3, #1
 80028a0:	0018      	movs	r0, r3
 80028a2:	f7fe ff51 	bl	8001748 <__aeabi_ui2d>
 80028a6:	0002      	movs	r2, r0
 80028a8:	000b      	movs	r3, r1
 80028aa:	0020      	movs	r0, r4
 80028ac:	0029      	movs	r1, r5
 80028ae:	f7fd fff1 	bl	8000894 <__aeabi_dmul>
 80028b2:	0002      	movs	r2, r0
 80028b4:	000b      	movs	r3, r1
 80028b6:	0010      	movs	r0, r2
 80028b8:	0019      	movs	r1, r3
 80028ba:	f7fd fcb5 	bl	8000228 <__aeabi_d2uiz>
 80028be:	0003      	movs	r3, r0
 80028c0:	b29b      	uxth	r3, r3
 80028c2:	e000      	b.n	80028c6 <USER_Duty_Cycle+0x5a>
	else
		return 0;
 80028c4:	2300      	movs	r3, #0
}
 80028c6:	0018      	movs	r0, r3
 80028c8:	46bd      	mov	sp, r7
 80028ca:	b002      	add	sp, #8
 80028cc:	bdb0      	pop	{r4, r5, r7, pc}
 80028ce:	46c0      	nop			@ (mov r8, r8)
 80028d0:	40590000 	.word	0x40590000
 80028d4:	40000400 	.word	0x40000400

080028d8 <USER_UART1_Init>:
#include <stdint.h>
#include "main.h"
#include "user_uart.h"


void USER_UART1_Init( void ){ //uart initialization function
 80028d8:	b580      	push	{r7, lr}
 80028da:	af00      	add	r7, sp, #0
  /* STEP 0. Enable the clock peripheral for the USART1 */
	RCC->IOPENR = RCC->IOPENR  | (0x1UL << 0U);
 80028dc:	4b4f      	ldr	r3, [pc, #316]	@ (8002a1c <USER_UART1_Init+0x144>)
 80028de:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80028e0:	4b4e      	ldr	r3, [pc, #312]	@ (8002a1c <USER_UART1_Init+0x144>)
 80028e2:	2101      	movs	r1, #1
 80028e4:	430a      	orrs	r2, r1
 80028e6:	635a      	str	r2, [r3, #52]	@ 0x34
	RCC->APBENR2 = RCC->APBENR2 | (0x1UL << 14U);
 80028e8:	4b4c      	ldr	r3, [pc, #304]	@ (8002a1c <USER_UART1_Init+0x144>)
 80028ea:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80028ec:	4b4b      	ldr	r3, [pc, #300]	@ (8002a1c <USER_UART1_Init+0x144>)
 80028ee:	2180      	movs	r1, #128	@ 0x80
 80028f0:	01c9      	lsls	r1, r1, #7
 80028f2:	430a      	orrs	r2, r1
 80028f4:	641a      	str	r2, [r3, #64]	@ 0x40
  /* STEP 0. Configure the TX pin (PA9) as Alternate Function Push-Pull */
	GPIOA->AFRH = GPIOA->AFRH & ~(0xEUL << 4U);
 80028f6:	23a0      	movs	r3, #160	@ 0xa0
 80028f8:	05db      	lsls	r3, r3, #23
 80028fa:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80028fc:	23a0      	movs	r3, #160	@ 0xa0
 80028fe:	05db      	lsls	r3, r3, #23
 8002900:	21e0      	movs	r1, #224	@ 0xe0
 8002902:	438a      	bics	r2, r1
 8002904:	625a      	str	r2, [r3, #36]	@ 0x24
	GPIOA->AFRH = GPIOA->AFRH | (0x1UL << 4U);
 8002906:	23a0      	movs	r3, #160	@ 0xa0
 8002908:	05db      	lsls	r3, r3, #23
 800290a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800290c:	23a0      	movs	r3, #160	@ 0xa0
 800290e:	05db      	lsls	r3, r3, #23
 8002910:	2110      	movs	r1, #16
 8002912:	430a      	orrs	r2, r1
 8002914:	625a      	str	r2, [r3, #36]	@ 0x24
	GPIOA->PUPDR = GPIOA->PUPDR & ~(0x3UL << 18U);
 8002916:	23a0      	movs	r3, #160	@ 0xa0
 8002918:	05db      	lsls	r3, r3, #23
 800291a:	68da      	ldr	r2, [r3, #12]
 800291c:	23a0      	movs	r3, #160	@ 0xa0
 800291e:	05db      	lsls	r3, r3, #23
 8002920:	493f      	ldr	r1, [pc, #252]	@ (8002a20 <USER_UART1_Init+0x148>)
 8002922:	400a      	ands	r2, r1
 8002924:	60da      	str	r2, [r3, #12]
	GPIOA->OTYPER = GPIOA->OTYPER & ~(0x1UL << 9U);
 8002926:	23a0      	movs	r3, #160	@ 0xa0
 8002928:	05db      	lsls	r3, r3, #23
 800292a:	685a      	ldr	r2, [r3, #4]
 800292c:	23a0      	movs	r3, #160	@ 0xa0
 800292e:	05db      	lsls	r3, r3, #23
 8002930:	493c      	ldr	r1, [pc, #240]	@ (8002a24 <USER_UART1_Init+0x14c>)
 8002932:	400a      	ands	r2, r1
 8002934:	605a      	str	r2, [r3, #4]
	GPIOA->MODER = GPIOA->MODER & ~(0x1UL << 18U);
 8002936:	23a0      	movs	r3, #160	@ 0xa0
 8002938:	05db      	lsls	r3, r3, #23
 800293a:	681a      	ldr	r2, [r3, #0]
 800293c:	23a0      	movs	r3, #160	@ 0xa0
 800293e:	05db      	lsls	r3, r3, #23
 8002940:	4939      	ldr	r1, [pc, #228]	@ (8002a28 <USER_UART1_Init+0x150>)
 8002942:	400a      	ands	r2, r1
 8002944:	601a      	str	r2, [r3, #0]
	GPIOA->MODER = GPIOA->MODER | (0x2UL << 18U);
 8002946:	23a0      	movs	r3, #160	@ 0xa0
 8002948:	05db      	lsls	r3, r3, #23
 800294a:	681a      	ldr	r2, [r3, #0]
 800294c:	23a0      	movs	r3, #160	@ 0xa0
 800294e:	05db      	lsls	r3, r3, #23
 8002950:	2180      	movs	r1, #128	@ 0x80
 8002952:	0309      	lsls	r1, r1, #12
 8002954:	430a      	orrs	r2, r1
 8002956:	601a      	str	r2, [r3, #0]

  /* STEP 0.1 Configure the Rx pin (PA10) as Alternate Function Push-Pull */
	//MODE 10 OTYPE 0 PUPDR 00 Set as alternate function
	GPIOA->AFRH = GPIOA->AFRH & ~(0xEUL << 8U);
 8002958:	23a0      	movs	r3, #160	@ 0xa0
 800295a:	05db      	lsls	r3, r3, #23
 800295c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800295e:	23a0      	movs	r3, #160	@ 0xa0
 8002960:	05db      	lsls	r3, r3, #23
 8002962:	4932      	ldr	r1, [pc, #200]	@ (8002a2c <USER_UART1_Init+0x154>)
 8002964:	400a      	ands	r2, r1
 8002966:	625a      	str	r2, [r3, #36]	@ 0x24
	GPIOA->AFRH = GPIOA->AFRH | (0x1UL << 8U);
 8002968:	23a0      	movs	r3, #160	@ 0xa0
 800296a:	05db      	lsls	r3, r3, #23
 800296c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800296e:	23a0      	movs	r3, #160	@ 0xa0
 8002970:	05db      	lsls	r3, r3, #23
 8002972:	2180      	movs	r1, #128	@ 0x80
 8002974:	0049      	lsls	r1, r1, #1
 8002976:	430a      	orrs	r2, r1
 8002978:	625a      	str	r2, [r3, #36]	@ 0x24
	GPIOA->PUPDR = GPIOA->PUPDR & ~(0x3UL << 20U);
 800297a:	23a0      	movs	r3, #160	@ 0xa0
 800297c:	05db      	lsls	r3, r3, #23
 800297e:	68da      	ldr	r2, [r3, #12]
 8002980:	23a0      	movs	r3, #160	@ 0xa0
 8002982:	05db      	lsls	r3, r3, #23
 8002984:	492a      	ldr	r1, [pc, #168]	@ (8002a30 <USER_UART1_Init+0x158>)
 8002986:	400a      	ands	r2, r1
 8002988:	60da      	str	r2, [r3, #12]
	GPIOA->OTYPER = GPIOA->OTYPER & ~(0x1UL << 10U);
 800298a:	23a0      	movs	r3, #160	@ 0xa0
 800298c:	05db      	lsls	r3, r3, #23
 800298e:	685a      	ldr	r2, [r3, #4]
 8002990:	23a0      	movs	r3, #160	@ 0xa0
 8002992:	05db      	lsls	r3, r3, #23
 8002994:	4927      	ldr	r1, [pc, #156]	@ (8002a34 <USER_UART1_Init+0x15c>)
 8002996:	400a      	ands	r2, r1
 8002998:	605a      	str	r2, [r3, #4]
	GPIOA->MODER = GPIOA->MODER & ~(0x1UL << 20U);
 800299a:	23a0      	movs	r3, #160	@ 0xa0
 800299c:	05db      	lsls	r3, r3, #23
 800299e:	681a      	ldr	r2, [r3, #0]
 80029a0:	23a0      	movs	r3, #160	@ 0xa0
 80029a2:	05db      	lsls	r3, r3, #23
 80029a4:	4924      	ldr	r1, [pc, #144]	@ (8002a38 <USER_UART1_Init+0x160>)
 80029a6:	400a      	ands	r2, r1
 80029a8:	601a      	str	r2, [r3, #0]
	GPIOA->MODER = GPIOA->MODER | (0x2UL << 20U);
 80029aa:	23a0      	movs	r3, #160	@ 0xa0
 80029ac:	05db      	lsls	r3, r3, #23
 80029ae:	681a      	ldr	r2, [r3, #0]
 80029b0:	23a0      	movs	r3, #160	@ 0xa0
 80029b2:	05db      	lsls	r3, r3, #23
 80029b4:	2180      	movs	r1, #128	@ 0x80
 80029b6:	0389      	lsls	r1, r1, #14
 80029b8:	430a      	orrs	r2, r1
 80029ba:	601a      	str	r2, [r3, #0]



  /* STEP 1. Program the M bits in USART_CR1 to define the word length (8 bits) */
	USART1->CR1 = USART1->CR1 & ~(0x1UL << 28U);
 80029bc:	4b1f      	ldr	r3, [pc, #124]	@ (8002a3c <USER_UART1_Init+0x164>)
 80029be:	681a      	ldr	r2, [r3, #0]
 80029c0:	4b1e      	ldr	r3, [pc, #120]	@ (8002a3c <USER_UART1_Init+0x164>)
 80029c2:	491f      	ldr	r1, [pc, #124]	@ (8002a40 <USER_UART1_Init+0x168>)
 80029c4:	400a      	ands	r2, r1
 80029c6:	601a      	str	r2, [r3, #0]
	USART1->CR1 = USART1->CR1 & ~(0x1UL << 12U);
 80029c8:	4b1c      	ldr	r3, [pc, #112]	@ (8002a3c <USER_UART1_Init+0x164>)
 80029ca:	681a      	ldr	r2, [r3, #0]
 80029cc:	4b1b      	ldr	r3, [pc, #108]	@ (8002a3c <USER_UART1_Init+0x164>)
 80029ce:	491d      	ldr	r1, [pc, #116]	@ (8002a44 <USER_UART1_Init+0x16c>)
 80029d0:	400a      	ands	r2, r1
 80029d2:	601a      	str	r2, [r3, #0]
  /* STEP 2. Select the desired baud rate using the USART_BRR register */
	USART1->BRR = 5000;
 80029d4:	4b19      	ldr	r3, [pc, #100]	@ (8002a3c <USER_UART1_Init+0x164>)
 80029d6:	4a1c      	ldr	r2, [pc, #112]	@ (8002a48 <USER_UART1_Init+0x170>)
 80029d8:	60da      	str	r2, [r3, #12]
  /* STEP 3. Program the number of STOP bits in USART_CR2 (1 stop bit) */
	USART1->CR2 = USART1->CR2 & ~(0x3UL << 12U);
 80029da:	4b18      	ldr	r3, [pc, #96]	@ (8002a3c <USER_UART1_Init+0x164>)
 80029dc:	685a      	ldr	r2, [r3, #4]
 80029de:	4b17      	ldr	r3, [pc, #92]	@ (8002a3c <USER_UART1_Init+0x164>)
 80029e0:	491a      	ldr	r1, [pc, #104]	@ (8002a4c <USER_UART1_Init+0x174>)
 80029e2:	400a      	ands	r2, r1
 80029e4:	605a      	str	r2, [r3, #4]

  /* STEP 4. Enable the USART by writting the UE bit in USART_CR1 register */
	USART1->CR1 = USART1->CR1 | (0x1UL << 0U);
 80029e6:	4b15      	ldr	r3, [pc, #84]	@ (8002a3c <USER_UART1_Init+0x164>)
 80029e8:	681a      	ldr	r2, [r3, #0]
 80029ea:	4b14      	ldr	r3, [pc, #80]	@ (8002a3c <USER_UART1_Init+0x164>)
 80029ec:	2101      	movs	r1, #1
 80029ee:	430a      	orrs	r2, r1
 80029f0:	601a      	str	r2, [r3, #0]


  /* STEP 6. Set the TE bit in USART_CR1 to send and idle frame as first transmission */
	USART1->CR1 = USART1->CR1 | (0x1UL << 3U);
 80029f2:	4b12      	ldr	r3, [pc, #72]	@ (8002a3c <USER_UART1_Init+0x164>)
 80029f4:	681a      	ldr	r2, [r3, #0]
 80029f6:	4b11      	ldr	r3, [pc, #68]	@ (8002a3c <USER_UART1_Init+0x164>)
 80029f8:	2108      	movs	r1, #8
 80029fa:	430a      	orrs	r2, r1
 80029fc:	601a      	str	r2, [r3, #0]

	/* STEP 7 Set the RE bit in USART_CR1 to receive */
	USART1->CR1 = USART1->CR1 | (0x1UL << 2U);
 80029fe:	4b0f      	ldr	r3, [pc, #60]	@ (8002a3c <USER_UART1_Init+0x164>)
 8002a00:	681a      	ldr	r2, [r3, #0]
 8002a02:	4b0e      	ldr	r3, [pc, #56]	@ (8002a3c <USER_UART1_Init+0x164>)
 8002a04:	2104      	movs	r1, #4
 8002a06:	430a      	orrs	r2, r1
 8002a08:	601a      	str	r2, [r3, #0]

	USART1->CR1 = USART1->CR1 | (0x1UL << 5U);
 8002a0a:	4b0c      	ldr	r3, [pc, #48]	@ (8002a3c <USER_UART1_Init+0x164>)
 8002a0c:	681a      	ldr	r2, [r3, #0]
 8002a0e:	4b0b      	ldr	r3, [pc, #44]	@ (8002a3c <USER_UART1_Init+0x164>)
 8002a10:	2120      	movs	r1, #32
 8002a12:	430a      	orrs	r2, r1
 8002a14:	601a      	str	r2, [r3, #0]


}
 8002a16:	46c0      	nop			@ (mov r8, r8)
 8002a18:	46bd      	mov	sp, r7
 8002a1a:	bd80      	pop	{r7, pc}
 8002a1c:	40021000 	.word	0x40021000
 8002a20:	fff3ffff 	.word	0xfff3ffff
 8002a24:	fffffdff 	.word	0xfffffdff
 8002a28:	fffbffff 	.word	0xfffbffff
 8002a2c:	fffff1ff 	.word	0xfffff1ff
 8002a30:	ffcfffff 	.word	0xffcfffff
 8002a34:	fffffbff 	.word	0xfffffbff
 8002a38:	ffefffff 	.word	0xffefffff
 8002a3c:	40013800 	.word	0x40013800
 8002a40:	efffffff 	.word	0xefffffff
 8002a44:	ffffefff 	.word	0xffffefff
 8002a48:	00001388 	.word	0x00001388
 8002a4c:	ffffcfff 	.word	0xffffcfff

08002a50 <_write>:


//PRINTF FUNCTION EDITED
////////////////////////////////////////////////////////////////////////////////////////
int _write(int file, char *ptr, int len){
 8002a50:	b580      	push	{r7, lr}
 8002a52:	b086      	sub	sp, #24
 8002a54:	af00      	add	r7, sp, #0
 8002a56:	60f8      	str	r0, [r7, #12]
 8002a58:	60b9      	str	r1, [r7, #8]
 8002a5a:	607a      	str	r2, [r7, #4]
	int DataIdx;
	 for(DataIdx=0; DataIdx<len; DataIdx++){
 8002a5c:	2300      	movs	r3, #0
 8002a5e:	617b      	str	r3, [r7, #20]
 8002a60:	e00e      	b.n	8002a80 <_write+0x30>
		while(!( USART1->ISR & (0x1UL << 7U)));
 8002a62:	46c0      	nop			@ (mov r8, r8)
 8002a64:	4b0b      	ldr	r3, [pc, #44]	@ (8002a94 <_write+0x44>)
 8002a66:	69db      	ldr	r3, [r3, #28]
 8002a68:	2280      	movs	r2, #128	@ 0x80
 8002a6a:	4013      	ands	r3, r2
 8002a6c:	d0fa      	beq.n	8002a64 <_write+0x14>
		 	 USART1->TDR = *ptr++;
 8002a6e:	68bb      	ldr	r3, [r7, #8]
 8002a70:	1c5a      	adds	r2, r3, #1
 8002a72:	60ba      	str	r2, [r7, #8]
 8002a74:	781a      	ldrb	r2, [r3, #0]
 8002a76:	4b07      	ldr	r3, [pc, #28]	@ (8002a94 <_write+0x44>)
 8002a78:	629a      	str	r2, [r3, #40]	@ 0x28
	 for(DataIdx=0; DataIdx<len; DataIdx++){
 8002a7a:	697b      	ldr	r3, [r7, #20]
 8002a7c:	3301      	adds	r3, #1
 8002a7e:	617b      	str	r3, [r7, #20]
 8002a80:	697a      	ldr	r2, [r7, #20]
 8002a82:	687b      	ldr	r3, [r7, #4]
 8002a84:	429a      	cmp	r2, r3
 8002a86:	dbec      	blt.n	8002a62 <_write+0x12>
	 }
	return len;
 8002a88:	687b      	ldr	r3, [r7, #4]
}
 8002a8a:	0018      	movs	r0, r3
 8002a8c:	46bd      	mov	sp, r7
 8002a8e:	b006      	add	sp, #24
 8002a90:	bd80      	pop	{r7, pc}
 8002a92:	46c0      	nop			@ (mov r8, r8)
 8002a94:	40013800 	.word	0x40013800

08002a98 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8002a98:	480d      	ldr	r0, [pc, #52]	@ (8002ad0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8002a9a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8002a9c:	e000      	b.n	8002aa0 <Reset_Handler+0x8>
 8002a9e:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002aa0:	480c      	ldr	r0, [pc, #48]	@ (8002ad4 <LoopForever+0x6>)
  ldr r1, =_edata
 8002aa2:	490d      	ldr	r1, [pc, #52]	@ (8002ad8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8002aa4:	4a0d      	ldr	r2, [pc, #52]	@ (8002adc <LoopForever+0xe>)
  movs r3, #0
 8002aa6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002aa8:	e002      	b.n	8002ab0 <LoopCopyDataInit>

08002aaa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002aaa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002aac:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002aae:	3304      	adds	r3, #4

08002ab0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002ab0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002ab2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002ab4:	d3f9      	bcc.n	8002aaa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002ab6:	4a0a      	ldr	r2, [pc, #40]	@ (8002ae0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8002ab8:	4c0a      	ldr	r4, [pc, #40]	@ (8002ae4 <LoopForever+0x16>)
  movs r3, #0
 8002aba:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002abc:	e001      	b.n	8002ac2 <LoopFillZerobss>

08002abe <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002abe:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002ac0:	3204      	adds	r2, #4

08002ac2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002ac2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002ac4:	d3fb      	bcc.n	8002abe <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8002ac6:	f000 fa29 	bl	8002f1c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8002aca:	f7ff fc65 	bl	8002398 <main>

08002ace <LoopForever>:

LoopForever:
  b LoopForever
 8002ace:	e7fe      	b.n	8002ace <LoopForever>
  ldr   r0, =_estack
 8002ad0:	20003000 	.word	0x20003000
  ldr r0, =_sdata
 8002ad4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002ad8:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8002adc:	08003cec 	.word	0x08003cec
  ldr r2, =_sbss
 8002ae0:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8002ae4:	200001f4 	.word	0x200001f4

08002ae8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002ae8:	e7fe      	b.n	8002ae8 <ADC_IRQHandler>

08002aea <atoi>:
 8002aea:	b510      	push	{r4, lr}
 8002aec:	220a      	movs	r2, #10
 8002aee:	2100      	movs	r1, #0
 8002af0:	f000 f88c 	bl	8002c0c <strtol>
 8002af4:	bd10      	pop	{r4, pc}
	...

08002af8 <_strtol_l.isra.0>:
 8002af8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002afa:	b085      	sub	sp, #20
 8002afc:	0017      	movs	r7, r2
 8002afe:	001e      	movs	r6, r3
 8002b00:	9003      	str	r0, [sp, #12]
 8002b02:	9101      	str	r1, [sp, #4]
 8002b04:	2b24      	cmp	r3, #36	@ 0x24
 8002b06:	d823      	bhi.n	8002b50 <_strtol_l.isra.0+0x58>
 8002b08:	000c      	movs	r4, r1
 8002b0a:	2b01      	cmp	r3, #1
 8002b0c:	d020      	beq.n	8002b50 <_strtol_l.isra.0+0x58>
 8002b0e:	4b3d      	ldr	r3, [pc, #244]	@ (8002c04 <_strtol_l.isra.0+0x10c>)
 8002b10:	2208      	movs	r2, #8
 8002b12:	469c      	mov	ip, r3
 8002b14:	0023      	movs	r3, r4
 8002b16:	4661      	mov	r1, ip
 8002b18:	781d      	ldrb	r5, [r3, #0]
 8002b1a:	3401      	adds	r4, #1
 8002b1c:	5d48      	ldrb	r0, [r1, r5]
 8002b1e:	0001      	movs	r1, r0
 8002b20:	4011      	ands	r1, r2
 8002b22:	4210      	tst	r0, r2
 8002b24:	d1f6      	bne.n	8002b14 <_strtol_l.isra.0+0x1c>
 8002b26:	2d2d      	cmp	r5, #45	@ 0x2d
 8002b28:	d119      	bne.n	8002b5e <_strtol_l.isra.0+0x66>
 8002b2a:	7825      	ldrb	r5, [r4, #0]
 8002b2c:	1c9c      	adds	r4, r3, #2
 8002b2e:	2301      	movs	r3, #1
 8002b30:	9300      	str	r3, [sp, #0]
 8002b32:	2210      	movs	r2, #16
 8002b34:	0033      	movs	r3, r6
 8002b36:	4393      	bics	r3, r2
 8002b38:	d11d      	bne.n	8002b76 <_strtol_l.isra.0+0x7e>
 8002b3a:	2d30      	cmp	r5, #48	@ 0x30
 8002b3c:	d115      	bne.n	8002b6a <_strtol_l.isra.0+0x72>
 8002b3e:	2120      	movs	r1, #32
 8002b40:	7823      	ldrb	r3, [r4, #0]
 8002b42:	438b      	bics	r3, r1
 8002b44:	2b58      	cmp	r3, #88	@ 0x58
 8002b46:	d110      	bne.n	8002b6a <_strtol_l.isra.0+0x72>
 8002b48:	7865      	ldrb	r5, [r4, #1]
 8002b4a:	3402      	adds	r4, #2
 8002b4c:	2610      	movs	r6, #16
 8002b4e:	e012      	b.n	8002b76 <_strtol_l.isra.0+0x7e>
 8002b50:	f000 f9de 	bl	8002f10 <__errno>
 8002b54:	2316      	movs	r3, #22
 8002b56:	6003      	str	r3, [r0, #0]
 8002b58:	2000      	movs	r0, #0
 8002b5a:	b005      	add	sp, #20
 8002b5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002b5e:	9100      	str	r1, [sp, #0]
 8002b60:	2d2b      	cmp	r5, #43	@ 0x2b
 8002b62:	d1e6      	bne.n	8002b32 <_strtol_l.isra.0+0x3a>
 8002b64:	7825      	ldrb	r5, [r4, #0]
 8002b66:	1c9c      	adds	r4, r3, #2
 8002b68:	e7e3      	b.n	8002b32 <_strtol_l.isra.0+0x3a>
 8002b6a:	2e00      	cmp	r6, #0
 8002b6c:	d1ee      	bne.n	8002b4c <_strtol_l.isra.0+0x54>
 8002b6e:	360a      	adds	r6, #10
 8002b70:	2d30      	cmp	r5, #48	@ 0x30
 8002b72:	d100      	bne.n	8002b76 <_strtol_l.isra.0+0x7e>
 8002b74:	3e02      	subs	r6, #2
 8002b76:	4a24      	ldr	r2, [pc, #144]	@ (8002c08 <_strtol_l.isra.0+0x110>)
 8002b78:	9b00      	ldr	r3, [sp, #0]
 8002b7a:	4694      	mov	ip, r2
 8002b7c:	4463      	add	r3, ip
 8002b7e:	0031      	movs	r1, r6
 8002b80:	0018      	movs	r0, r3
 8002b82:	9302      	str	r3, [sp, #8]
 8002b84:	f7fd fb4a 	bl	800021c <__aeabi_uidivmod>
 8002b88:	2200      	movs	r2, #0
 8002b8a:	4684      	mov	ip, r0
 8002b8c:	0010      	movs	r0, r2
 8002b8e:	002b      	movs	r3, r5
 8002b90:	3b30      	subs	r3, #48	@ 0x30
 8002b92:	2b09      	cmp	r3, #9
 8002b94:	d811      	bhi.n	8002bba <_strtol_l.isra.0+0xc2>
 8002b96:	001d      	movs	r5, r3
 8002b98:	42ae      	cmp	r6, r5
 8002b9a:	dd1d      	ble.n	8002bd8 <_strtol_l.isra.0+0xe0>
 8002b9c:	1c53      	adds	r3, r2, #1
 8002b9e:	d009      	beq.n	8002bb4 <_strtol_l.isra.0+0xbc>
 8002ba0:	2201      	movs	r2, #1
 8002ba2:	4252      	negs	r2, r2
 8002ba4:	4584      	cmp	ip, r0
 8002ba6:	d305      	bcc.n	8002bb4 <_strtol_l.isra.0+0xbc>
 8002ba8:	d101      	bne.n	8002bae <_strtol_l.isra.0+0xb6>
 8002baa:	42a9      	cmp	r1, r5
 8002bac:	db11      	blt.n	8002bd2 <_strtol_l.isra.0+0xda>
 8002bae:	2201      	movs	r2, #1
 8002bb0:	4370      	muls	r0, r6
 8002bb2:	1828      	adds	r0, r5, r0
 8002bb4:	7825      	ldrb	r5, [r4, #0]
 8002bb6:	3401      	adds	r4, #1
 8002bb8:	e7e9      	b.n	8002b8e <_strtol_l.isra.0+0x96>
 8002bba:	002b      	movs	r3, r5
 8002bbc:	3b41      	subs	r3, #65	@ 0x41
 8002bbe:	2b19      	cmp	r3, #25
 8002bc0:	d801      	bhi.n	8002bc6 <_strtol_l.isra.0+0xce>
 8002bc2:	3d37      	subs	r5, #55	@ 0x37
 8002bc4:	e7e8      	b.n	8002b98 <_strtol_l.isra.0+0xa0>
 8002bc6:	002b      	movs	r3, r5
 8002bc8:	3b61      	subs	r3, #97	@ 0x61
 8002bca:	2b19      	cmp	r3, #25
 8002bcc:	d804      	bhi.n	8002bd8 <_strtol_l.isra.0+0xe0>
 8002bce:	3d57      	subs	r5, #87	@ 0x57
 8002bd0:	e7e2      	b.n	8002b98 <_strtol_l.isra.0+0xa0>
 8002bd2:	2201      	movs	r2, #1
 8002bd4:	4252      	negs	r2, r2
 8002bd6:	e7ed      	b.n	8002bb4 <_strtol_l.isra.0+0xbc>
 8002bd8:	1c53      	adds	r3, r2, #1
 8002bda:	d108      	bne.n	8002bee <_strtol_l.isra.0+0xf6>
 8002bdc:	2322      	movs	r3, #34	@ 0x22
 8002bde:	9a03      	ldr	r2, [sp, #12]
 8002be0:	9802      	ldr	r0, [sp, #8]
 8002be2:	6013      	str	r3, [r2, #0]
 8002be4:	2f00      	cmp	r7, #0
 8002be6:	d0b8      	beq.n	8002b5a <_strtol_l.isra.0+0x62>
 8002be8:	1e63      	subs	r3, r4, #1
 8002bea:	9301      	str	r3, [sp, #4]
 8002bec:	e007      	b.n	8002bfe <_strtol_l.isra.0+0x106>
 8002bee:	9b00      	ldr	r3, [sp, #0]
 8002bf0:	2b00      	cmp	r3, #0
 8002bf2:	d000      	beq.n	8002bf6 <_strtol_l.isra.0+0xfe>
 8002bf4:	4240      	negs	r0, r0
 8002bf6:	2f00      	cmp	r7, #0
 8002bf8:	d0af      	beq.n	8002b5a <_strtol_l.isra.0+0x62>
 8002bfa:	2a00      	cmp	r2, #0
 8002bfc:	d1f4      	bne.n	8002be8 <_strtol_l.isra.0+0xf0>
 8002bfe:	9b01      	ldr	r3, [sp, #4]
 8002c00:	603b      	str	r3, [r7, #0]
 8002c02:	e7aa      	b.n	8002b5a <_strtol_l.isra.0+0x62>
 8002c04:	08003bb1 	.word	0x08003bb1
 8002c08:	7fffffff 	.word	0x7fffffff

08002c0c <strtol>:
 8002c0c:	b510      	push	{r4, lr}
 8002c0e:	4c04      	ldr	r4, [pc, #16]	@ (8002c20 <strtol+0x14>)
 8002c10:	0013      	movs	r3, r2
 8002c12:	000a      	movs	r2, r1
 8002c14:	0001      	movs	r1, r0
 8002c16:	6820      	ldr	r0, [r4, #0]
 8002c18:	f7ff ff6e 	bl	8002af8 <_strtol_l.isra.0>
 8002c1c:	bd10      	pop	{r4, pc}
 8002c1e:	46c0      	nop			@ (mov r8, r8)
 8002c20:	2000000c 	.word	0x2000000c

08002c24 <std>:
 8002c24:	2300      	movs	r3, #0
 8002c26:	b510      	push	{r4, lr}
 8002c28:	0004      	movs	r4, r0
 8002c2a:	6003      	str	r3, [r0, #0]
 8002c2c:	6043      	str	r3, [r0, #4]
 8002c2e:	6083      	str	r3, [r0, #8]
 8002c30:	8181      	strh	r1, [r0, #12]
 8002c32:	6643      	str	r3, [r0, #100]	@ 0x64
 8002c34:	81c2      	strh	r2, [r0, #14]
 8002c36:	6103      	str	r3, [r0, #16]
 8002c38:	6143      	str	r3, [r0, #20]
 8002c3a:	6183      	str	r3, [r0, #24]
 8002c3c:	0019      	movs	r1, r3
 8002c3e:	2208      	movs	r2, #8
 8002c40:	305c      	adds	r0, #92	@ 0x5c
 8002c42:	f000 f90f 	bl	8002e64 <memset>
 8002c46:	4b0b      	ldr	r3, [pc, #44]	@ (8002c74 <std+0x50>)
 8002c48:	6224      	str	r4, [r4, #32]
 8002c4a:	6263      	str	r3, [r4, #36]	@ 0x24
 8002c4c:	4b0a      	ldr	r3, [pc, #40]	@ (8002c78 <std+0x54>)
 8002c4e:	62a3      	str	r3, [r4, #40]	@ 0x28
 8002c50:	4b0a      	ldr	r3, [pc, #40]	@ (8002c7c <std+0x58>)
 8002c52:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002c54:	4b0a      	ldr	r3, [pc, #40]	@ (8002c80 <std+0x5c>)
 8002c56:	6323      	str	r3, [r4, #48]	@ 0x30
 8002c58:	4b0a      	ldr	r3, [pc, #40]	@ (8002c84 <std+0x60>)
 8002c5a:	429c      	cmp	r4, r3
 8002c5c:	d005      	beq.n	8002c6a <std+0x46>
 8002c5e:	4b0a      	ldr	r3, [pc, #40]	@ (8002c88 <std+0x64>)
 8002c60:	429c      	cmp	r4, r3
 8002c62:	d002      	beq.n	8002c6a <std+0x46>
 8002c64:	4b09      	ldr	r3, [pc, #36]	@ (8002c8c <std+0x68>)
 8002c66:	429c      	cmp	r4, r3
 8002c68:	d103      	bne.n	8002c72 <std+0x4e>
 8002c6a:	0020      	movs	r0, r4
 8002c6c:	3058      	adds	r0, #88	@ 0x58
 8002c6e:	f000 f979 	bl	8002f64 <__retarget_lock_init_recursive>
 8002c72:	bd10      	pop	{r4, pc}
 8002c74:	08002dcd 	.word	0x08002dcd
 8002c78:	08002df5 	.word	0x08002df5
 8002c7c:	08002e2d 	.word	0x08002e2d
 8002c80:	08002e59 	.word	0x08002e59
 8002c84:	200000a8 	.word	0x200000a8
 8002c88:	20000110 	.word	0x20000110
 8002c8c:	20000178 	.word	0x20000178

08002c90 <stdio_exit_handler>:
 8002c90:	b510      	push	{r4, lr}
 8002c92:	4a03      	ldr	r2, [pc, #12]	@ (8002ca0 <stdio_exit_handler+0x10>)
 8002c94:	4903      	ldr	r1, [pc, #12]	@ (8002ca4 <stdio_exit_handler+0x14>)
 8002c96:	4804      	ldr	r0, [pc, #16]	@ (8002ca8 <stdio_exit_handler+0x18>)
 8002c98:	f000 f86c 	bl	8002d74 <_fwalk_sglue>
 8002c9c:	bd10      	pop	{r4, pc}
 8002c9e:	46c0      	nop			@ (mov r8, r8)
 8002ca0:	20000000 	.word	0x20000000
 8002ca4:	080037f1 	.word	0x080037f1
 8002ca8:	20000010 	.word	0x20000010

08002cac <cleanup_stdio>:
 8002cac:	6841      	ldr	r1, [r0, #4]
 8002cae:	4b0b      	ldr	r3, [pc, #44]	@ (8002cdc <cleanup_stdio+0x30>)
 8002cb0:	b510      	push	{r4, lr}
 8002cb2:	0004      	movs	r4, r0
 8002cb4:	4299      	cmp	r1, r3
 8002cb6:	d001      	beq.n	8002cbc <cleanup_stdio+0x10>
 8002cb8:	f000 fd9a 	bl	80037f0 <_fflush_r>
 8002cbc:	68a1      	ldr	r1, [r4, #8]
 8002cbe:	4b08      	ldr	r3, [pc, #32]	@ (8002ce0 <cleanup_stdio+0x34>)
 8002cc0:	4299      	cmp	r1, r3
 8002cc2:	d002      	beq.n	8002cca <cleanup_stdio+0x1e>
 8002cc4:	0020      	movs	r0, r4
 8002cc6:	f000 fd93 	bl	80037f0 <_fflush_r>
 8002cca:	68e1      	ldr	r1, [r4, #12]
 8002ccc:	4b05      	ldr	r3, [pc, #20]	@ (8002ce4 <cleanup_stdio+0x38>)
 8002cce:	4299      	cmp	r1, r3
 8002cd0:	d002      	beq.n	8002cd8 <cleanup_stdio+0x2c>
 8002cd2:	0020      	movs	r0, r4
 8002cd4:	f000 fd8c 	bl	80037f0 <_fflush_r>
 8002cd8:	bd10      	pop	{r4, pc}
 8002cda:	46c0      	nop			@ (mov r8, r8)
 8002cdc:	200000a8 	.word	0x200000a8
 8002ce0:	20000110 	.word	0x20000110
 8002ce4:	20000178 	.word	0x20000178

08002ce8 <global_stdio_init.part.0>:
 8002ce8:	b510      	push	{r4, lr}
 8002cea:	4b09      	ldr	r3, [pc, #36]	@ (8002d10 <global_stdio_init.part.0+0x28>)
 8002cec:	4a09      	ldr	r2, [pc, #36]	@ (8002d14 <global_stdio_init.part.0+0x2c>)
 8002cee:	2104      	movs	r1, #4
 8002cf0:	601a      	str	r2, [r3, #0]
 8002cf2:	4809      	ldr	r0, [pc, #36]	@ (8002d18 <global_stdio_init.part.0+0x30>)
 8002cf4:	2200      	movs	r2, #0
 8002cf6:	f7ff ff95 	bl	8002c24 <std>
 8002cfa:	2201      	movs	r2, #1
 8002cfc:	2109      	movs	r1, #9
 8002cfe:	4807      	ldr	r0, [pc, #28]	@ (8002d1c <global_stdio_init.part.0+0x34>)
 8002d00:	f7ff ff90 	bl	8002c24 <std>
 8002d04:	2202      	movs	r2, #2
 8002d06:	2112      	movs	r1, #18
 8002d08:	4805      	ldr	r0, [pc, #20]	@ (8002d20 <global_stdio_init.part.0+0x38>)
 8002d0a:	f7ff ff8b 	bl	8002c24 <std>
 8002d0e:	bd10      	pop	{r4, pc}
 8002d10:	200001e0 	.word	0x200001e0
 8002d14:	08002c91 	.word	0x08002c91
 8002d18:	200000a8 	.word	0x200000a8
 8002d1c:	20000110 	.word	0x20000110
 8002d20:	20000178 	.word	0x20000178

08002d24 <__sfp_lock_acquire>:
 8002d24:	b510      	push	{r4, lr}
 8002d26:	4802      	ldr	r0, [pc, #8]	@ (8002d30 <__sfp_lock_acquire+0xc>)
 8002d28:	f000 f91d 	bl	8002f66 <__retarget_lock_acquire_recursive>
 8002d2c:	bd10      	pop	{r4, pc}
 8002d2e:	46c0      	nop			@ (mov r8, r8)
 8002d30:	200001e9 	.word	0x200001e9

08002d34 <__sfp_lock_release>:
 8002d34:	b510      	push	{r4, lr}
 8002d36:	4802      	ldr	r0, [pc, #8]	@ (8002d40 <__sfp_lock_release+0xc>)
 8002d38:	f000 f916 	bl	8002f68 <__retarget_lock_release_recursive>
 8002d3c:	bd10      	pop	{r4, pc}
 8002d3e:	46c0      	nop			@ (mov r8, r8)
 8002d40:	200001e9 	.word	0x200001e9

08002d44 <__sinit>:
 8002d44:	b510      	push	{r4, lr}
 8002d46:	0004      	movs	r4, r0
 8002d48:	f7ff ffec 	bl	8002d24 <__sfp_lock_acquire>
 8002d4c:	6a23      	ldr	r3, [r4, #32]
 8002d4e:	2b00      	cmp	r3, #0
 8002d50:	d002      	beq.n	8002d58 <__sinit+0x14>
 8002d52:	f7ff ffef 	bl	8002d34 <__sfp_lock_release>
 8002d56:	bd10      	pop	{r4, pc}
 8002d58:	4b04      	ldr	r3, [pc, #16]	@ (8002d6c <__sinit+0x28>)
 8002d5a:	6223      	str	r3, [r4, #32]
 8002d5c:	4b04      	ldr	r3, [pc, #16]	@ (8002d70 <__sinit+0x2c>)
 8002d5e:	681b      	ldr	r3, [r3, #0]
 8002d60:	2b00      	cmp	r3, #0
 8002d62:	d1f6      	bne.n	8002d52 <__sinit+0xe>
 8002d64:	f7ff ffc0 	bl	8002ce8 <global_stdio_init.part.0>
 8002d68:	e7f3      	b.n	8002d52 <__sinit+0xe>
 8002d6a:	46c0      	nop			@ (mov r8, r8)
 8002d6c:	08002cad 	.word	0x08002cad
 8002d70:	200001e0 	.word	0x200001e0

08002d74 <_fwalk_sglue>:
 8002d74:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002d76:	0014      	movs	r4, r2
 8002d78:	2600      	movs	r6, #0
 8002d7a:	9000      	str	r0, [sp, #0]
 8002d7c:	9101      	str	r1, [sp, #4]
 8002d7e:	68a5      	ldr	r5, [r4, #8]
 8002d80:	6867      	ldr	r7, [r4, #4]
 8002d82:	3f01      	subs	r7, #1
 8002d84:	d504      	bpl.n	8002d90 <_fwalk_sglue+0x1c>
 8002d86:	6824      	ldr	r4, [r4, #0]
 8002d88:	2c00      	cmp	r4, #0
 8002d8a:	d1f8      	bne.n	8002d7e <_fwalk_sglue+0xa>
 8002d8c:	0030      	movs	r0, r6
 8002d8e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8002d90:	89ab      	ldrh	r3, [r5, #12]
 8002d92:	2b01      	cmp	r3, #1
 8002d94:	d908      	bls.n	8002da8 <_fwalk_sglue+0x34>
 8002d96:	220e      	movs	r2, #14
 8002d98:	5eab      	ldrsh	r3, [r5, r2]
 8002d9a:	3301      	adds	r3, #1
 8002d9c:	d004      	beq.n	8002da8 <_fwalk_sglue+0x34>
 8002d9e:	0029      	movs	r1, r5
 8002da0:	9800      	ldr	r0, [sp, #0]
 8002da2:	9b01      	ldr	r3, [sp, #4]
 8002da4:	4798      	blx	r3
 8002da6:	4306      	orrs	r6, r0
 8002da8:	3568      	adds	r5, #104	@ 0x68
 8002daa:	e7ea      	b.n	8002d82 <_fwalk_sglue+0xe>

08002dac <iprintf>:
 8002dac:	b40f      	push	{r0, r1, r2, r3}
 8002dae:	b507      	push	{r0, r1, r2, lr}
 8002db0:	4905      	ldr	r1, [pc, #20]	@ (8002dc8 <iprintf+0x1c>)
 8002db2:	ab04      	add	r3, sp, #16
 8002db4:	6808      	ldr	r0, [r1, #0]
 8002db6:	cb04      	ldmia	r3!, {r2}
 8002db8:	6881      	ldr	r1, [r0, #8]
 8002dba:	9301      	str	r3, [sp, #4]
 8002dbc:	f000 f9fa 	bl	80031b4 <_vfiprintf_r>
 8002dc0:	b003      	add	sp, #12
 8002dc2:	bc08      	pop	{r3}
 8002dc4:	b004      	add	sp, #16
 8002dc6:	4718      	bx	r3
 8002dc8:	2000000c 	.word	0x2000000c

08002dcc <__sread>:
 8002dcc:	b570      	push	{r4, r5, r6, lr}
 8002dce:	000c      	movs	r4, r1
 8002dd0:	250e      	movs	r5, #14
 8002dd2:	5f49      	ldrsh	r1, [r1, r5]
 8002dd4:	f000 f874 	bl	8002ec0 <_read_r>
 8002dd8:	2800      	cmp	r0, #0
 8002dda:	db03      	blt.n	8002de4 <__sread+0x18>
 8002ddc:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8002dde:	181b      	adds	r3, r3, r0
 8002de0:	6563      	str	r3, [r4, #84]	@ 0x54
 8002de2:	bd70      	pop	{r4, r5, r6, pc}
 8002de4:	89a3      	ldrh	r3, [r4, #12]
 8002de6:	4a02      	ldr	r2, [pc, #8]	@ (8002df0 <__sread+0x24>)
 8002de8:	4013      	ands	r3, r2
 8002dea:	81a3      	strh	r3, [r4, #12]
 8002dec:	e7f9      	b.n	8002de2 <__sread+0x16>
 8002dee:	46c0      	nop			@ (mov r8, r8)
 8002df0:	ffffefff 	.word	0xffffefff

08002df4 <__swrite>:
 8002df4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002df6:	001f      	movs	r7, r3
 8002df8:	898b      	ldrh	r3, [r1, #12]
 8002dfa:	0005      	movs	r5, r0
 8002dfc:	000c      	movs	r4, r1
 8002dfe:	0016      	movs	r6, r2
 8002e00:	05db      	lsls	r3, r3, #23
 8002e02:	d505      	bpl.n	8002e10 <__swrite+0x1c>
 8002e04:	230e      	movs	r3, #14
 8002e06:	5ec9      	ldrsh	r1, [r1, r3]
 8002e08:	2200      	movs	r2, #0
 8002e0a:	2302      	movs	r3, #2
 8002e0c:	f000 f844 	bl	8002e98 <_lseek_r>
 8002e10:	89a3      	ldrh	r3, [r4, #12]
 8002e12:	4a05      	ldr	r2, [pc, #20]	@ (8002e28 <__swrite+0x34>)
 8002e14:	0028      	movs	r0, r5
 8002e16:	4013      	ands	r3, r2
 8002e18:	81a3      	strh	r3, [r4, #12]
 8002e1a:	0032      	movs	r2, r6
 8002e1c:	230e      	movs	r3, #14
 8002e1e:	5ee1      	ldrsh	r1, [r4, r3]
 8002e20:	003b      	movs	r3, r7
 8002e22:	f000 f861 	bl	8002ee8 <_write_r>
 8002e26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002e28:	ffffefff 	.word	0xffffefff

08002e2c <__sseek>:
 8002e2c:	b570      	push	{r4, r5, r6, lr}
 8002e2e:	000c      	movs	r4, r1
 8002e30:	250e      	movs	r5, #14
 8002e32:	5f49      	ldrsh	r1, [r1, r5]
 8002e34:	f000 f830 	bl	8002e98 <_lseek_r>
 8002e38:	89a3      	ldrh	r3, [r4, #12]
 8002e3a:	1c42      	adds	r2, r0, #1
 8002e3c:	d103      	bne.n	8002e46 <__sseek+0x1a>
 8002e3e:	4a05      	ldr	r2, [pc, #20]	@ (8002e54 <__sseek+0x28>)
 8002e40:	4013      	ands	r3, r2
 8002e42:	81a3      	strh	r3, [r4, #12]
 8002e44:	bd70      	pop	{r4, r5, r6, pc}
 8002e46:	2280      	movs	r2, #128	@ 0x80
 8002e48:	0152      	lsls	r2, r2, #5
 8002e4a:	4313      	orrs	r3, r2
 8002e4c:	81a3      	strh	r3, [r4, #12]
 8002e4e:	6560      	str	r0, [r4, #84]	@ 0x54
 8002e50:	e7f8      	b.n	8002e44 <__sseek+0x18>
 8002e52:	46c0      	nop			@ (mov r8, r8)
 8002e54:	ffffefff 	.word	0xffffefff

08002e58 <__sclose>:
 8002e58:	b510      	push	{r4, lr}
 8002e5a:	230e      	movs	r3, #14
 8002e5c:	5ec9      	ldrsh	r1, [r1, r3]
 8002e5e:	f000 f809 	bl	8002e74 <_close_r>
 8002e62:	bd10      	pop	{r4, pc}

08002e64 <memset>:
 8002e64:	0003      	movs	r3, r0
 8002e66:	1882      	adds	r2, r0, r2
 8002e68:	4293      	cmp	r3, r2
 8002e6a:	d100      	bne.n	8002e6e <memset+0xa>
 8002e6c:	4770      	bx	lr
 8002e6e:	7019      	strb	r1, [r3, #0]
 8002e70:	3301      	adds	r3, #1
 8002e72:	e7f9      	b.n	8002e68 <memset+0x4>

08002e74 <_close_r>:
 8002e74:	2300      	movs	r3, #0
 8002e76:	b570      	push	{r4, r5, r6, lr}
 8002e78:	4d06      	ldr	r5, [pc, #24]	@ (8002e94 <_close_r+0x20>)
 8002e7a:	0004      	movs	r4, r0
 8002e7c:	0008      	movs	r0, r1
 8002e7e:	602b      	str	r3, [r5, #0]
 8002e80:	f7ff fbb1 	bl	80025e6 <_close>
 8002e84:	1c43      	adds	r3, r0, #1
 8002e86:	d103      	bne.n	8002e90 <_close_r+0x1c>
 8002e88:	682b      	ldr	r3, [r5, #0]
 8002e8a:	2b00      	cmp	r3, #0
 8002e8c:	d000      	beq.n	8002e90 <_close_r+0x1c>
 8002e8e:	6023      	str	r3, [r4, #0]
 8002e90:	bd70      	pop	{r4, r5, r6, pc}
 8002e92:	46c0      	nop			@ (mov r8, r8)
 8002e94:	200001e4 	.word	0x200001e4

08002e98 <_lseek_r>:
 8002e98:	b570      	push	{r4, r5, r6, lr}
 8002e9a:	0004      	movs	r4, r0
 8002e9c:	0008      	movs	r0, r1
 8002e9e:	0011      	movs	r1, r2
 8002ea0:	001a      	movs	r2, r3
 8002ea2:	2300      	movs	r3, #0
 8002ea4:	4d05      	ldr	r5, [pc, #20]	@ (8002ebc <_lseek_r+0x24>)
 8002ea6:	602b      	str	r3, [r5, #0]
 8002ea8:	f7ff fbbe 	bl	8002628 <_lseek>
 8002eac:	1c43      	adds	r3, r0, #1
 8002eae:	d103      	bne.n	8002eb8 <_lseek_r+0x20>
 8002eb0:	682b      	ldr	r3, [r5, #0]
 8002eb2:	2b00      	cmp	r3, #0
 8002eb4:	d000      	beq.n	8002eb8 <_lseek_r+0x20>
 8002eb6:	6023      	str	r3, [r4, #0]
 8002eb8:	bd70      	pop	{r4, r5, r6, pc}
 8002eba:	46c0      	nop			@ (mov r8, r8)
 8002ebc:	200001e4 	.word	0x200001e4

08002ec0 <_read_r>:
 8002ec0:	b570      	push	{r4, r5, r6, lr}
 8002ec2:	0004      	movs	r4, r0
 8002ec4:	0008      	movs	r0, r1
 8002ec6:	0011      	movs	r1, r2
 8002ec8:	001a      	movs	r2, r3
 8002eca:	2300      	movs	r3, #0
 8002ecc:	4d05      	ldr	r5, [pc, #20]	@ (8002ee4 <_read_r+0x24>)
 8002ece:	602b      	str	r3, [r5, #0]
 8002ed0:	f7ff fb6c 	bl	80025ac <_read>
 8002ed4:	1c43      	adds	r3, r0, #1
 8002ed6:	d103      	bne.n	8002ee0 <_read_r+0x20>
 8002ed8:	682b      	ldr	r3, [r5, #0]
 8002eda:	2b00      	cmp	r3, #0
 8002edc:	d000      	beq.n	8002ee0 <_read_r+0x20>
 8002ede:	6023      	str	r3, [r4, #0]
 8002ee0:	bd70      	pop	{r4, r5, r6, pc}
 8002ee2:	46c0      	nop			@ (mov r8, r8)
 8002ee4:	200001e4 	.word	0x200001e4

08002ee8 <_write_r>:
 8002ee8:	b570      	push	{r4, r5, r6, lr}
 8002eea:	0004      	movs	r4, r0
 8002eec:	0008      	movs	r0, r1
 8002eee:	0011      	movs	r1, r2
 8002ef0:	001a      	movs	r2, r3
 8002ef2:	2300      	movs	r3, #0
 8002ef4:	4d05      	ldr	r5, [pc, #20]	@ (8002f0c <_write_r+0x24>)
 8002ef6:	602b      	str	r3, [r5, #0]
 8002ef8:	f7ff fdaa 	bl	8002a50 <_write>
 8002efc:	1c43      	adds	r3, r0, #1
 8002efe:	d103      	bne.n	8002f08 <_write_r+0x20>
 8002f00:	682b      	ldr	r3, [r5, #0]
 8002f02:	2b00      	cmp	r3, #0
 8002f04:	d000      	beq.n	8002f08 <_write_r+0x20>
 8002f06:	6023      	str	r3, [r4, #0]
 8002f08:	bd70      	pop	{r4, r5, r6, pc}
 8002f0a:	46c0      	nop			@ (mov r8, r8)
 8002f0c:	200001e4 	.word	0x200001e4

08002f10 <__errno>:
 8002f10:	4b01      	ldr	r3, [pc, #4]	@ (8002f18 <__errno+0x8>)
 8002f12:	6818      	ldr	r0, [r3, #0]
 8002f14:	4770      	bx	lr
 8002f16:	46c0      	nop			@ (mov r8, r8)
 8002f18:	2000000c 	.word	0x2000000c

08002f1c <__libc_init_array>:
 8002f1c:	b570      	push	{r4, r5, r6, lr}
 8002f1e:	2600      	movs	r6, #0
 8002f20:	4c0c      	ldr	r4, [pc, #48]	@ (8002f54 <__libc_init_array+0x38>)
 8002f22:	4d0d      	ldr	r5, [pc, #52]	@ (8002f58 <__libc_init_array+0x3c>)
 8002f24:	1b64      	subs	r4, r4, r5
 8002f26:	10a4      	asrs	r4, r4, #2
 8002f28:	42a6      	cmp	r6, r4
 8002f2a:	d109      	bne.n	8002f40 <__libc_init_array+0x24>
 8002f2c:	2600      	movs	r6, #0
 8002f2e:	f000 fdd9 	bl	8003ae4 <_init>
 8002f32:	4c0a      	ldr	r4, [pc, #40]	@ (8002f5c <__libc_init_array+0x40>)
 8002f34:	4d0a      	ldr	r5, [pc, #40]	@ (8002f60 <__libc_init_array+0x44>)
 8002f36:	1b64      	subs	r4, r4, r5
 8002f38:	10a4      	asrs	r4, r4, #2
 8002f3a:	42a6      	cmp	r6, r4
 8002f3c:	d105      	bne.n	8002f4a <__libc_init_array+0x2e>
 8002f3e:	bd70      	pop	{r4, r5, r6, pc}
 8002f40:	00b3      	lsls	r3, r6, #2
 8002f42:	58eb      	ldr	r3, [r5, r3]
 8002f44:	4798      	blx	r3
 8002f46:	3601      	adds	r6, #1
 8002f48:	e7ee      	b.n	8002f28 <__libc_init_array+0xc>
 8002f4a:	00b3      	lsls	r3, r6, #2
 8002f4c:	58eb      	ldr	r3, [r5, r3]
 8002f4e:	4798      	blx	r3
 8002f50:	3601      	adds	r6, #1
 8002f52:	e7f2      	b.n	8002f3a <__libc_init_array+0x1e>
 8002f54:	08003ce4 	.word	0x08003ce4
 8002f58:	08003ce4 	.word	0x08003ce4
 8002f5c:	08003ce8 	.word	0x08003ce8
 8002f60:	08003ce4 	.word	0x08003ce4

08002f64 <__retarget_lock_init_recursive>:
 8002f64:	4770      	bx	lr

08002f66 <__retarget_lock_acquire_recursive>:
 8002f66:	4770      	bx	lr

08002f68 <__retarget_lock_release_recursive>:
 8002f68:	4770      	bx	lr
	...

08002f6c <_free_r>:
 8002f6c:	b570      	push	{r4, r5, r6, lr}
 8002f6e:	0005      	movs	r5, r0
 8002f70:	1e0c      	subs	r4, r1, #0
 8002f72:	d010      	beq.n	8002f96 <_free_r+0x2a>
 8002f74:	3c04      	subs	r4, #4
 8002f76:	6823      	ldr	r3, [r4, #0]
 8002f78:	2b00      	cmp	r3, #0
 8002f7a:	da00      	bge.n	8002f7e <_free_r+0x12>
 8002f7c:	18e4      	adds	r4, r4, r3
 8002f7e:	0028      	movs	r0, r5
 8002f80:	f000 f8e0 	bl	8003144 <__malloc_lock>
 8002f84:	4a1d      	ldr	r2, [pc, #116]	@ (8002ffc <_free_r+0x90>)
 8002f86:	6813      	ldr	r3, [r2, #0]
 8002f88:	2b00      	cmp	r3, #0
 8002f8a:	d105      	bne.n	8002f98 <_free_r+0x2c>
 8002f8c:	6063      	str	r3, [r4, #4]
 8002f8e:	6014      	str	r4, [r2, #0]
 8002f90:	0028      	movs	r0, r5
 8002f92:	f000 f8df 	bl	8003154 <__malloc_unlock>
 8002f96:	bd70      	pop	{r4, r5, r6, pc}
 8002f98:	42a3      	cmp	r3, r4
 8002f9a:	d908      	bls.n	8002fae <_free_r+0x42>
 8002f9c:	6820      	ldr	r0, [r4, #0]
 8002f9e:	1821      	adds	r1, r4, r0
 8002fa0:	428b      	cmp	r3, r1
 8002fa2:	d1f3      	bne.n	8002f8c <_free_r+0x20>
 8002fa4:	6819      	ldr	r1, [r3, #0]
 8002fa6:	685b      	ldr	r3, [r3, #4]
 8002fa8:	1809      	adds	r1, r1, r0
 8002faa:	6021      	str	r1, [r4, #0]
 8002fac:	e7ee      	b.n	8002f8c <_free_r+0x20>
 8002fae:	001a      	movs	r2, r3
 8002fb0:	685b      	ldr	r3, [r3, #4]
 8002fb2:	2b00      	cmp	r3, #0
 8002fb4:	d001      	beq.n	8002fba <_free_r+0x4e>
 8002fb6:	42a3      	cmp	r3, r4
 8002fb8:	d9f9      	bls.n	8002fae <_free_r+0x42>
 8002fba:	6811      	ldr	r1, [r2, #0]
 8002fbc:	1850      	adds	r0, r2, r1
 8002fbe:	42a0      	cmp	r0, r4
 8002fc0:	d10b      	bne.n	8002fda <_free_r+0x6e>
 8002fc2:	6820      	ldr	r0, [r4, #0]
 8002fc4:	1809      	adds	r1, r1, r0
 8002fc6:	1850      	adds	r0, r2, r1
 8002fc8:	6011      	str	r1, [r2, #0]
 8002fca:	4283      	cmp	r3, r0
 8002fcc:	d1e0      	bne.n	8002f90 <_free_r+0x24>
 8002fce:	6818      	ldr	r0, [r3, #0]
 8002fd0:	685b      	ldr	r3, [r3, #4]
 8002fd2:	1841      	adds	r1, r0, r1
 8002fd4:	6011      	str	r1, [r2, #0]
 8002fd6:	6053      	str	r3, [r2, #4]
 8002fd8:	e7da      	b.n	8002f90 <_free_r+0x24>
 8002fda:	42a0      	cmp	r0, r4
 8002fdc:	d902      	bls.n	8002fe4 <_free_r+0x78>
 8002fde:	230c      	movs	r3, #12
 8002fe0:	602b      	str	r3, [r5, #0]
 8002fe2:	e7d5      	b.n	8002f90 <_free_r+0x24>
 8002fe4:	6820      	ldr	r0, [r4, #0]
 8002fe6:	1821      	adds	r1, r4, r0
 8002fe8:	428b      	cmp	r3, r1
 8002fea:	d103      	bne.n	8002ff4 <_free_r+0x88>
 8002fec:	6819      	ldr	r1, [r3, #0]
 8002fee:	685b      	ldr	r3, [r3, #4]
 8002ff0:	1809      	adds	r1, r1, r0
 8002ff2:	6021      	str	r1, [r4, #0]
 8002ff4:	6063      	str	r3, [r4, #4]
 8002ff6:	6054      	str	r4, [r2, #4]
 8002ff8:	e7ca      	b.n	8002f90 <_free_r+0x24>
 8002ffa:	46c0      	nop			@ (mov r8, r8)
 8002ffc:	200001f0 	.word	0x200001f0

08003000 <sbrk_aligned>:
 8003000:	b570      	push	{r4, r5, r6, lr}
 8003002:	4e0f      	ldr	r6, [pc, #60]	@ (8003040 <sbrk_aligned+0x40>)
 8003004:	000d      	movs	r5, r1
 8003006:	6831      	ldr	r1, [r6, #0]
 8003008:	0004      	movs	r4, r0
 800300a:	2900      	cmp	r1, #0
 800300c:	d102      	bne.n	8003014 <sbrk_aligned+0x14>
 800300e:	f000 fcbb 	bl	8003988 <_sbrk_r>
 8003012:	6030      	str	r0, [r6, #0]
 8003014:	0029      	movs	r1, r5
 8003016:	0020      	movs	r0, r4
 8003018:	f000 fcb6 	bl	8003988 <_sbrk_r>
 800301c:	1c43      	adds	r3, r0, #1
 800301e:	d103      	bne.n	8003028 <sbrk_aligned+0x28>
 8003020:	2501      	movs	r5, #1
 8003022:	426d      	negs	r5, r5
 8003024:	0028      	movs	r0, r5
 8003026:	bd70      	pop	{r4, r5, r6, pc}
 8003028:	2303      	movs	r3, #3
 800302a:	1cc5      	adds	r5, r0, #3
 800302c:	439d      	bics	r5, r3
 800302e:	42a8      	cmp	r0, r5
 8003030:	d0f8      	beq.n	8003024 <sbrk_aligned+0x24>
 8003032:	1a29      	subs	r1, r5, r0
 8003034:	0020      	movs	r0, r4
 8003036:	f000 fca7 	bl	8003988 <_sbrk_r>
 800303a:	3001      	adds	r0, #1
 800303c:	d1f2      	bne.n	8003024 <sbrk_aligned+0x24>
 800303e:	e7ef      	b.n	8003020 <sbrk_aligned+0x20>
 8003040:	200001ec 	.word	0x200001ec

08003044 <_malloc_r>:
 8003044:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003046:	2203      	movs	r2, #3
 8003048:	1ccb      	adds	r3, r1, #3
 800304a:	4393      	bics	r3, r2
 800304c:	3308      	adds	r3, #8
 800304e:	0005      	movs	r5, r0
 8003050:	001f      	movs	r7, r3
 8003052:	2b0c      	cmp	r3, #12
 8003054:	d234      	bcs.n	80030c0 <_malloc_r+0x7c>
 8003056:	270c      	movs	r7, #12
 8003058:	42b9      	cmp	r1, r7
 800305a:	d833      	bhi.n	80030c4 <_malloc_r+0x80>
 800305c:	0028      	movs	r0, r5
 800305e:	f000 f871 	bl	8003144 <__malloc_lock>
 8003062:	4e37      	ldr	r6, [pc, #220]	@ (8003140 <_malloc_r+0xfc>)
 8003064:	6833      	ldr	r3, [r6, #0]
 8003066:	001c      	movs	r4, r3
 8003068:	2c00      	cmp	r4, #0
 800306a:	d12f      	bne.n	80030cc <_malloc_r+0x88>
 800306c:	0039      	movs	r1, r7
 800306e:	0028      	movs	r0, r5
 8003070:	f7ff ffc6 	bl	8003000 <sbrk_aligned>
 8003074:	0004      	movs	r4, r0
 8003076:	1c43      	adds	r3, r0, #1
 8003078:	d15f      	bne.n	800313a <_malloc_r+0xf6>
 800307a:	6834      	ldr	r4, [r6, #0]
 800307c:	9400      	str	r4, [sp, #0]
 800307e:	9b00      	ldr	r3, [sp, #0]
 8003080:	2b00      	cmp	r3, #0
 8003082:	d14a      	bne.n	800311a <_malloc_r+0xd6>
 8003084:	2c00      	cmp	r4, #0
 8003086:	d052      	beq.n	800312e <_malloc_r+0xea>
 8003088:	6823      	ldr	r3, [r4, #0]
 800308a:	0028      	movs	r0, r5
 800308c:	18e3      	adds	r3, r4, r3
 800308e:	9900      	ldr	r1, [sp, #0]
 8003090:	9301      	str	r3, [sp, #4]
 8003092:	f000 fc79 	bl	8003988 <_sbrk_r>
 8003096:	9b01      	ldr	r3, [sp, #4]
 8003098:	4283      	cmp	r3, r0
 800309a:	d148      	bne.n	800312e <_malloc_r+0xea>
 800309c:	6823      	ldr	r3, [r4, #0]
 800309e:	0028      	movs	r0, r5
 80030a0:	1aff      	subs	r7, r7, r3
 80030a2:	0039      	movs	r1, r7
 80030a4:	f7ff ffac 	bl	8003000 <sbrk_aligned>
 80030a8:	3001      	adds	r0, #1
 80030aa:	d040      	beq.n	800312e <_malloc_r+0xea>
 80030ac:	6823      	ldr	r3, [r4, #0]
 80030ae:	19db      	adds	r3, r3, r7
 80030b0:	6023      	str	r3, [r4, #0]
 80030b2:	6833      	ldr	r3, [r6, #0]
 80030b4:	685a      	ldr	r2, [r3, #4]
 80030b6:	2a00      	cmp	r2, #0
 80030b8:	d133      	bne.n	8003122 <_malloc_r+0xde>
 80030ba:	9b00      	ldr	r3, [sp, #0]
 80030bc:	6033      	str	r3, [r6, #0]
 80030be:	e019      	b.n	80030f4 <_malloc_r+0xb0>
 80030c0:	2b00      	cmp	r3, #0
 80030c2:	dac9      	bge.n	8003058 <_malloc_r+0x14>
 80030c4:	230c      	movs	r3, #12
 80030c6:	602b      	str	r3, [r5, #0]
 80030c8:	2000      	movs	r0, #0
 80030ca:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80030cc:	6821      	ldr	r1, [r4, #0]
 80030ce:	1bc9      	subs	r1, r1, r7
 80030d0:	d420      	bmi.n	8003114 <_malloc_r+0xd0>
 80030d2:	290b      	cmp	r1, #11
 80030d4:	d90a      	bls.n	80030ec <_malloc_r+0xa8>
 80030d6:	19e2      	adds	r2, r4, r7
 80030d8:	6027      	str	r7, [r4, #0]
 80030da:	42a3      	cmp	r3, r4
 80030dc:	d104      	bne.n	80030e8 <_malloc_r+0xa4>
 80030de:	6032      	str	r2, [r6, #0]
 80030e0:	6863      	ldr	r3, [r4, #4]
 80030e2:	6011      	str	r1, [r2, #0]
 80030e4:	6053      	str	r3, [r2, #4]
 80030e6:	e005      	b.n	80030f4 <_malloc_r+0xb0>
 80030e8:	605a      	str	r2, [r3, #4]
 80030ea:	e7f9      	b.n	80030e0 <_malloc_r+0x9c>
 80030ec:	6862      	ldr	r2, [r4, #4]
 80030ee:	42a3      	cmp	r3, r4
 80030f0:	d10e      	bne.n	8003110 <_malloc_r+0xcc>
 80030f2:	6032      	str	r2, [r6, #0]
 80030f4:	0028      	movs	r0, r5
 80030f6:	f000 f82d 	bl	8003154 <__malloc_unlock>
 80030fa:	0020      	movs	r0, r4
 80030fc:	2207      	movs	r2, #7
 80030fe:	300b      	adds	r0, #11
 8003100:	1d23      	adds	r3, r4, #4
 8003102:	4390      	bics	r0, r2
 8003104:	1ac2      	subs	r2, r0, r3
 8003106:	4298      	cmp	r0, r3
 8003108:	d0df      	beq.n	80030ca <_malloc_r+0x86>
 800310a:	1a1b      	subs	r3, r3, r0
 800310c:	50a3      	str	r3, [r4, r2]
 800310e:	e7dc      	b.n	80030ca <_malloc_r+0x86>
 8003110:	605a      	str	r2, [r3, #4]
 8003112:	e7ef      	b.n	80030f4 <_malloc_r+0xb0>
 8003114:	0023      	movs	r3, r4
 8003116:	6864      	ldr	r4, [r4, #4]
 8003118:	e7a6      	b.n	8003068 <_malloc_r+0x24>
 800311a:	9c00      	ldr	r4, [sp, #0]
 800311c:	6863      	ldr	r3, [r4, #4]
 800311e:	9300      	str	r3, [sp, #0]
 8003120:	e7ad      	b.n	800307e <_malloc_r+0x3a>
 8003122:	001a      	movs	r2, r3
 8003124:	685b      	ldr	r3, [r3, #4]
 8003126:	42a3      	cmp	r3, r4
 8003128:	d1fb      	bne.n	8003122 <_malloc_r+0xde>
 800312a:	2300      	movs	r3, #0
 800312c:	e7da      	b.n	80030e4 <_malloc_r+0xa0>
 800312e:	230c      	movs	r3, #12
 8003130:	0028      	movs	r0, r5
 8003132:	602b      	str	r3, [r5, #0]
 8003134:	f000 f80e 	bl	8003154 <__malloc_unlock>
 8003138:	e7c6      	b.n	80030c8 <_malloc_r+0x84>
 800313a:	6007      	str	r7, [r0, #0]
 800313c:	e7da      	b.n	80030f4 <_malloc_r+0xb0>
 800313e:	46c0      	nop			@ (mov r8, r8)
 8003140:	200001f0 	.word	0x200001f0

08003144 <__malloc_lock>:
 8003144:	b510      	push	{r4, lr}
 8003146:	4802      	ldr	r0, [pc, #8]	@ (8003150 <__malloc_lock+0xc>)
 8003148:	f7ff ff0d 	bl	8002f66 <__retarget_lock_acquire_recursive>
 800314c:	bd10      	pop	{r4, pc}
 800314e:	46c0      	nop			@ (mov r8, r8)
 8003150:	200001e8 	.word	0x200001e8

08003154 <__malloc_unlock>:
 8003154:	b510      	push	{r4, lr}
 8003156:	4802      	ldr	r0, [pc, #8]	@ (8003160 <__malloc_unlock+0xc>)
 8003158:	f7ff ff06 	bl	8002f68 <__retarget_lock_release_recursive>
 800315c:	bd10      	pop	{r4, pc}
 800315e:	46c0      	nop			@ (mov r8, r8)
 8003160:	200001e8 	.word	0x200001e8

08003164 <__sfputc_r>:
 8003164:	6893      	ldr	r3, [r2, #8]
 8003166:	b510      	push	{r4, lr}
 8003168:	3b01      	subs	r3, #1
 800316a:	6093      	str	r3, [r2, #8]
 800316c:	2b00      	cmp	r3, #0
 800316e:	da04      	bge.n	800317a <__sfputc_r+0x16>
 8003170:	6994      	ldr	r4, [r2, #24]
 8003172:	42a3      	cmp	r3, r4
 8003174:	db07      	blt.n	8003186 <__sfputc_r+0x22>
 8003176:	290a      	cmp	r1, #10
 8003178:	d005      	beq.n	8003186 <__sfputc_r+0x22>
 800317a:	6813      	ldr	r3, [r2, #0]
 800317c:	1c58      	adds	r0, r3, #1
 800317e:	6010      	str	r0, [r2, #0]
 8003180:	7019      	strb	r1, [r3, #0]
 8003182:	0008      	movs	r0, r1
 8003184:	bd10      	pop	{r4, pc}
 8003186:	f000 fb5e 	bl	8003846 <__swbuf_r>
 800318a:	0001      	movs	r1, r0
 800318c:	e7f9      	b.n	8003182 <__sfputc_r+0x1e>

0800318e <__sfputs_r>:
 800318e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003190:	0006      	movs	r6, r0
 8003192:	000f      	movs	r7, r1
 8003194:	0014      	movs	r4, r2
 8003196:	18d5      	adds	r5, r2, r3
 8003198:	42ac      	cmp	r4, r5
 800319a:	d101      	bne.n	80031a0 <__sfputs_r+0x12>
 800319c:	2000      	movs	r0, #0
 800319e:	e007      	b.n	80031b0 <__sfputs_r+0x22>
 80031a0:	7821      	ldrb	r1, [r4, #0]
 80031a2:	003a      	movs	r2, r7
 80031a4:	0030      	movs	r0, r6
 80031a6:	f7ff ffdd 	bl	8003164 <__sfputc_r>
 80031aa:	3401      	adds	r4, #1
 80031ac:	1c43      	adds	r3, r0, #1
 80031ae:	d1f3      	bne.n	8003198 <__sfputs_r+0xa>
 80031b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080031b4 <_vfiprintf_r>:
 80031b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80031b6:	b0a1      	sub	sp, #132	@ 0x84
 80031b8:	000f      	movs	r7, r1
 80031ba:	0015      	movs	r5, r2
 80031bc:	001e      	movs	r6, r3
 80031be:	9003      	str	r0, [sp, #12]
 80031c0:	2800      	cmp	r0, #0
 80031c2:	d004      	beq.n	80031ce <_vfiprintf_r+0x1a>
 80031c4:	6a03      	ldr	r3, [r0, #32]
 80031c6:	2b00      	cmp	r3, #0
 80031c8:	d101      	bne.n	80031ce <_vfiprintf_r+0x1a>
 80031ca:	f7ff fdbb 	bl	8002d44 <__sinit>
 80031ce:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80031d0:	07db      	lsls	r3, r3, #31
 80031d2:	d405      	bmi.n	80031e0 <_vfiprintf_r+0x2c>
 80031d4:	89bb      	ldrh	r3, [r7, #12]
 80031d6:	059b      	lsls	r3, r3, #22
 80031d8:	d402      	bmi.n	80031e0 <_vfiprintf_r+0x2c>
 80031da:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 80031dc:	f7ff fec3 	bl	8002f66 <__retarget_lock_acquire_recursive>
 80031e0:	89bb      	ldrh	r3, [r7, #12]
 80031e2:	071b      	lsls	r3, r3, #28
 80031e4:	d502      	bpl.n	80031ec <_vfiprintf_r+0x38>
 80031e6:	693b      	ldr	r3, [r7, #16]
 80031e8:	2b00      	cmp	r3, #0
 80031ea:	d113      	bne.n	8003214 <_vfiprintf_r+0x60>
 80031ec:	0039      	movs	r1, r7
 80031ee:	9803      	ldr	r0, [sp, #12]
 80031f0:	f000 fb6c 	bl	80038cc <__swsetup_r>
 80031f4:	2800      	cmp	r0, #0
 80031f6:	d00d      	beq.n	8003214 <_vfiprintf_r+0x60>
 80031f8:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80031fa:	07db      	lsls	r3, r3, #31
 80031fc:	d503      	bpl.n	8003206 <_vfiprintf_r+0x52>
 80031fe:	2001      	movs	r0, #1
 8003200:	4240      	negs	r0, r0
 8003202:	b021      	add	sp, #132	@ 0x84
 8003204:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003206:	89bb      	ldrh	r3, [r7, #12]
 8003208:	059b      	lsls	r3, r3, #22
 800320a:	d4f8      	bmi.n	80031fe <_vfiprintf_r+0x4a>
 800320c:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 800320e:	f7ff feab 	bl	8002f68 <__retarget_lock_release_recursive>
 8003212:	e7f4      	b.n	80031fe <_vfiprintf_r+0x4a>
 8003214:	2300      	movs	r3, #0
 8003216:	ac08      	add	r4, sp, #32
 8003218:	6163      	str	r3, [r4, #20]
 800321a:	3320      	adds	r3, #32
 800321c:	7663      	strb	r3, [r4, #25]
 800321e:	3310      	adds	r3, #16
 8003220:	76a3      	strb	r3, [r4, #26]
 8003222:	9607      	str	r6, [sp, #28]
 8003224:	002e      	movs	r6, r5
 8003226:	7833      	ldrb	r3, [r6, #0]
 8003228:	2b00      	cmp	r3, #0
 800322a:	d001      	beq.n	8003230 <_vfiprintf_r+0x7c>
 800322c:	2b25      	cmp	r3, #37	@ 0x25
 800322e:	d148      	bne.n	80032c2 <_vfiprintf_r+0x10e>
 8003230:	1b73      	subs	r3, r6, r5
 8003232:	9305      	str	r3, [sp, #20]
 8003234:	42ae      	cmp	r6, r5
 8003236:	d00b      	beq.n	8003250 <_vfiprintf_r+0x9c>
 8003238:	002a      	movs	r2, r5
 800323a:	0039      	movs	r1, r7
 800323c:	9803      	ldr	r0, [sp, #12]
 800323e:	f7ff ffa6 	bl	800318e <__sfputs_r>
 8003242:	3001      	adds	r0, #1
 8003244:	d100      	bne.n	8003248 <_vfiprintf_r+0x94>
 8003246:	e0ae      	b.n	80033a6 <_vfiprintf_r+0x1f2>
 8003248:	6963      	ldr	r3, [r4, #20]
 800324a:	9a05      	ldr	r2, [sp, #20]
 800324c:	189b      	adds	r3, r3, r2
 800324e:	6163      	str	r3, [r4, #20]
 8003250:	7833      	ldrb	r3, [r6, #0]
 8003252:	2b00      	cmp	r3, #0
 8003254:	d100      	bne.n	8003258 <_vfiprintf_r+0xa4>
 8003256:	e0a6      	b.n	80033a6 <_vfiprintf_r+0x1f2>
 8003258:	2201      	movs	r2, #1
 800325a:	2300      	movs	r3, #0
 800325c:	4252      	negs	r2, r2
 800325e:	6062      	str	r2, [r4, #4]
 8003260:	a904      	add	r1, sp, #16
 8003262:	3254      	adds	r2, #84	@ 0x54
 8003264:	1852      	adds	r2, r2, r1
 8003266:	1c75      	adds	r5, r6, #1
 8003268:	6023      	str	r3, [r4, #0]
 800326a:	60e3      	str	r3, [r4, #12]
 800326c:	60a3      	str	r3, [r4, #8]
 800326e:	7013      	strb	r3, [r2, #0]
 8003270:	65a3      	str	r3, [r4, #88]	@ 0x58
 8003272:	4b59      	ldr	r3, [pc, #356]	@ (80033d8 <_vfiprintf_r+0x224>)
 8003274:	2205      	movs	r2, #5
 8003276:	0018      	movs	r0, r3
 8003278:	7829      	ldrb	r1, [r5, #0]
 800327a:	9305      	str	r3, [sp, #20]
 800327c:	f000 fb96 	bl	80039ac <memchr>
 8003280:	1c6e      	adds	r6, r5, #1
 8003282:	2800      	cmp	r0, #0
 8003284:	d11f      	bne.n	80032c6 <_vfiprintf_r+0x112>
 8003286:	6822      	ldr	r2, [r4, #0]
 8003288:	06d3      	lsls	r3, r2, #27
 800328a:	d504      	bpl.n	8003296 <_vfiprintf_r+0xe2>
 800328c:	2353      	movs	r3, #83	@ 0x53
 800328e:	a904      	add	r1, sp, #16
 8003290:	185b      	adds	r3, r3, r1
 8003292:	2120      	movs	r1, #32
 8003294:	7019      	strb	r1, [r3, #0]
 8003296:	0713      	lsls	r3, r2, #28
 8003298:	d504      	bpl.n	80032a4 <_vfiprintf_r+0xf0>
 800329a:	2353      	movs	r3, #83	@ 0x53
 800329c:	a904      	add	r1, sp, #16
 800329e:	185b      	adds	r3, r3, r1
 80032a0:	212b      	movs	r1, #43	@ 0x2b
 80032a2:	7019      	strb	r1, [r3, #0]
 80032a4:	782b      	ldrb	r3, [r5, #0]
 80032a6:	2b2a      	cmp	r3, #42	@ 0x2a
 80032a8:	d016      	beq.n	80032d8 <_vfiprintf_r+0x124>
 80032aa:	002e      	movs	r6, r5
 80032ac:	2100      	movs	r1, #0
 80032ae:	200a      	movs	r0, #10
 80032b0:	68e3      	ldr	r3, [r4, #12]
 80032b2:	7832      	ldrb	r2, [r6, #0]
 80032b4:	1c75      	adds	r5, r6, #1
 80032b6:	3a30      	subs	r2, #48	@ 0x30
 80032b8:	2a09      	cmp	r2, #9
 80032ba:	d950      	bls.n	800335e <_vfiprintf_r+0x1aa>
 80032bc:	2900      	cmp	r1, #0
 80032be:	d111      	bne.n	80032e4 <_vfiprintf_r+0x130>
 80032c0:	e017      	b.n	80032f2 <_vfiprintf_r+0x13e>
 80032c2:	3601      	adds	r6, #1
 80032c4:	e7af      	b.n	8003226 <_vfiprintf_r+0x72>
 80032c6:	9b05      	ldr	r3, [sp, #20]
 80032c8:	6822      	ldr	r2, [r4, #0]
 80032ca:	1ac0      	subs	r0, r0, r3
 80032cc:	2301      	movs	r3, #1
 80032ce:	4083      	lsls	r3, r0
 80032d0:	4313      	orrs	r3, r2
 80032d2:	0035      	movs	r5, r6
 80032d4:	6023      	str	r3, [r4, #0]
 80032d6:	e7cc      	b.n	8003272 <_vfiprintf_r+0xbe>
 80032d8:	9b07      	ldr	r3, [sp, #28]
 80032da:	1d19      	adds	r1, r3, #4
 80032dc:	681b      	ldr	r3, [r3, #0]
 80032de:	9107      	str	r1, [sp, #28]
 80032e0:	2b00      	cmp	r3, #0
 80032e2:	db01      	blt.n	80032e8 <_vfiprintf_r+0x134>
 80032e4:	930b      	str	r3, [sp, #44]	@ 0x2c
 80032e6:	e004      	b.n	80032f2 <_vfiprintf_r+0x13e>
 80032e8:	425b      	negs	r3, r3
 80032ea:	60e3      	str	r3, [r4, #12]
 80032ec:	2302      	movs	r3, #2
 80032ee:	4313      	orrs	r3, r2
 80032f0:	6023      	str	r3, [r4, #0]
 80032f2:	7833      	ldrb	r3, [r6, #0]
 80032f4:	2b2e      	cmp	r3, #46	@ 0x2e
 80032f6:	d10c      	bne.n	8003312 <_vfiprintf_r+0x15e>
 80032f8:	7873      	ldrb	r3, [r6, #1]
 80032fa:	2b2a      	cmp	r3, #42	@ 0x2a
 80032fc:	d134      	bne.n	8003368 <_vfiprintf_r+0x1b4>
 80032fe:	9b07      	ldr	r3, [sp, #28]
 8003300:	3602      	adds	r6, #2
 8003302:	1d1a      	adds	r2, r3, #4
 8003304:	681b      	ldr	r3, [r3, #0]
 8003306:	9207      	str	r2, [sp, #28]
 8003308:	2b00      	cmp	r3, #0
 800330a:	da01      	bge.n	8003310 <_vfiprintf_r+0x15c>
 800330c:	2301      	movs	r3, #1
 800330e:	425b      	negs	r3, r3
 8003310:	9309      	str	r3, [sp, #36]	@ 0x24
 8003312:	4d32      	ldr	r5, [pc, #200]	@ (80033dc <_vfiprintf_r+0x228>)
 8003314:	2203      	movs	r2, #3
 8003316:	0028      	movs	r0, r5
 8003318:	7831      	ldrb	r1, [r6, #0]
 800331a:	f000 fb47 	bl	80039ac <memchr>
 800331e:	2800      	cmp	r0, #0
 8003320:	d006      	beq.n	8003330 <_vfiprintf_r+0x17c>
 8003322:	2340      	movs	r3, #64	@ 0x40
 8003324:	1b40      	subs	r0, r0, r5
 8003326:	4083      	lsls	r3, r0
 8003328:	6822      	ldr	r2, [r4, #0]
 800332a:	3601      	adds	r6, #1
 800332c:	4313      	orrs	r3, r2
 800332e:	6023      	str	r3, [r4, #0]
 8003330:	7831      	ldrb	r1, [r6, #0]
 8003332:	2206      	movs	r2, #6
 8003334:	482a      	ldr	r0, [pc, #168]	@ (80033e0 <_vfiprintf_r+0x22c>)
 8003336:	1c75      	adds	r5, r6, #1
 8003338:	7621      	strb	r1, [r4, #24]
 800333a:	f000 fb37 	bl	80039ac <memchr>
 800333e:	2800      	cmp	r0, #0
 8003340:	d040      	beq.n	80033c4 <_vfiprintf_r+0x210>
 8003342:	4b28      	ldr	r3, [pc, #160]	@ (80033e4 <_vfiprintf_r+0x230>)
 8003344:	2b00      	cmp	r3, #0
 8003346:	d122      	bne.n	800338e <_vfiprintf_r+0x1da>
 8003348:	2207      	movs	r2, #7
 800334a:	9b07      	ldr	r3, [sp, #28]
 800334c:	3307      	adds	r3, #7
 800334e:	4393      	bics	r3, r2
 8003350:	3308      	adds	r3, #8
 8003352:	9307      	str	r3, [sp, #28]
 8003354:	6963      	ldr	r3, [r4, #20]
 8003356:	9a04      	ldr	r2, [sp, #16]
 8003358:	189b      	adds	r3, r3, r2
 800335a:	6163      	str	r3, [r4, #20]
 800335c:	e762      	b.n	8003224 <_vfiprintf_r+0x70>
 800335e:	4343      	muls	r3, r0
 8003360:	002e      	movs	r6, r5
 8003362:	2101      	movs	r1, #1
 8003364:	189b      	adds	r3, r3, r2
 8003366:	e7a4      	b.n	80032b2 <_vfiprintf_r+0xfe>
 8003368:	2300      	movs	r3, #0
 800336a:	200a      	movs	r0, #10
 800336c:	0019      	movs	r1, r3
 800336e:	3601      	adds	r6, #1
 8003370:	6063      	str	r3, [r4, #4]
 8003372:	7832      	ldrb	r2, [r6, #0]
 8003374:	1c75      	adds	r5, r6, #1
 8003376:	3a30      	subs	r2, #48	@ 0x30
 8003378:	2a09      	cmp	r2, #9
 800337a:	d903      	bls.n	8003384 <_vfiprintf_r+0x1d0>
 800337c:	2b00      	cmp	r3, #0
 800337e:	d0c8      	beq.n	8003312 <_vfiprintf_r+0x15e>
 8003380:	9109      	str	r1, [sp, #36]	@ 0x24
 8003382:	e7c6      	b.n	8003312 <_vfiprintf_r+0x15e>
 8003384:	4341      	muls	r1, r0
 8003386:	002e      	movs	r6, r5
 8003388:	2301      	movs	r3, #1
 800338a:	1889      	adds	r1, r1, r2
 800338c:	e7f1      	b.n	8003372 <_vfiprintf_r+0x1be>
 800338e:	aa07      	add	r2, sp, #28
 8003390:	9200      	str	r2, [sp, #0]
 8003392:	0021      	movs	r1, r4
 8003394:	003a      	movs	r2, r7
 8003396:	4b14      	ldr	r3, [pc, #80]	@ (80033e8 <_vfiprintf_r+0x234>)
 8003398:	9803      	ldr	r0, [sp, #12]
 800339a:	e000      	b.n	800339e <_vfiprintf_r+0x1ea>
 800339c:	bf00      	nop
 800339e:	9004      	str	r0, [sp, #16]
 80033a0:	9b04      	ldr	r3, [sp, #16]
 80033a2:	3301      	adds	r3, #1
 80033a4:	d1d6      	bne.n	8003354 <_vfiprintf_r+0x1a0>
 80033a6:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80033a8:	07db      	lsls	r3, r3, #31
 80033aa:	d405      	bmi.n	80033b8 <_vfiprintf_r+0x204>
 80033ac:	89bb      	ldrh	r3, [r7, #12]
 80033ae:	059b      	lsls	r3, r3, #22
 80033b0:	d402      	bmi.n	80033b8 <_vfiprintf_r+0x204>
 80033b2:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 80033b4:	f7ff fdd8 	bl	8002f68 <__retarget_lock_release_recursive>
 80033b8:	89bb      	ldrh	r3, [r7, #12]
 80033ba:	065b      	lsls	r3, r3, #25
 80033bc:	d500      	bpl.n	80033c0 <_vfiprintf_r+0x20c>
 80033be:	e71e      	b.n	80031fe <_vfiprintf_r+0x4a>
 80033c0:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80033c2:	e71e      	b.n	8003202 <_vfiprintf_r+0x4e>
 80033c4:	aa07      	add	r2, sp, #28
 80033c6:	9200      	str	r2, [sp, #0]
 80033c8:	0021      	movs	r1, r4
 80033ca:	003a      	movs	r2, r7
 80033cc:	4b06      	ldr	r3, [pc, #24]	@ (80033e8 <_vfiprintf_r+0x234>)
 80033ce:	9803      	ldr	r0, [sp, #12]
 80033d0:	f000 f87c 	bl	80034cc <_printf_i>
 80033d4:	e7e3      	b.n	800339e <_vfiprintf_r+0x1ea>
 80033d6:	46c0      	nop			@ (mov r8, r8)
 80033d8:	08003cb1 	.word	0x08003cb1
 80033dc:	08003cb7 	.word	0x08003cb7
 80033e0:	08003cbb 	.word	0x08003cbb
 80033e4:	00000000 	.word	0x00000000
 80033e8:	0800318f 	.word	0x0800318f

080033ec <_printf_common>:
 80033ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80033ee:	0016      	movs	r6, r2
 80033f0:	9301      	str	r3, [sp, #4]
 80033f2:	688a      	ldr	r2, [r1, #8]
 80033f4:	690b      	ldr	r3, [r1, #16]
 80033f6:	000c      	movs	r4, r1
 80033f8:	9000      	str	r0, [sp, #0]
 80033fa:	4293      	cmp	r3, r2
 80033fc:	da00      	bge.n	8003400 <_printf_common+0x14>
 80033fe:	0013      	movs	r3, r2
 8003400:	0022      	movs	r2, r4
 8003402:	6033      	str	r3, [r6, #0]
 8003404:	3243      	adds	r2, #67	@ 0x43
 8003406:	7812      	ldrb	r2, [r2, #0]
 8003408:	2a00      	cmp	r2, #0
 800340a:	d001      	beq.n	8003410 <_printf_common+0x24>
 800340c:	3301      	adds	r3, #1
 800340e:	6033      	str	r3, [r6, #0]
 8003410:	6823      	ldr	r3, [r4, #0]
 8003412:	069b      	lsls	r3, r3, #26
 8003414:	d502      	bpl.n	800341c <_printf_common+0x30>
 8003416:	6833      	ldr	r3, [r6, #0]
 8003418:	3302      	adds	r3, #2
 800341a:	6033      	str	r3, [r6, #0]
 800341c:	6822      	ldr	r2, [r4, #0]
 800341e:	2306      	movs	r3, #6
 8003420:	0015      	movs	r5, r2
 8003422:	401d      	ands	r5, r3
 8003424:	421a      	tst	r2, r3
 8003426:	d027      	beq.n	8003478 <_printf_common+0x8c>
 8003428:	0023      	movs	r3, r4
 800342a:	3343      	adds	r3, #67	@ 0x43
 800342c:	781b      	ldrb	r3, [r3, #0]
 800342e:	1e5a      	subs	r2, r3, #1
 8003430:	4193      	sbcs	r3, r2
 8003432:	6822      	ldr	r2, [r4, #0]
 8003434:	0692      	lsls	r2, r2, #26
 8003436:	d430      	bmi.n	800349a <_printf_common+0xae>
 8003438:	0022      	movs	r2, r4
 800343a:	9901      	ldr	r1, [sp, #4]
 800343c:	9800      	ldr	r0, [sp, #0]
 800343e:	9d08      	ldr	r5, [sp, #32]
 8003440:	3243      	adds	r2, #67	@ 0x43
 8003442:	47a8      	blx	r5
 8003444:	3001      	adds	r0, #1
 8003446:	d025      	beq.n	8003494 <_printf_common+0xa8>
 8003448:	2206      	movs	r2, #6
 800344a:	6823      	ldr	r3, [r4, #0]
 800344c:	2500      	movs	r5, #0
 800344e:	4013      	ands	r3, r2
 8003450:	2b04      	cmp	r3, #4
 8003452:	d105      	bne.n	8003460 <_printf_common+0x74>
 8003454:	6833      	ldr	r3, [r6, #0]
 8003456:	68e5      	ldr	r5, [r4, #12]
 8003458:	1aed      	subs	r5, r5, r3
 800345a:	43eb      	mvns	r3, r5
 800345c:	17db      	asrs	r3, r3, #31
 800345e:	401d      	ands	r5, r3
 8003460:	68a3      	ldr	r3, [r4, #8]
 8003462:	6922      	ldr	r2, [r4, #16]
 8003464:	4293      	cmp	r3, r2
 8003466:	dd01      	ble.n	800346c <_printf_common+0x80>
 8003468:	1a9b      	subs	r3, r3, r2
 800346a:	18ed      	adds	r5, r5, r3
 800346c:	2600      	movs	r6, #0
 800346e:	42b5      	cmp	r5, r6
 8003470:	d120      	bne.n	80034b4 <_printf_common+0xc8>
 8003472:	2000      	movs	r0, #0
 8003474:	e010      	b.n	8003498 <_printf_common+0xac>
 8003476:	3501      	adds	r5, #1
 8003478:	68e3      	ldr	r3, [r4, #12]
 800347a:	6832      	ldr	r2, [r6, #0]
 800347c:	1a9b      	subs	r3, r3, r2
 800347e:	42ab      	cmp	r3, r5
 8003480:	ddd2      	ble.n	8003428 <_printf_common+0x3c>
 8003482:	0022      	movs	r2, r4
 8003484:	2301      	movs	r3, #1
 8003486:	9901      	ldr	r1, [sp, #4]
 8003488:	9800      	ldr	r0, [sp, #0]
 800348a:	9f08      	ldr	r7, [sp, #32]
 800348c:	3219      	adds	r2, #25
 800348e:	47b8      	blx	r7
 8003490:	3001      	adds	r0, #1
 8003492:	d1f0      	bne.n	8003476 <_printf_common+0x8a>
 8003494:	2001      	movs	r0, #1
 8003496:	4240      	negs	r0, r0
 8003498:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800349a:	2030      	movs	r0, #48	@ 0x30
 800349c:	18e1      	adds	r1, r4, r3
 800349e:	3143      	adds	r1, #67	@ 0x43
 80034a0:	7008      	strb	r0, [r1, #0]
 80034a2:	0021      	movs	r1, r4
 80034a4:	1c5a      	adds	r2, r3, #1
 80034a6:	3145      	adds	r1, #69	@ 0x45
 80034a8:	7809      	ldrb	r1, [r1, #0]
 80034aa:	18a2      	adds	r2, r4, r2
 80034ac:	3243      	adds	r2, #67	@ 0x43
 80034ae:	3302      	adds	r3, #2
 80034b0:	7011      	strb	r1, [r2, #0]
 80034b2:	e7c1      	b.n	8003438 <_printf_common+0x4c>
 80034b4:	0022      	movs	r2, r4
 80034b6:	2301      	movs	r3, #1
 80034b8:	9901      	ldr	r1, [sp, #4]
 80034ba:	9800      	ldr	r0, [sp, #0]
 80034bc:	9f08      	ldr	r7, [sp, #32]
 80034be:	321a      	adds	r2, #26
 80034c0:	47b8      	blx	r7
 80034c2:	3001      	adds	r0, #1
 80034c4:	d0e6      	beq.n	8003494 <_printf_common+0xa8>
 80034c6:	3601      	adds	r6, #1
 80034c8:	e7d1      	b.n	800346e <_printf_common+0x82>
	...

080034cc <_printf_i>:
 80034cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80034ce:	b08b      	sub	sp, #44	@ 0x2c
 80034d0:	9206      	str	r2, [sp, #24]
 80034d2:	000a      	movs	r2, r1
 80034d4:	3243      	adds	r2, #67	@ 0x43
 80034d6:	9307      	str	r3, [sp, #28]
 80034d8:	9005      	str	r0, [sp, #20]
 80034da:	9203      	str	r2, [sp, #12]
 80034dc:	7e0a      	ldrb	r2, [r1, #24]
 80034de:	000c      	movs	r4, r1
 80034e0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80034e2:	2a78      	cmp	r2, #120	@ 0x78
 80034e4:	d809      	bhi.n	80034fa <_printf_i+0x2e>
 80034e6:	2a62      	cmp	r2, #98	@ 0x62
 80034e8:	d80b      	bhi.n	8003502 <_printf_i+0x36>
 80034ea:	2a00      	cmp	r2, #0
 80034ec:	d100      	bne.n	80034f0 <_printf_i+0x24>
 80034ee:	e0ba      	b.n	8003666 <_printf_i+0x19a>
 80034f0:	497a      	ldr	r1, [pc, #488]	@ (80036dc <_printf_i+0x210>)
 80034f2:	9104      	str	r1, [sp, #16]
 80034f4:	2a58      	cmp	r2, #88	@ 0x58
 80034f6:	d100      	bne.n	80034fa <_printf_i+0x2e>
 80034f8:	e08e      	b.n	8003618 <_printf_i+0x14c>
 80034fa:	0025      	movs	r5, r4
 80034fc:	3542      	adds	r5, #66	@ 0x42
 80034fe:	702a      	strb	r2, [r5, #0]
 8003500:	e022      	b.n	8003548 <_printf_i+0x7c>
 8003502:	0010      	movs	r0, r2
 8003504:	3863      	subs	r0, #99	@ 0x63
 8003506:	2815      	cmp	r0, #21
 8003508:	d8f7      	bhi.n	80034fa <_printf_i+0x2e>
 800350a:	f7fc fdf7 	bl	80000fc <__gnu_thumb1_case_shi>
 800350e:	0016      	.short	0x0016
 8003510:	fff6001f 	.word	0xfff6001f
 8003514:	fff6fff6 	.word	0xfff6fff6
 8003518:	001ffff6 	.word	0x001ffff6
 800351c:	fff6fff6 	.word	0xfff6fff6
 8003520:	fff6fff6 	.word	0xfff6fff6
 8003524:	0036009f 	.word	0x0036009f
 8003528:	fff6007e 	.word	0xfff6007e
 800352c:	00b0fff6 	.word	0x00b0fff6
 8003530:	0036fff6 	.word	0x0036fff6
 8003534:	fff6fff6 	.word	0xfff6fff6
 8003538:	0082      	.short	0x0082
 800353a:	0025      	movs	r5, r4
 800353c:	681a      	ldr	r2, [r3, #0]
 800353e:	3542      	adds	r5, #66	@ 0x42
 8003540:	1d11      	adds	r1, r2, #4
 8003542:	6019      	str	r1, [r3, #0]
 8003544:	6813      	ldr	r3, [r2, #0]
 8003546:	702b      	strb	r3, [r5, #0]
 8003548:	2301      	movs	r3, #1
 800354a:	e09e      	b.n	800368a <_printf_i+0x1be>
 800354c:	6818      	ldr	r0, [r3, #0]
 800354e:	6809      	ldr	r1, [r1, #0]
 8003550:	1d02      	adds	r2, r0, #4
 8003552:	060d      	lsls	r5, r1, #24
 8003554:	d50b      	bpl.n	800356e <_printf_i+0xa2>
 8003556:	6806      	ldr	r6, [r0, #0]
 8003558:	601a      	str	r2, [r3, #0]
 800355a:	2e00      	cmp	r6, #0
 800355c:	da03      	bge.n	8003566 <_printf_i+0x9a>
 800355e:	232d      	movs	r3, #45	@ 0x2d
 8003560:	9a03      	ldr	r2, [sp, #12]
 8003562:	4276      	negs	r6, r6
 8003564:	7013      	strb	r3, [r2, #0]
 8003566:	4b5d      	ldr	r3, [pc, #372]	@ (80036dc <_printf_i+0x210>)
 8003568:	270a      	movs	r7, #10
 800356a:	9304      	str	r3, [sp, #16]
 800356c:	e018      	b.n	80035a0 <_printf_i+0xd4>
 800356e:	6806      	ldr	r6, [r0, #0]
 8003570:	601a      	str	r2, [r3, #0]
 8003572:	0649      	lsls	r1, r1, #25
 8003574:	d5f1      	bpl.n	800355a <_printf_i+0x8e>
 8003576:	b236      	sxth	r6, r6
 8003578:	e7ef      	b.n	800355a <_printf_i+0x8e>
 800357a:	6808      	ldr	r0, [r1, #0]
 800357c:	6819      	ldr	r1, [r3, #0]
 800357e:	c940      	ldmia	r1!, {r6}
 8003580:	0605      	lsls	r5, r0, #24
 8003582:	d402      	bmi.n	800358a <_printf_i+0xbe>
 8003584:	0640      	lsls	r0, r0, #25
 8003586:	d500      	bpl.n	800358a <_printf_i+0xbe>
 8003588:	b2b6      	uxth	r6, r6
 800358a:	6019      	str	r1, [r3, #0]
 800358c:	4b53      	ldr	r3, [pc, #332]	@ (80036dc <_printf_i+0x210>)
 800358e:	270a      	movs	r7, #10
 8003590:	9304      	str	r3, [sp, #16]
 8003592:	2a6f      	cmp	r2, #111	@ 0x6f
 8003594:	d100      	bne.n	8003598 <_printf_i+0xcc>
 8003596:	3f02      	subs	r7, #2
 8003598:	0023      	movs	r3, r4
 800359a:	2200      	movs	r2, #0
 800359c:	3343      	adds	r3, #67	@ 0x43
 800359e:	701a      	strb	r2, [r3, #0]
 80035a0:	6863      	ldr	r3, [r4, #4]
 80035a2:	60a3      	str	r3, [r4, #8]
 80035a4:	2b00      	cmp	r3, #0
 80035a6:	db06      	blt.n	80035b6 <_printf_i+0xea>
 80035a8:	2104      	movs	r1, #4
 80035aa:	6822      	ldr	r2, [r4, #0]
 80035ac:	9d03      	ldr	r5, [sp, #12]
 80035ae:	438a      	bics	r2, r1
 80035b0:	6022      	str	r2, [r4, #0]
 80035b2:	4333      	orrs	r3, r6
 80035b4:	d00c      	beq.n	80035d0 <_printf_i+0x104>
 80035b6:	9d03      	ldr	r5, [sp, #12]
 80035b8:	0030      	movs	r0, r6
 80035ba:	0039      	movs	r1, r7
 80035bc:	f7fc fe2e 	bl	800021c <__aeabi_uidivmod>
 80035c0:	9b04      	ldr	r3, [sp, #16]
 80035c2:	3d01      	subs	r5, #1
 80035c4:	5c5b      	ldrb	r3, [r3, r1]
 80035c6:	702b      	strb	r3, [r5, #0]
 80035c8:	0033      	movs	r3, r6
 80035ca:	0006      	movs	r6, r0
 80035cc:	429f      	cmp	r7, r3
 80035ce:	d9f3      	bls.n	80035b8 <_printf_i+0xec>
 80035d0:	2f08      	cmp	r7, #8
 80035d2:	d109      	bne.n	80035e8 <_printf_i+0x11c>
 80035d4:	6823      	ldr	r3, [r4, #0]
 80035d6:	07db      	lsls	r3, r3, #31
 80035d8:	d506      	bpl.n	80035e8 <_printf_i+0x11c>
 80035da:	6862      	ldr	r2, [r4, #4]
 80035dc:	6923      	ldr	r3, [r4, #16]
 80035de:	429a      	cmp	r2, r3
 80035e0:	dc02      	bgt.n	80035e8 <_printf_i+0x11c>
 80035e2:	2330      	movs	r3, #48	@ 0x30
 80035e4:	3d01      	subs	r5, #1
 80035e6:	702b      	strb	r3, [r5, #0]
 80035e8:	9b03      	ldr	r3, [sp, #12]
 80035ea:	1b5b      	subs	r3, r3, r5
 80035ec:	6123      	str	r3, [r4, #16]
 80035ee:	9b07      	ldr	r3, [sp, #28]
 80035f0:	0021      	movs	r1, r4
 80035f2:	9300      	str	r3, [sp, #0]
 80035f4:	9805      	ldr	r0, [sp, #20]
 80035f6:	9b06      	ldr	r3, [sp, #24]
 80035f8:	aa09      	add	r2, sp, #36	@ 0x24
 80035fa:	f7ff fef7 	bl	80033ec <_printf_common>
 80035fe:	3001      	adds	r0, #1
 8003600:	d148      	bne.n	8003694 <_printf_i+0x1c8>
 8003602:	2001      	movs	r0, #1
 8003604:	4240      	negs	r0, r0
 8003606:	b00b      	add	sp, #44	@ 0x2c
 8003608:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800360a:	2220      	movs	r2, #32
 800360c:	6809      	ldr	r1, [r1, #0]
 800360e:	430a      	orrs	r2, r1
 8003610:	6022      	str	r2, [r4, #0]
 8003612:	2278      	movs	r2, #120	@ 0x78
 8003614:	4932      	ldr	r1, [pc, #200]	@ (80036e0 <_printf_i+0x214>)
 8003616:	9104      	str	r1, [sp, #16]
 8003618:	0021      	movs	r1, r4
 800361a:	3145      	adds	r1, #69	@ 0x45
 800361c:	700a      	strb	r2, [r1, #0]
 800361e:	6819      	ldr	r1, [r3, #0]
 8003620:	6822      	ldr	r2, [r4, #0]
 8003622:	c940      	ldmia	r1!, {r6}
 8003624:	0610      	lsls	r0, r2, #24
 8003626:	d402      	bmi.n	800362e <_printf_i+0x162>
 8003628:	0650      	lsls	r0, r2, #25
 800362a:	d500      	bpl.n	800362e <_printf_i+0x162>
 800362c:	b2b6      	uxth	r6, r6
 800362e:	6019      	str	r1, [r3, #0]
 8003630:	07d3      	lsls	r3, r2, #31
 8003632:	d502      	bpl.n	800363a <_printf_i+0x16e>
 8003634:	2320      	movs	r3, #32
 8003636:	4313      	orrs	r3, r2
 8003638:	6023      	str	r3, [r4, #0]
 800363a:	2e00      	cmp	r6, #0
 800363c:	d001      	beq.n	8003642 <_printf_i+0x176>
 800363e:	2710      	movs	r7, #16
 8003640:	e7aa      	b.n	8003598 <_printf_i+0xcc>
 8003642:	2220      	movs	r2, #32
 8003644:	6823      	ldr	r3, [r4, #0]
 8003646:	4393      	bics	r3, r2
 8003648:	6023      	str	r3, [r4, #0]
 800364a:	e7f8      	b.n	800363e <_printf_i+0x172>
 800364c:	681a      	ldr	r2, [r3, #0]
 800364e:	680d      	ldr	r5, [r1, #0]
 8003650:	1d10      	adds	r0, r2, #4
 8003652:	6949      	ldr	r1, [r1, #20]
 8003654:	6018      	str	r0, [r3, #0]
 8003656:	6813      	ldr	r3, [r2, #0]
 8003658:	062e      	lsls	r6, r5, #24
 800365a:	d501      	bpl.n	8003660 <_printf_i+0x194>
 800365c:	6019      	str	r1, [r3, #0]
 800365e:	e002      	b.n	8003666 <_printf_i+0x19a>
 8003660:	066d      	lsls	r5, r5, #25
 8003662:	d5fb      	bpl.n	800365c <_printf_i+0x190>
 8003664:	8019      	strh	r1, [r3, #0]
 8003666:	2300      	movs	r3, #0
 8003668:	9d03      	ldr	r5, [sp, #12]
 800366a:	6123      	str	r3, [r4, #16]
 800366c:	e7bf      	b.n	80035ee <_printf_i+0x122>
 800366e:	681a      	ldr	r2, [r3, #0]
 8003670:	1d11      	adds	r1, r2, #4
 8003672:	6019      	str	r1, [r3, #0]
 8003674:	6815      	ldr	r5, [r2, #0]
 8003676:	2100      	movs	r1, #0
 8003678:	0028      	movs	r0, r5
 800367a:	6862      	ldr	r2, [r4, #4]
 800367c:	f000 f996 	bl	80039ac <memchr>
 8003680:	2800      	cmp	r0, #0
 8003682:	d001      	beq.n	8003688 <_printf_i+0x1bc>
 8003684:	1b40      	subs	r0, r0, r5
 8003686:	6060      	str	r0, [r4, #4]
 8003688:	6863      	ldr	r3, [r4, #4]
 800368a:	6123      	str	r3, [r4, #16]
 800368c:	2300      	movs	r3, #0
 800368e:	9a03      	ldr	r2, [sp, #12]
 8003690:	7013      	strb	r3, [r2, #0]
 8003692:	e7ac      	b.n	80035ee <_printf_i+0x122>
 8003694:	002a      	movs	r2, r5
 8003696:	6923      	ldr	r3, [r4, #16]
 8003698:	9906      	ldr	r1, [sp, #24]
 800369a:	9805      	ldr	r0, [sp, #20]
 800369c:	9d07      	ldr	r5, [sp, #28]
 800369e:	47a8      	blx	r5
 80036a0:	3001      	adds	r0, #1
 80036a2:	d0ae      	beq.n	8003602 <_printf_i+0x136>
 80036a4:	6823      	ldr	r3, [r4, #0]
 80036a6:	079b      	lsls	r3, r3, #30
 80036a8:	d415      	bmi.n	80036d6 <_printf_i+0x20a>
 80036aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80036ac:	68e0      	ldr	r0, [r4, #12]
 80036ae:	4298      	cmp	r0, r3
 80036b0:	daa9      	bge.n	8003606 <_printf_i+0x13a>
 80036b2:	0018      	movs	r0, r3
 80036b4:	e7a7      	b.n	8003606 <_printf_i+0x13a>
 80036b6:	0022      	movs	r2, r4
 80036b8:	2301      	movs	r3, #1
 80036ba:	9906      	ldr	r1, [sp, #24]
 80036bc:	9805      	ldr	r0, [sp, #20]
 80036be:	9e07      	ldr	r6, [sp, #28]
 80036c0:	3219      	adds	r2, #25
 80036c2:	47b0      	blx	r6
 80036c4:	3001      	adds	r0, #1
 80036c6:	d09c      	beq.n	8003602 <_printf_i+0x136>
 80036c8:	3501      	adds	r5, #1
 80036ca:	68e3      	ldr	r3, [r4, #12]
 80036cc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80036ce:	1a9b      	subs	r3, r3, r2
 80036d0:	42ab      	cmp	r3, r5
 80036d2:	dcf0      	bgt.n	80036b6 <_printf_i+0x1ea>
 80036d4:	e7e9      	b.n	80036aa <_printf_i+0x1de>
 80036d6:	2500      	movs	r5, #0
 80036d8:	e7f7      	b.n	80036ca <_printf_i+0x1fe>
 80036da:	46c0      	nop			@ (mov r8, r8)
 80036dc:	08003cc2 	.word	0x08003cc2
 80036e0:	08003cd3 	.word	0x08003cd3

080036e4 <__sflush_r>:
 80036e4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80036e6:	220c      	movs	r2, #12
 80036e8:	5e8b      	ldrsh	r3, [r1, r2]
 80036ea:	0005      	movs	r5, r0
 80036ec:	000c      	movs	r4, r1
 80036ee:	071a      	lsls	r2, r3, #28
 80036f0:	d456      	bmi.n	80037a0 <__sflush_r+0xbc>
 80036f2:	684a      	ldr	r2, [r1, #4]
 80036f4:	2a00      	cmp	r2, #0
 80036f6:	dc02      	bgt.n	80036fe <__sflush_r+0x1a>
 80036f8:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
 80036fa:	2a00      	cmp	r2, #0
 80036fc:	dd4e      	ble.n	800379c <__sflush_r+0xb8>
 80036fe:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8003700:	2f00      	cmp	r7, #0
 8003702:	d04b      	beq.n	800379c <__sflush_r+0xb8>
 8003704:	2200      	movs	r2, #0
 8003706:	2080      	movs	r0, #128	@ 0x80
 8003708:	682e      	ldr	r6, [r5, #0]
 800370a:	602a      	str	r2, [r5, #0]
 800370c:	001a      	movs	r2, r3
 800370e:	0140      	lsls	r0, r0, #5
 8003710:	6a21      	ldr	r1, [r4, #32]
 8003712:	4002      	ands	r2, r0
 8003714:	4203      	tst	r3, r0
 8003716:	d033      	beq.n	8003780 <__sflush_r+0x9c>
 8003718:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800371a:	89a3      	ldrh	r3, [r4, #12]
 800371c:	075b      	lsls	r3, r3, #29
 800371e:	d506      	bpl.n	800372e <__sflush_r+0x4a>
 8003720:	6863      	ldr	r3, [r4, #4]
 8003722:	1ad2      	subs	r2, r2, r3
 8003724:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8003726:	2b00      	cmp	r3, #0
 8003728:	d001      	beq.n	800372e <__sflush_r+0x4a>
 800372a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800372c:	1ad2      	subs	r2, r2, r3
 800372e:	2300      	movs	r3, #0
 8003730:	0028      	movs	r0, r5
 8003732:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8003734:	6a21      	ldr	r1, [r4, #32]
 8003736:	47b8      	blx	r7
 8003738:	89a2      	ldrh	r2, [r4, #12]
 800373a:	1c43      	adds	r3, r0, #1
 800373c:	d106      	bne.n	800374c <__sflush_r+0x68>
 800373e:	6829      	ldr	r1, [r5, #0]
 8003740:	291d      	cmp	r1, #29
 8003742:	d846      	bhi.n	80037d2 <__sflush_r+0xee>
 8003744:	4b29      	ldr	r3, [pc, #164]	@ (80037ec <__sflush_r+0x108>)
 8003746:	40cb      	lsrs	r3, r1
 8003748:	07db      	lsls	r3, r3, #31
 800374a:	d542      	bpl.n	80037d2 <__sflush_r+0xee>
 800374c:	2300      	movs	r3, #0
 800374e:	6063      	str	r3, [r4, #4]
 8003750:	6923      	ldr	r3, [r4, #16]
 8003752:	6023      	str	r3, [r4, #0]
 8003754:	04d2      	lsls	r2, r2, #19
 8003756:	d505      	bpl.n	8003764 <__sflush_r+0x80>
 8003758:	1c43      	adds	r3, r0, #1
 800375a:	d102      	bne.n	8003762 <__sflush_r+0x7e>
 800375c:	682b      	ldr	r3, [r5, #0]
 800375e:	2b00      	cmp	r3, #0
 8003760:	d100      	bne.n	8003764 <__sflush_r+0x80>
 8003762:	6560      	str	r0, [r4, #84]	@ 0x54
 8003764:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003766:	602e      	str	r6, [r5, #0]
 8003768:	2900      	cmp	r1, #0
 800376a:	d017      	beq.n	800379c <__sflush_r+0xb8>
 800376c:	0023      	movs	r3, r4
 800376e:	3344      	adds	r3, #68	@ 0x44
 8003770:	4299      	cmp	r1, r3
 8003772:	d002      	beq.n	800377a <__sflush_r+0x96>
 8003774:	0028      	movs	r0, r5
 8003776:	f7ff fbf9 	bl	8002f6c <_free_r>
 800377a:	2300      	movs	r3, #0
 800377c:	6363      	str	r3, [r4, #52]	@ 0x34
 800377e:	e00d      	b.n	800379c <__sflush_r+0xb8>
 8003780:	2301      	movs	r3, #1
 8003782:	0028      	movs	r0, r5
 8003784:	47b8      	blx	r7
 8003786:	0002      	movs	r2, r0
 8003788:	1c43      	adds	r3, r0, #1
 800378a:	d1c6      	bne.n	800371a <__sflush_r+0x36>
 800378c:	682b      	ldr	r3, [r5, #0]
 800378e:	2b00      	cmp	r3, #0
 8003790:	d0c3      	beq.n	800371a <__sflush_r+0x36>
 8003792:	2b1d      	cmp	r3, #29
 8003794:	d001      	beq.n	800379a <__sflush_r+0xb6>
 8003796:	2b16      	cmp	r3, #22
 8003798:	d11a      	bne.n	80037d0 <__sflush_r+0xec>
 800379a:	602e      	str	r6, [r5, #0]
 800379c:	2000      	movs	r0, #0
 800379e:	e01e      	b.n	80037de <__sflush_r+0xfa>
 80037a0:	690e      	ldr	r6, [r1, #16]
 80037a2:	2e00      	cmp	r6, #0
 80037a4:	d0fa      	beq.n	800379c <__sflush_r+0xb8>
 80037a6:	680f      	ldr	r7, [r1, #0]
 80037a8:	600e      	str	r6, [r1, #0]
 80037aa:	1bba      	subs	r2, r7, r6
 80037ac:	9201      	str	r2, [sp, #4]
 80037ae:	2200      	movs	r2, #0
 80037b0:	079b      	lsls	r3, r3, #30
 80037b2:	d100      	bne.n	80037b6 <__sflush_r+0xd2>
 80037b4:	694a      	ldr	r2, [r1, #20]
 80037b6:	60a2      	str	r2, [r4, #8]
 80037b8:	9b01      	ldr	r3, [sp, #4]
 80037ba:	2b00      	cmp	r3, #0
 80037bc:	ddee      	ble.n	800379c <__sflush_r+0xb8>
 80037be:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80037c0:	0032      	movs	r2, r6
 80037c2:	001f      	movs	r7, r3
 80037c4:	0028      	movs	r0, r5
 80037c6:	9b01      	ldr	r3, [sp, #4]
 80037c8:	6a21      	ldr	r1, [r4, #32]
 80037ca:	47b8      	blx	r7
 80037cc:	2800      	cmp	r0, #0
 80037ce:	dc07      	bgt.n	80037e0 <__sflush_r+0xfc>
 80037d0:	89a2      	ldrh	r2, [r4, #12]
 80037d2:	2340      	movs	r3, #64	@ 0x40
 80037d4:	2001      	movs	r0, #1
 80037d6:	4313      	orrs	r3, r2
 80037d8:	b21b      	sxth	r3, r3
 80037da:	81a3      	strh	r3, [r4, #12]
 80037dc:	4240      	negs	r0, r0
 80037de:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80037e0:	9b01      	ldr	r3, [sp, #4]
 80037e2:	1836      	adds	r6, r6, r0
 80037e4:	1a1b      	subs	r3, r3, r0
 80037e6:	9301      	str	r3, [sp, #4]
 80037e8:	e7e6      	b.n	80037b8 <__sflush_r+0xd4>
 80037ea:	46c0      	nop			@ (mov r8, r8)
 80037ec:	20400001 	.word	0x20400001

080037f0 <_fflush_r>:
 80037f0:	690b      	ldr	r3, [r1, #16]
 80037f2:	b570      	push	{r4, r5, r6, lr}
 80037f4:	0005      	movs	r5, r0
 80037f6:	000c      	movs	r4, r1
 80037f8:	2b00      	cmp	r3, #0
 80037fa:	d102      	bne.n	8003802 <_fflush_r+0x12>
 80037fc:	2500      	movs	r5, #0
 80037fe:	0028      	movs	r0, r5
 8003800:	bd70      	pop	{r4, r5, r6, pc}
 8003802:	2800      	cmp	r0, #0
 8003804:	d004      	beq.n	8003810 <_fflush_r+0x20>
 8003806:	6a03      	ldr	r3, [r0, #32]
 8003808:	2b00      	cmp	r3, #0
 800380a:	d101      	bne.n	8003810 <_fflush_r+0x20>
 800380c:	f7ff fa9a 	bl	8002d44 <__sinit>
 8003810:	220c      	movs	r2, #12
 8003812:	5ea3      	ldrsh	r3, [r4, r2]
 8003814:	2b00      	cmp	r3, #0
 8003816:	d0f1      	beq.n	80037fc <_fflush_r+0xc>
 8003818:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800381a:	07d2      	lsls	r2, r2, #31
 800381c:	d404      	bmi.n	8003828 <_fflush_r+0x38>
 800381e:	059b      	lsls	r3, r3, #22
 8003820:	d402      	bmi.n	8003828 <_fflush_r+0x38>
 8003822:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003824:	f7ff fb9f 	bl	8002f66 <__retarget_lock_acquire_recursive>
 8003828:	0028      	movs	r0, r5
 800382a:	0021      	movs	r1, r4
 800382c:	f7ff ff5a 	bl	80036e4 <__sflush_r>
 8003830:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8003832:	0005      	movs	r5, r0
 8003834:	07db      	lsls	r3, r3, #31
 8003836:	d4e2      	bmi.n	80037fe <_fflush_r+0xe>
 8003838:	89a3      	ldrh	r3, [r4, #12]
 800383a:	059b      	lsls	r3, r3, #22
 800383c:	d4df      	bmi.n	80037fe <_fflush_r+0xe>
 800383e:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003840:	f7ff fb92 	bl	8002f68 <__retarget_lock_release_recursive>
 8003844:	e7db      	b.n	80037fe <_fflush_r+0xe>

08003846 <__swbuf_r>:
 8003846:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003848:	0006      	movs	r6, r0
 800384a:	000d      	movs	r5, r1
 800384c:	0014      	movs	r4, r2
 800384e:	2800      	cmp	r0, #0
 8003850:	d004      	beq.n	800385c <__swbuf_r+0x16>
 8003852:	6a03      	ldr	r3, [r0, #32]
 8003854:	2b00      	cmp	r3, #0
 8003856:	d101      	bne.n	800385c <__swbuf_r+0x16>
 8003858:	f7ff fa74 	bl	8002d44 <__sinit>
 800385c:	69a3      	ldr	r3, [r4, #24]
 800385e:	60a3      	str	r3, [r4, #8]
 8003860:	89a3      	ldrh	r3, [r4, #12]
 8003862:	071b      	lsls	r3, r3, #28
 8003864:	d502      	bpl.n	800386c <__swbuf_r+0x26>
 8003866:	6923      	ldr	r3, [r4, #16]
 8003868:	2b00      	cmp	r3, #0
 800386a:	d109      	bne.n	8003880 <__swbuf_r+0x3a>
 800386c:	0021      	movs	r1, r4
 800386e:	0030      	movs	r0, r6
 8003870:	f000 f82c 	bl	80038cc <__swsetup_r>
 8003874:	2800      	cmp	r0, #0
 8003876:	d003      	beq.n	8003880 <__swbuf_r+0x3a>
 8003878:	2501      	movs	r5, #1
 800387a:	426d      	negs	r5, r5
 800387c:	0028      	movs	r0, r5
 800387e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003880:	6923      	ldr	r3, [r4, #16]
 8003882:	6820      	ldr	r0, [r4, #0]
 8003884:	b2ef      	uxtb	r7, r5
 8003886:	1ac0      	subs	r0, r0, r3
 8003888:	6963      	ldr	r3, [r4, #20]
 800388a:	b2ed      	uxtb	r5, r5
 800388c:	4283      	cmp	r3, r0
 800388e:	dc05      	bgt.n	800389c <__swbuf_r+0x56>
 8003890:	0021      	movs	r1, r4
 8003892:	0030      	movs	r0, r6
 8003894:	f7ff ffac 	bl	80037f0 <_fflush_r>
 8003898:	2800      	cmp	r0, #0
 800389a:	d1ed      	bne.n	8003878 <__swbuf_r+0x32>
 800389c:	68a3      	ldr	r3, [r4, #8]
 800389e:	3001      	adds	r0, #1
 80038a0:	3b01      	subs	r3, #1
 80038a2:	60a3      	str	r3, [r4, #8]
 80038a4:	6823      	ldr	r3, [r4, #0]
 80038a6:	1c5a      	adds	r2, r3, #1
 80038a8:	6022      	str	r2, [r4, #0]
 80038aa:	701f      	strb	r7, [r3, #0]
 80038ac:	6963      	ldr	r3, [r4, #20]
 80038ae:	4283      	cmp	r3, r0
 80038b0:	d004      	beq.n	80038bc <__swbuf_r+0x76>
 80038b2:	89a3      	ldrh	r3, [r4, #12]
 80038b4:	07db      	lsls	r3, r3, #31
 80038b6:	d5e1      	bpl.n	800387c <__swbuf_r+0x36>
 80038b8:	2d0a      	cmp	r5, #10
 80038ba:	d1df      	bne.n	800387c <__swbuf_r+0x36>
 80038bc:	0021      	movs	r1, r4
 80038be:	0030      	movs	r0, r6
 80038c0:	f7ff ff96 	bl	80037f0 <_fflush_r>
 80038c4:	2800      	cmp	r0, #0
 80038c6:	d0d9      	beq.n	800387c <__swbuf_r+0x36>
 80038c8:	e7d6      	b.n	8003878 <__swbuf_r+0x32>
	...

080038cc <__swsetup_r>:
 80038cc:	4b2d      	ldr	r3, [pc, #180]	@ (8003984 <__swsetup_r+0xb8>)
 80038ce:	b570      	push	{r4, r5, r6, lr}
 80038d0:	0005      	movs	r5, r0
 80038d2:	6818      	ldr	r0, [r3, #0]
 80038d4:	000c      	movs	r4, r1
 80038d6:	2800      	cmp	r0, #0
 80038d8:	d004      	beq.n	80038e4 <__swsetup_r+0x18>
 80038da:	6a03      	ldr	r3, [r0, #32]
 80038dc:	2b00      	cmp	r3, #0
 80038de:	d101      	bne.n	80038e4 <__swsetup_r+0x18>
 80038e0:	f7ff fa30 	bl	8002d44 <__sinit>
 80038e4:	220c      	movs	r2, #12
 80038e6:	5ea3      	ldrsh	r3, [r4, r2]
 80038e8:	071a      	lsls	r2, r3, #28
 80038ea:	d423      	bmi.n	8003934 <__swsetup_r+0x68>
 80038ec:	06da      	lsls	r2, r3, #27
 80038ee:	d407      	bmi.n	8003900 <__swsetup_r+0x34>
 80038f0:	2209      	movs	r2, #9
 80038f2:	602a      	str	r2, [r5, #0]
 80038f4:	2240      	movs	r2, #64	@ 0x40
 80038f6:	2001      	movs	r0, #1
 80038f8:	4313      	orrs	r3, r2
 80038fa:	81a3      	strh	r3, [r4, #12]
 80038fc:	4240      	negs	r0, r0
 80038fe:	e03a      	b.n	8003976 <__swsetup_r+0xaa>
 8003900:	075b      	lsls	r3, r3, #29
 8003902:	d513      	bpl.n	800392c <__swsetup_r+0x60>
 8003904:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003906:	2900      	cmp	r1, #0
 8003908:	d008      	beq.n	800391c <__swsetup_r+0x50>
 800390a:	0023      	movs	r3, r4
 800390c:	3344      	adds	r3, #68	@ 0x44
 800390e:	4299      	cmp	r1, r3
 8003910:	d002      	beq.n	8003918 <__swsetup_r+0x4c>
 8003912:	0028      	movs	r0, r5
 8003914:	f7ff fb2a 	bl	8002f6c <_free_r>
 8003918:	2300      	movs	r3, #0
 800391a:	6363      	str	r3, [r4, #52]	@ 0x34
 800391c:	2224      	movs	r2, #36	@ 0x24
 800391e:	89a3      	ldrh	r3, [r4, #12]
 8003920:	4393      	bics	r3, r2
 8003922:	81a3      	strh	r3, [r4, #12]
 8003924:	2300      	movs	r3, #0
 8003926:	6063      	str	r3, [r4, #4]
 8003928:	6923      	ldr	r3, [r4, #16]
 800392a:	6023      	str	r3, [r4, #0]
 800392c:	2308      	movs	r3, #8
 800392e:	89a2      	ldrh	r2, [r4, #12]
 8003930:	4313      	orrs	r3, r2
 8003932:	81a3      	strh	r3, [r4, #12]
 8003934:	6923      	ldr	r3, [r4, #16]
 8003936:	2b00      	cmp	r3, #0
 8003938:	d10b      	bne.n	8003952 <__swsetup_r+0x86>
 800393a:	21a0      	movs	r1, #160	@ 0xa0
 800393c:	2280      	movs	r2, #128	@ 0x80
 800393e:	89a3      	ldrh	r3, [r4, #12]
 8003940:	0089      	lsls	r1, r1, #2
 8003942:	0092      	lsls	r2, r2, #2
 8003944:	400b      	ands	r3, r1
 8003946:	4293      	cmp	r3, r2
 8003948:	d003      	beq.n	8003952 <__swsetup_r+0x86>
 800394a:	0021      	movs	r1, r4
 800394c:	0028      	movs	r0, r5
 800394e:	f000 f863 	bl	8003a18 <__smakebuf_r>
 8003952:	220c      	movs	r2, #12
 8003954:	5ea3      	ldrsh	r3, [r4, r2]
 8003956:	2101      	movs	r1, #1
 8003958:	001a      	movs	r2, r3
 800395a:	400a      	ands	r2, r1
 800395c:	420b      	tst	r3, r1
 800395e:	d00b      	beq.n	8003978 <__swsetup_r+0xac>
 8003960:	2200      	movs	r2, #0
 8003962:	60a2      	str	r2, [r4, #8]
 8003964:	6962      	ldr	r2, [r4, #20]
 8003966:	4252      	negs	r2, r2
 8003968:	61a2      	str	r2, [r4, #24]
 800396a:	2000      	movs	r0, #0
 800396c:	6922      	ldr	r2, [r4, #16]
 800396e:	4282      	cmp	r2, r0
 8003970:	d101      	bne.n	8003976 <__swsetup_r+0xaa>
 8003972:	061a      	lsls	r2, r3, #24
 8003974:	d4be      	bmi.n	80038f4 <__swsetup_r+0x28>
 8003976:	bd70      	pop	{r4, r5, r6, pc}
 8003978:	0799      	lsls	r1, r3, #30
 800397a:	d400      	bmi.n	800397e <__swsetup_r+0xb2>
 800397c:	6962      	ldr	r2, [r4, #20]
 800397e:	60a2      	str	r2, [r4, #8]
 8003980:	e7f3      	b.n	800396a <__swsetup_r+0x9e>
 8003982:	46c0      	nop			@ (mov r8, r8)
 8003984:	2000000c 	.word	0x2000000c

08003988 <_sbrk_r>:
 8003988:	2300      	movs	r3, #0
 800398a:	b570      	push	{r4, r5, r6, lr}
 800398c:	4d06      	ldr	r5, [pc, #24]	@ (80039a8 <_sbrk_r+0x20>)
 800398e:	0004      	movs	r4, r0
 8003990:	0008      	movs	r0, r1
 8003992:	602b      	str	r3, [r5, #0]
 8003994:	f7fe fe54 	bl	8002640 <_sbrk>
 8003998:	1c43      	adds	r3, r0, #1
 800399a:	d103      	bne.n	80039a4 <_sbrk_r+0x1c>
 800399c:	682b      	ldr	r3, [r5, #0]
 800399e:	2b00      	cmp	r3, #0
 80039a0:	d000      	beq.n	80039a4 <_sbrk_r+0x1c>
 80039a2:	6023      	str	r3, [r4, #0]
 80039a4:	bd70      	pop	{r4, r5, r6, pc}
 80039a6:	46c0      	nop			@ (mov r8, r8)
 80039a8:	200001e4 	.word	0x200001e4

080039ac <memchr>:
 80039ac:	b2c9      	uxtb	r1, r1
 80039ae:	1882      	adds	r2, r0, r2
 80039b0:	4290      	cmp	r0, r2
 80039b2:	d101      	bne.n	80039b8 <memchr+0xc>
 80039b4:	2000      	movs	r0, #0
 80039b6:	4770      	bx	lr
 80039b8:	7803      	ldrb	r3, [r0, #0]
 80039ba:	428b      	cmp	r3, r1
 80039bc:	d0fb      	beq.n	80039b6 <memchr+0xa>
 80039be:	3001      	adds	r0, #1
 80039c0:	e7f6      	b.n	80039b0 <memchr+0x4>
	...

080039c4 <__swhatbuf_r>:
 80039c4:	b570      	push	{r4, r5, r6, lr}
 80039c6:	000e      	movs	r6, r1
 80039c8:	001d      	movs	r5, r3
 80039ca:	230e      	movs	r3, #14
 80039cc:	5ec9      	ldrsh	r1, [r1, r3]
 80039ce:	0014      	movs	r4, r2
 80039d0:	b096      	sub	sp, #88	@ 0x58
 80039d2:	2900      	cmp	r1, #0
 80039d4:	da0c      	bge.n	80039f0 <__swhatbuf_r+0x2c>
 80039d6:	89b2      	ldrh	r2, [r6, #12]
 80039d8:	2380      	movs	r3, #128	@ 0x80
 80039da:	0011      	movs	r1, r2
 80039dc:	4019      	ands	r1, r3
 80039de:	421a      	tst	r2, r3
 80039e0:	d114      	bne.n	8003a0c <__swhatbuf_r+0x48>
 80039e2:	2380      	movs	r3, #128	@ 0x80
 80039e4:	00db      	lsls	r3, r3, #3
 80039e6:	2000      	movs	r0, #0
 80039e8:	6029      	str	r1, [r5, #0]
 80039ea:	6023      	str	r3, [r4, #0]
 80039ec:	b016      	add	sp, #88	@ 0x58
 80039ee:	bd70      	pop	{r4, r5, r6, pc}
 80039f0:	466a      	mov	r2, sp
 80039f2:	f000 f853 	bl	8003a9c <_fstat_r>
 80039f6:	2800      	cmp	r0, #0
 80039f8:	dbed      	blt.n	80039d6 <__swhatbuf_r+0x12>
 80039fa:	23f0      	movs	r3, #240	@ 0xf0
 80039fc:	9901      	ldr	r1, [sp, #4]
 80039fe:	021b      	lsls	r3, r3, #8
 8003a00:	4019      	ands	r1, r3
 8003a02:	4b04      	ldr	r3, [pc, #16]	@ (8003a14 <__swhatbuf_r+0x50>)
 8003a04:	18c9      	adds	r1, r1, r3
 8003a06:	424b      	negs	r3, r1
 8003a08:	4159      	adcs	r1, r3
 8003a0a:	e7ea      	b.n	80039e2 <__swhatbuf_r+0x1e>
 8003a0c:	2100      	movs	r1, #0
 8003a0e:	2340      	movs	r3, #64	@ 0x40
 8003a10:	e7e9      	b.n	80039e6 <__swhatbuf_r+0x22>
 8003a12:	46c0      	nop			@ (mov r8, r8)
 8003a14:	ffffe000 	.word	0xffffe000

08003a18 <__smakebuf_r>:
 8003a18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003a1a:	2602      	movs	r6, #2
 8003a1c:	898b      	ldrh	r3, [r1, #12]
 8003a1e:	0005      	movs	r5, r0
 8003a20:	000c      	movs	r4, r1
 8003a22:	b085      	sub	sp, #20
 8003a24:	4233      	tst	r3, r6
 8003a26:	d007      	beq.n	8003a38 <__smakebuf_r+0x20>
 8003a28:	0023      	movs	r3, r4
 8003a2a:	3347      	adds	r3, #71	@ 0x47
 8003a2c:	6023      	str	r3, [r4, #0]
 8003a2e:	6123      	str	r3, [r4, #16]
 8003a30:	2301      	movs	r3, #1
 8003a32:	6163      	str	r3, [r4, #20]
 8003a34:	b005      	add	sp, #20
 8003a36:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003a38:	ab03      	add	r3, sp, #12
 8003a3a:	aa02      	add	r2, sp, #8
 8003a3c:	f7ff ffc2 	bl	80039c4 <__swhatbuf_r>
 8003a40:	9f02      	ldr	r7, [sp, #8]
 8003a42:	9001      	str	r0, [sp, #4]
 8003a44:	0039      	movs	r1, r7
 8003a46:	0028      	movs	r0, r5
 8003a48:	f7ff fafc 	bl	8003044 <_malloc_r>
 8003a4c:	2800      	cmp	r0, #0
 8003a4e:	d108      	bne.n	8003a62 <__smakebuf_r+0x4a>
 8003a50:	220c      	movs	r2, #12
 8003a52:	5ea3      	ldrsh	r3, [r4, r2]
 8003a54:	059a      	lsls	r2, r3, #22
 8003a56:	d4ed      	bmi.n	8003a34 <__smakebuf_r+0x1c>
 8003a58:	2203      	movs	r2, #3
 8003a5a:	4393      	bics	r3, r2
 8003a5c:	431e      	orrs	r6, r3
 8003a5e:	81a6      	strh	r6, [r4, #12]
 8003a60:	e7e2      	b.n	8003a28 <__smakebuf_r+0x10>
 8003a62:	2380      	movs	r3, #128	@ 0x80
 8003a64:	89a2      	ldrh	r2, [r4, #12]
 8003a66:	6020      	str	r0, [r4, #0]
 8003a68:	4313      	orrs	r3, r2
 8003a6a:	81a3      	strh	r3, [r4, #12]
 8003a6c:	9b03      	ldr	r3, [sp, #12]
 8003a6e:	6120      	str	r0, [r4, #16]
 8003a70:	6167      	str	r7, [r4, #20]
 8003a72:	2b00      	cmp	r3, #0
 8003a74:	d00c      	beq.n	8003a90 <__smakebuf_r+0x78>
 8003a76:	0028      	movs	r0, r5
 8003a78:	230e      	movs	r3, #14
 8003a7a:	5ee1      	ldrsh	r1, [r4, r3]
 8003a7c:	f000 f820 	bl	8003ac0 <_isatty_r>
 8003a80:	2800      	cmp	r0, #0
 8003a82:	d005      	beq.n	8003a90 <__smakebuf_r+0x78>
 8003a84:	2303      	movs	r3, #3
 8003a86:	89a2      	ldrh	r2, [r4, #12]
 8003a88:	439a      	bics	r2, r3
 8003a8a:	3b02      	subs	r3, #2
 8003a8c:	4313      	orrs	r3, r2
 8003a8e:	81a3      	strh	r3, [r4, #12]
 8003a90:	89a3      	ldrh	r3, [r4, #12]
 8003a92:	9a01      	ldr	r2, [sp, #4]
 8003a94:	4313      	orrs	r3, r2
 8003a96:	81a3      	strh	r3, [r4, #12]
 8003a98:	e7cc      	b.n	8003a34 <__smakebuf_r+0x1c>
	...

08003a9c <_fstat_r>:
 8003a9c:	2300      	movs	r3, #0
 8003a9e:	b570      	push	{r4, r5, r6, lr}
 8003aa0:	4d06      	ldr	r5, [pc, #24]	@ (8003abc <_fstat_r+0x20>)
 8003aa2:	0004      	movs	r4, r0
 8003aa4:	0008      	movs	r0, r1
 8003aa6:	0011      	movs	r1, r2
 8003aa8:	602b      	str	r3, [r5, #0]
 8003aaa:	f7fe fda6 	bl	80025fa <_fstat>
 8003aae:	1c43      	adds	r3, r0, #1
 8003ab0:	d103      	bne.n	8003aba <_fstat_r+0x1e>
 8003ab2:	682b      	ldr	r3, [r5, #0]
 8003ab4:	2b00      	cmp	r3, #0
 8003ab6:	d000      	beq.n	8003aba <_fstat_r+0x1e>
 8003ab8:	6023      	str	r3, [r4, #0]
 8003aba:	bd70      	pop	{r4, r5, r6, pc}
 8003abc:	200001e4 	.word	0x200001e4

08003ac0 <_isatty_r>:
 8003ac0:	2300      	movs	r3, #0
 8003ac2:	b570      	push	{r4, r5, r6, lr}
 8003ac4:	4d06      	ldr	r5, [pc, #24]	@ (8003ae0 <_isatty_r+0x20>)
 8003ac6:	0004      	movs	r4, r0
 8003ac8:	0008      	movs	r0, r1
 8003aca:	602b      	str	r3, [r5, #0]
 8003acc:	f7fe fda3 	bl	8002616 <_isatty>
 8003ad0:	1c43      	adds	r3, r0, #1
 8003ad2:	d103      	bne.n	8003adc <_isatty_r+0x1c>
 8003ad4:	682b      	ldr	r3, [r5, #0]
 8003ad6:	2b00      	cmp	r3, #0
 8003ad8:	d000      	beq.n	8003adc <_isatty_r+0x1c>
 8003ada:	6023      	str	r3, [r4, #0]
 8003adc:	bd70      	pop	{r4, r5, r6, pc}
 8003ade:	46c0      	nop			@ (mov r8, r8)
 8003ae0:	200001e4 	.word	0x200001e4

08003ae4 <_init>:
 8003ae4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003ae6:	46c0      	nop			@ (mov r8, r8)
 8003ae8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003aea:	bc08      	pop	{r3}
 8003aec:	469e      	mov	lr, r3
 8003aee:	4770      	bx	lr

08003af0 <_fini>:
 8003af0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003af2:	46c0      	nop			@ (mov r8, r8)
 8003af4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003af6:	bc08      	pop	{r3}
 8003af8:	469e      	mov	lr, r3
 8003afa:	4770      	bx	lr
